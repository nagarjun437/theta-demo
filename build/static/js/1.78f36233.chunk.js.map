{"version":3,"sources":["../node_modules/react-overlays/esm/DropdownMenu.js","../node_modules/react-overlays/esm/DropdownToggle.js","../node_modules/react-bootstrap/esm/useWrappedRefWithWarning.js","../node_modules/dom-helpers/esm/matches.js","../node_modules/@restart/hooks/esm/useGlobalListener.js","../node_modules/@restart/hooks/esm/useEventListener.js","../node_modules/react-overlays/esm/Dropdown.js","../node_modules/react-bootstrap/esm/DropdownItem.js","../node_modules/react-bootstrap/esm/Dropdown.js","../node_modules/react-bootstrap/esm/SelectableContext.js","../node_modules/react-bootstrap/esm/createChainedFunction.js","../node_modules/react-bootstrap/esm/SafeAnchor.js","../node_modules/react-bootstrap/esm/NavContext.js","../node_modules/dom-helpers/esm/querySelectorAll.js","../node_modules/react-bootstrap/esm/Button.js","../node_modules/@restart/hooks/esm/useForceUpdate.js","../node_modules/react-bootstrap/esm/NavbarContext.js","../node_modules/@restart/hooks/esm/usePrevious.js","../node_modules/react-bootstrap/esm/DropdownMenu.js","../node_modules/react-bootstrap/esm/DropdownToggle.js","../node_modules/react-overlays/esm/DropdownContext.js"],"names":["noop","useDropdownMenu","options","context","useContext","DropdownContext","_useCallbackRef","useCallbackRef","arrowElement","attachArrowRef","hasShownRef","useRef","_options","flip","offset","rootCloseEvent","_options$fixed","fixed","_options$popperConfig","popperConfig","_options$usePopper","usePopper","shouldUsePopper","show","alignEnd","current","_ref","drop","setMenu","menuElement","toggleElement","placement","popper","mergeOptionsWithPopperConfig","enabled","enableEvents","menuProps","_extends","ref","id","attributes","style","styles","metadata","hasShown","toggle","arrowProps","arrow","useRootClose","e","clickTrigger","disabled","propTypes","children","PropTypes","func","isRequired","bool","oneOf","object","string","DropdownMenu","_ref2","_useDropdownMenu","_objectWithoutPropertiesLoose","props","meta","React","createElement","Fragment","displayName","defaultProps","useDropdownToggle","_ref$show","_ref$toggle","setToggle","handleClick","useCallback","onClick","DropdownToggle","_useDropdownToggle","useWrappedRefWithWarning","componentName","matchesImpl","useGlobalListener","event","handler","capture","eventTarget","listener","useEventCallback","useEffect","target","addEventListener","removeEventListener","useEventListener","document","node","focusFirstItemOnShow","itemSelector","defaultShow","onToggle","useRefWithUpdate","forceUpdate","useForceUpdate","attachRef","element","Dropdown","rawShow","rawOnToggle","_ref$itemSelector","_useUncontrolledProp","useUncontrolledProp","_useRefWithUpdate","menuRef","_useRefWithUpdate2","toggleRef","lastShow","usePrevious","lastSourceEvent","focusInDropdown","nextShow","useMemo","contains","activeElement","focusToggle","focus","maybeFocusFirst","type","focusType","selector","body","nativeMatch","matches","matchesSelector","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","n","s","call","test","first","qsa","getNextFocusedChild","items","index","indexOf","Math","max","min","length","_menuRef$current","_toggleRef$current","key","fromMenu","fromToggle","tagName","next","preventDefault","_next","_menuRef$current2","once","stopPropagation","Provider","value","Menu","Toggle","_excluded","as","SafeAnchor","DropdownItem","forwardRef","bsPrefix","className","eventKey","href","onSelect","propActive","active","Component","prefix","useBootstrapPrefix","onSelectCtx","SelectableContext","activeKey","NavContext","makeEventKey","classNames","DropdownHeader","createWithBsPrefix","role","DropdownDivider","DropdownItemText","pProps","_useUncontrolled","useUncontrolled","alignRight","_useUncontrolled$as","navbar","handleToggle","source","currentTarget","handleSelect","BaseDropdown","Divider","Header","Item","ItemText","createContext","String","createChainedFunction","_len","arguments","funcs","Array","_key","filter","f","reduce","acc","Error","_len2","args","_key2","apply","this","isTrivialHref","trim","_ref$as","onKeyDown","tabIndex","toArray","Function","prototype","bind","slice","querySelectorAll","Button","variant","size","block","classes","useReducer","state","alignDirection","oneOfType","shape","sm","md","lg","xl","align","showProps","renderOnMount","isNavbar","NavbarContext","_usePopperMarginModif","usePopperMarginModifiers","popperRef","marginModifiers","alignClasses","keys","Object","brkPoint","direction","push","modifiers","concat","_useDropdownMenu$","useMergedRefs","close","split","childBsPrefix","undefined","toggleProps"],"mappings":"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","file":"static/js/1.78f36233.chunk.js","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport PropTypes from 'prop-types';\nimport React, { useContext, useRef } from 'react';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport DropdownContext from './DropdownContext';\nimport usePopper from './usePopper';\nimport useRootClose from './useRootClose';\nimport mergeOptionsWithPopperConfig from './mergeOptionsWithPopperConfig';\n\nvar noop = function noop() {};\n/**\n * @memberOf Dropdown\n * @param {object}  options\n * @param {boolean} options.flip Automatically adjust the menu `drop` position based on viewport edge detection\n * @param {[number, number]} options.offset Define an offset distance between the Menu and the Toggle\n * @param {boolean} options.show Display the menu manually, ignored in the context of a `Dropdown`\n * @param {boolean} options.usePopper opt in/out of using PopperJS to position menus. When disabled you must position it yourself.\n * @param {string}  options.rootCloseEvent The pointer event to listen for when determining \"clicks outside\" the menu for triggering a close.\n * @param {object}  options.popperConfig Options passed to the [`usePopper`](/api/usePopper) hook.\n */\n\n\nexport function useDropdownMenu(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var context = useContext(DropdownContext);\n\n  var _useCallbackRef = useCallbackRef(),\n      arrowElement = _useCallbackRef[0],\n      attachArrowRef = _useCallbackRef[1];\n\n  var hasShownRef = useRef(false);\n  var _options = options,\n      flip = _options.flip,\n      offset = _options.offset,\n      rootCloseEvent = _options.rootCloseEvent,\n      _options$fixed = _options.fixed,\n      fixed = _options$fixed === void 0 ? false : _options$fixed,\n      _options$popperConfig = _options.popperConfig,\n      popperConfig = _options$popperConfig === void 0 ? {} : _options$popperConfig,\n      _options$usePopper = _options.usePopper,\n      shouldUsePopper = _options$usePopper === void 0 ? !!context : _options$usePopper;\n  var show = (context == null ? void 0 : context.show) == null ? !!options.show : context.show;\n  var alignEnd = (context == null ? void 0 : context.alignEnd) == null ? options.alignEnd : context.alignEnd;\n\n  if (show && !hasShownRef.current) {\n    hasShownRef.current = true;\n  }\n\n  var handleClose = function handleClose(e) {\n    context == null ? void 0 : context.toggle(false, e);\n  };\n\n  var _ref = context || {},\n      drop = _ref.drop,\n      setMenu = _ref.setMenu,\n      menuElement = _ref.menuElement,\n      toggleElement = _ref.toggleElement;\n\n  var placement = alignEnd ? 'bottom-end' : 'bottom-start';\n  if (drop === 'up') placement = alignEnd ? 'top-end' : 'top-start';else if (drop === 'right') placement = alignEnd ? 'right-end' : 'right-start';else if (drop === 'left') placement = alignEnd ? 'left-end' : 'left-start';\n  var popper = usePopper(toggleElement, menuElement, mergeOptionsWithPopperConfig({\n    placement: placement,\n    enabled: !!(shouldUsePopper && show),\n    enableEvents: show,\n    offset: offset,\n    flip: flip,\n    fixed: fixed,\n    arrowElement: arrowElement,\n    popperConfig: popperConfig\n  }));\n\n  var menuProps = _extends({\n    ref: setMenu || noop,\n    'aria-labelledby': toggleElement == null ? void 0 : toggleElement.id\n  }, popper.attributes.popper, {\n    style: popper.styles.popper\n  });\n\n  var metadata = {\n    show: show,\n    alignEnd: alignEnd,\n    hasShown: hasShownRef.current,\n    toggle: context == null ? void 0 : context.toggle,\n    popper: shouldUsePopper ? popper : null,\n    arrowProps: shouldUsePopper ? _extends({\n      ref: attachArrowRef\n    }, popper.attributes.arrow, {\n      style: popper.styles.arrow\n    }) : {}\n  };\n  useRootClose(menuElement, handleClose, {\n    clickTrigger: rootCloseEvent,\n    disabled: !show\n  });\n  return [menuProps, metadata];\n}\nvar propTypes = {\n  /**\n   * A render prop that returns a Menu element. The `props`\n   * argument should spread through to **a component that can accept a ref**.\n   *\n   * @type {Function ({\n   *   show: boolean,\n   *   alignEnd: boolean,\n   *   close: (?SyntheticEvent) => void,\n   *   placement: Placement,\n   *   update: () => void,\n   *   forceUpdate: () => void,\n   *   props: {\n   *     ref: (?HTMLElement) => void,\n   *     style: { [string]: string | number },\n   *     aria-labelledby: ?string\n   *   },\n   *   arrowProps: {\n   *     ref: (?HTMLElement) => void,\n   *     style: { [string]: string | number },\n   *   },\n   * }) => React.Element}\n   */\n  children: PropTypes.func.isRequired,\n\n  /**\n   * Controls the visible state of the menu, generally this is\n   * provided by the parent `Dropdown` component,\n   * but may also be specified as a prop directly.\n   */\n  show: PropTypes.bool,\n\n  /**\n   * Aligns the dropdown menu to the 'end' of it's placement position.\n   * Generally this is provided by the parent `Dropdown` component,\n   * but may also be specified as a prop directly.\n   */\n  alignEnd: PropTypes.bool,\n\n  /**\n   * Enables the Popper.js `flip` modifier, allowing the Dropdown to\n   * automatically adjust it's placement in case of overlap with the viewport or toggle.\n   * Refer to the [flip docs](https://popper.js.org/popper-documentation.html#modifiers..flip.enabled) for more info\n   */\n  flip: PropTypes.bool,\n  usePopper: PropTypes.oneOf([true, false]),\n\n  /**\n   * A set of popper options and props passed directly to react-popper's Popper component.\n   */\n  popperConfig: PropTypes.object,\n\n  /**\n   * Override the default event used by RootCloseWrapper.\n   */\n  rootCloseEvent: PropTypes.string\n};\nvar defaultProps = {\n  usePopper: true\n};\n\n/**\n * Also exported as `<Dropdown.Menu>` from `Dropdown`.\n *\n * @displayName DropdownMenu\n * @memberOf Dropdown\n */\nfunction DropdownMenu(_ref2) {\n  var children = _ref2.children,\n      options = _objectWithoutPropertiesLoose(_ref2, [\"children\"]);\n\n  var _useDropdownMenu = useDropdownMenu(options),\n      props = _useDropdownMenu[0],\n      meta = _useDropdownMenu[1];\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, meta.hasShown ? children(props, meta) : null);\n}\n\nDropdownMenu.displayName = 'ReactOverlaysDropdownMenu';\nDropdownMenu.propTypes = propTypes;\nDropdownMenu.defaultProps = defaultProps;\n/** @component */\n\nexport default DropdownMenu;","import PropTypes from 'prop-types';\nimport React, { useContext, useCallback } from 'react';\nimport DropdownContext from './DropdownContext';\n\nvar noop = function noop() {};\n/**\n * Wires up Dropdown toggle functionality, returning a set a props to attach\n * to the element that functions as the dropdown toggle (generally a button).\n *\n * @memberOf Dropdown\n */\n\n\nexport function useDropdownToggle() {\n  var _ref = useContext(DropdownContext) || {},\n      _ref$show = _ref.show,\n      show = _ref$show === void 0 ? false : _ref$show,\n      _ref$toggle = _ref.toggle,\n      toggle = _ref$toggle === void 0 ? noop : _ref$toggle,\n      setToggle = _ref.setToggle;\n\n  var handleClick = useCallback(function (e) {\n    toggle(!show, e);\n  }, [show, toggle]);\n  return [{\n    ref: setToggle || noop,\n    onClick: handleClick,\n    'aria-haspopup': true,\n    'aria-expanded': !!show\n  }, {\n    show: show,\n    toggle: toggle\n  }];\n}\nvar propTypes = {\n  /**\n   * A render prop that returns a Toggle element. The `props`\n   * argument should spread through to **a component that can accept a ref**. Use\n   * the `onToggle` argument to toggle the menu open or closed\n   *\n   * @type {Function ({\n   *   show: boolean,\n   *   toggle: (show: boolean) => void,\n   *   props: {\n   *     ref: (?HTMLElement) => void,\n   *     aria-haspopup: true\n   *     aria-expanded: boolean\n   *   },\n   * }) => React.Element}\n   */\n  children: PropTypes.func.isRequired\n};\n\n/**\n * Also exported as `<Dropdown.Toggle>` from `Dropdown`.\n *\n * @displayName DropdownToggle\n * @memberOf Dropdown\n */\nfunction DropdownToggle(_ref2) {\n  var children = _ref2.children;\n\n  var _useDropdownToggle = useDropdownToggle(),\n      props = _useDropdownToggle[0],\n      meta = _useDropdownToggle[1];\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, children(props, meta));\n}\n\nDropdownToggle.displayName = 'ReactOverlaysDropdownToggle';\nDropdownToggle.propTypes = propTypes;\n/** @component */\n\nexport default DropdownToggle;","import invariant from 'invariant';\nimport { useCallback } from 'react';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nexport default function useWrappedRefWithWarning(ref, componentName) {\n  // @ts-ignore\n  if (!(process.env.NODE_ENV !== \"production\")) return ref; // eslint-disable-next-line react-hooks/rules-of-hooks\n\n  var warningRef = useCallback(function (refValue) {\n    !(refValue == null || !refValue.isReactComponent) ? process.env.NODE_ENV !== \"production\" ? invariant(false, componentName + \" injected a ref to a provided `as` component that resolved to a component instance instead of a DOM element. \" + 'Use `React.forwardRef` to provide the injected ref to the class component as a prop in order to pass it directly to a DOM element') : invariant(false) : void 0;\n  }, [componentName]); // eslint-disable-next-line react-hooks/rules-of-hooks\n\n  return useMergedRefs(warningRef, ref);\n}","var matchesImpl;\n/**\n * Checks if a given element matches a selector.\n * \n * @param node the element\n * @param selector the selector\n */\n\nexport default function matches(node, selector) {\n  if (!matchesImpl) {\n    var body = document.body;\n    var nativeMatch = body.matches || body.matchesSelector || body.webkitMatchesSelector || body.mozMatchesSelector || body.msMatchesSelector;\n\n    matchesImpl = function matchesImpl(n, s) {\n      return nativeMatch.call(n, s);\n    };\n  }\n\n  return matchesImpl(node, selector);\n}","import useEventListener from './useEventListener';\nimport { useCallback } from 'react';\n\n/**\n * Attaches an event handler outside directly to the `document`,\n * bypassing the react synthetic event system.\n *\n * ```ts\n * useGlobalListener('keydown', (event) => {\n *  console.log(event.key)\n * })\n * ```\n *\n * @param event The DOM event name\n * @param handler An event handler\n * @param capture Whether or not to listen during the capture event phase\n */\nexport default function useGlobalListener(event, handler, capture) {\n  if (capture === void 0) {\n    capture = false;\n  }\n\n  var documentTarget = useCallback(function () {\n    return document;\n  }, []);\n  return useEventListener(documentTarget, event, handler, capture);\n}","import { useEffect } from 'react';\nimport useEventCallback from './useEventCallback';\n\n/**\n * Attaches an event handler outside directly to specified DOM element\n * bypassing the react synthetic event system.\n *\n * @param element The target to listen for events on\n * @param event The DOM event name\n * @param handler An event handler\n * @param capture Whether or not to listen during the capture event phase\n */\nexport default function useEventListener(eventTarget, event, listener, capture) {\n  if (capture === void 0) {\n    capture = false;\n  }\n\n  var handler = useEventCallback(listener);\n  useEffect(function () {\n    var target = typeof eventTarget === 'function' ? eventTarget() : eventTarget;\n    target.addEventListener(event, handler, capture);\n    return function () {\n      return target.removeEventListener(event, handler, capture);\n    };\n  }, [eventTarget]);\n}","import matches from 'dom-helpers/matches';\nimport qsa from 'dom-helpers/querySelectorAll';\nimport addEventListener from 'dom-helpers/addEventListener';\nimport React, { useCallback, useRef, useEffect, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { useUncontrolledProp } from 'uncontrollable';\nimport usePrevious from '@restart/hooks/usePrevious';\nimport useForceUpdate from '@restart/hooks/useForceUpdate';\nimport useGlobalListener from '@restart/hooks/useGlobalListener';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport DropdownContext from './DropdownContext';\nimport DropdownMenu from './DropdownMenu';\nimport DropdownToggle from './DropdownToggle';\nvar propTypes = {\n  /**\n   * A render prop that returns the root dropdown element. The `props`\n   * argument should spread through to an element containing _both_ the\n   * menu and toggle in order to handle keyboard events for focus management.\n   *\n   * @type {Function ({\n   *   props: {\n   *     onKeyDown: (SyntheticEvent) => void,\n   *   },\n   * }) => React.Element}\n   */\n  children: PropTypes.node,\n\n  /**\n   * Determines the direction and location of the Menu in relation to it's Toggle.\n   */\n  drop: PropTypes.oneOf(['up', 'left', 'right', 'down']),\n\n  /**\n   * Controls the focus behavior for when the Dropdown is opened. Set to\n   * `true` to always focus the first menu item, `keyboard` to focus only when\n   * navigating via the keyboard, or `false` to disable completely\n   *\n   * The Default behavior is `false` **unless** the Menu has a `role=\"menu\"`\n   * where it will default to `keyboard` to match the recommended [ARIA Authoring practices](https://www.w3.org/TR/wai-aria-practices-1.1/#menubutton).\n   */\n  focusFirstItemOnShow: PropTypes.oneOf([false, true, 'keyboard']),\n\n  /**\n   * A css slector string that will return __focusable__ menu items.\n   * Selectors should be relative to the menu component:\n   * e.g. ` > li:not('.disabled')`\n   */\n  itemSelector: PropTypes.string,\n\n  /**\n   * Align the menu to the 'end' side of the placement side of the Dropdown toggle. The default placement is `top-start` or `bottom-start`.\n   */\n  alignEnd: PropTypes.bool,\n\n  /**\n   * Whether or not the Dropdown is visible.\n   *\n   * @controllable onToggle\n   */\n  show: PropTypes.bool,\n\n  /**\n   * Sets the initial show position of the Dropdown.\n   */\n  defaultShow: PropTypes.bool,\n\n  /**\n   * A callback fired when the Dropdown wishes to change visibility. Called with the requested\n   * `show` value, the DOM event, and the source that fired it: `'click'`,`'keydown'`,`'rootClose'`, or `'select'`.\n   *\n   * ```ts static\n   * function(\n   *   isOpen: boolean,\n   *   event: SyntheticEvent,\n   * ): void\n   * ```\n   *\n   * @controllable show\n   */\n  onToggle: PropTypes.func\n};\n\nfunction useRefWithUpdate() {\n  var forceUpdate = useForceUpdate();\n  var ref = useRef(null);\n  var attachRef = useCallback(function (element) {\n    ref.current = element; // ensure that a menu set triggers an update for consumers\n\n    forceUpdate();\n  }, [forceUpdate]);\n  return [ref, attachRef];\n}\n/**\n * @displayName Dropdown\n * @public\n */\n\n\nfunction Dropdown(_ref) {\n  var drop = _ref.drop,\n      alignEnd = _ref.alignEnd,\n      defaultShow = _ref.defaultShow,\n      rawShow = _ref.show,\n      rawOnToggle = _ref.onToggle,\n      _ref$itemSelector = _ref.itemSelector,\n      itemSelector = _ref$itemSelector === void 0 ? '* > *' : _ref$itemSelector,\n      focusFirstItemOnShow = _ref.focusFirstItemOnShow,\n      children = _ref.children;\n\n  var _useUncontrolledProp = useUncontrolledProp(rawShow, defaultShow, rawOnToggle),\n      show = _useUncontrolledProp[0],\n      onToggle = _useUncontrolledProp[1]; // We use normal refs instead of useCallbackRef in order to populate the\n  // the value as quickly as possible, otherwise the effect to focus the element\n  // may run before the state value is set\n\n\n  var _useRefWithUpdate = useRefWithUpdate(),\n      menuRef = _useRefWithUpdate[0],\n      setMenu = _useRefWithUpdate[1];\n\n  var menuElement = menuRef.current;\n\n  var _useRefWithUpdate2 = useRefWithUpdate(),\n      toggleRef = _useRefWithUpdate2[0],\n      setToggle = _useRefWithUpdate2[1];\n\n  var toggleElement = toggleRef.current;\n  var lastShow = usePrevious(show);\n  var lastSourceEvent = useRef(null);\n  var focusInDropdown = useRef(false);\n  var toggle = useCallback(function (nextShow, event) {\n    onToggle(nextShow, event);\n  }, [onToggle]);\n  var context = useMemo(function () {\n    return {\n      toggle: toggle,\n      drop: drop,\n      show: show,\n      alignEnd: alignEnd,\n      menuElement: menuElement,\n      toggleElement: toggleElement,\n      setMenu: setMenu,\n      setToggle: setToggle\n    };\n  }, [toggle, drop, show, alignEnd, menuElement, toggleElement, setMenu, setToggle]);\n\n  if (menuElement && lastShow && !show) {\n    focusInDropdown.current = menuElement.contains(document.activeElement);\n  }\n\n  var focusToggle = useEventCallback(function () {\n    if (toggleElement && toggleElement.focus) {\n      toggleElement.focus();\n    }\n  });\n  var maybeFocusFirst = useEventCallback(function () {\n    var type = lastSourceEvent.current;\n    var focusType = focusFirstItemOnShow;\n\n    if (focusType == null) {\n      focusType = menuRef.current && matches(menuRef.current, '[role=menu]') ? 'keyboard' : false;\n    }\n\n    if (focusType === false || focusType === 'keyboard' && !/^key.+$/.test(type)) {\n      return;\n    }\n\n    var first = qsa(menuRef.current, itemSelector)[0];\n    if (first && first.focus) first.focus();\n  });\n  useEffect(function () {\n    if (show) maybeFocusFirst();else if (focusInDropdown.current) {\n      focusInDropdown.current = false;\n      focusToggle();\n    } // only `show` should be changing\n  }, [show, focusInDropdown, focusToggle, maybeFocusFirst]);\n  useEffect(function () {\n    lastSourceEvent.current = null;\n  });\n\n  var getNextFocusedChild = function getNextFocusedChild(current, offset) {\n    if (!menuRef.current) return null;\n    var items = qsa(menuRef.current, itemSelector);\n    var index = items.indexOf(current) + offset;\n    index = Math.max(0, Math.min(index, items.length));\n    return items[index];\n  };\n\n  useGlobalListener('keydown', function (event) {\n    var _menuRef$current, _toggleRef$current;\n\n    var key = event.key;\n    var target = event.target;\n    var fromMenu = (_menuRef$current = menuRef.current) == null ? void 0 : _menuRef$current.contains(target);\n    var fromToggle = (_toggleRef$current = toggleRef.current) == null ? void 0 : _toggleRef$current.contains(target); // Second only to https://github.com/twbs/bootstrap/blob/8cfbf6933b8a0146ac3fbc369f19e520bd1ebdac/js/src/dropdown.js#L400\n    // in inscrutability\n\n    var isInput = /input|textarea/i.test(target.tagName);\n\n    if (isInput && (key === ' ' || key !== 'Escape' && fromMenu)) {\n      return;\n    }\n\n    if (!fromMenu && !fromToggle) {\n      return;\n    }\n\n    if (!menuRef.current && key === 'Tab') {\n      return;\n    }\n\n    lastSourceEvent.current = event.type;\n\n    switch (key) {\n      case 'ArrowUp':\n        {\n          var next = getNextFocusedChild(target, -1);\n          if (next && next.focus) next.focus();\n          event.preventDefault();\n          return;\n        }\n\n      case 'ArrowDown':\n        event.preventDefault();\n\n        if (!show) {\n          onToggle(true, event);\n        } else {\n          var _next = getNextFocusedChild(target, 1);\n\n          if (_next && _next.focus) _next.focus();\n        }\n\n        return;\n\n      case 'Tab':\n        // on keydown the target is the element being tabbed FROM, we need that\n        // to know if this event is relevant to this dropdown (e.g. in this menu).\n        // On `keyup` the target is the element being tagged TO which we use to check\n        // if focus has left the menu\n        addEventListener(document, 'keyup', function (e) {\n          var _menuRef$current2;\n\n          if (e.key === 'Tab' && !e.target || !((_menuRef$current2 = menuRef.current) != null && _menuRef$current2.contains(e.target))) {\n            onToggle(false, event);\n          }\n        }, {\n          once: true\n        });\n        break;\n\n      case 'Escape':\n        event.preventDefault();\n        event.stopPropagation();\n        onToggle(false, event);\n        break;\n\n      default:\n    }\n  });\n  return /*#__PURE__*/React.createElement(DropdownContext.Provider, {\n    value: context\n  }, children);\n}\n\nDropdown.displayName = 'ReactOverlaysDropdown';\nDropdown.propTypes = propTypes;\nDropdown.Menu = DropdownMenu;\nDropdown.Toggle = DropdownToggle;\nexport default Dropdown;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"className\", \"children\", \"eventKey\", \"disabled\", \"href\", \"onClick\", \"onSelect\", \"active\", \"as\"];\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport NavContext from './NavContext';\nimport SafeAnchor from './SafeAnchor';\nvar defaultProps = {\n  as: SafeAnchor,\n  disabled: false\n};\nvar DropdownItem = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      children = _ref.children,\n      eventKey = _ref.eventKey,\n      disabled = _ref.disabled,\n      href = _ref.href,\n      onClick = _ref.onClick,\n      onSelect = _ref.onSelect,\n      propActive = _ref.active,\n      Component = _ref.as,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'dropdown-item');\n  var onSelectCtx = useContext(SelectableContext);\n  var navContext = useContext(NavContext);\n\n  var _ref2 = navContext || {},\n      activeKey = _ref2.activeKey;\n\n  var key = makeEventKey(eventKey, href);\n  var active = propActive == null && key != null ? makeEventKey(activeKey) === key : propActive;\n  var handleClick = useEventCallback(function (event) {\n    // SafeAnchor handles the disabled case, but we handle it here\n    // for other components\n    if (disabled) return;\n    if (onClick) onClick(event);\n    if (onSelectCtx) onSelectCtx(key, event);\n    if (onSelect) onSelect(key, event);\n  });\n  return (\n    /*#__PURE__*/\n    // \"TS2604: JSX element type 'Component' does not have any construct or call signatures.\"\n    // @ts-ignore\n    React.createElement(Component, _extends({}, props, {\n      ref: ref,\n      href: href,\n      disabled: disabled,\n      className: classNames(className, prefix, active && 'active', disabled && 'disabled'),\n      onClick: handleClick\n    }), children)\n  );\n});\nDropdownItem.displayName = 'DropdownItem';\nDropdownItem.defaultProps = defaultProps;\nexport default DropdownItem;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"drop\", \"show\", \"className\", \"alignRight\", \"onSelect\", \"onToggle\", \"focusFirstItemOnShow\", \"as\", \"navbar\"];\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport BaseDropdown from 'react-overlays/Dropdown';\nimport { useUncontrolled } from 'uncontrollable';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport DropdownItem from './DropdownItem';\nimport DropdownMenu from './DropdownMenu';\nimport DropdownToggle from './DropdownToggle';\nimport SelectableContext from './SelectableContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nvar DropdownHeader = createWithBsPrefix('dropdown-header', {\n  defaultProps: {\n    role: 'heading'\n  }\n});\nvar DropdownDivider = createWithBsPrefix('dropdown-divider', {\n  defaultProps: {\n    role: 'separator'\n  }\n});\nvar DropdownItemText = createWithBsPrefix('dropdown-item-text', {\n  Component: 'span'\n});\nvar defaultProps = {\n  navbar: false\n};\nvar Dropdown = /*#__PURE__*/React.forwardRef(function (pProps, ref) {\n  var _useUncontrolled = useUncontrolled(pProps, {\n    show: 'onToggle'\n  }),\n      bsPrefix = _useUncontrolled.bsPrefix,\n      drop = _useUncontrolled.drop,\n      show = _useUncontrolled.show,\n      className = _useUncontrolled.className,\n      alignRight = _useUncontrolled.alignRight,\n      onSelect = _useUncontrolled.onSelect,\n      onToggle = _useUncontrolled.onToggle,\n      focusFirstItemOnShow = _useUncontrolled.focusFirstItemOnShow,\n      _useUncontrolled$as = _useUncontrolled.as,\n      Component = _useUncontrolled$as === void 0 ? 'div' : _useUncontrolled$as,\n      _4 = _useUncontrolled.navbar,\n      props = _objectWithoutPropertiesLoose(_useUncontrolled, _excluded);\n\n  var onSelectCtx = useContext(SelectableContext);\n  var prefix = useBootstrapPrefix(bsPrefix, 'dropdown');\n  var handleToggle = useEventCallback(function (nextShow, event, source) {\n    if (source === void 0) {\n      source = event.type;\n    }\n\n    if (event.currentTarget === document && (source !== 'keydown' || event.key === 'Escape')) source = 'rootClose';\n\n    if (onToggle) {\n      onToggle(nextShow, event, {\n        source: source\n      });\n    }\n  });\n  var handleSelect = useEventCallback(function (key, event) {\n    if (onSelectCtx) onSelectCtx(key, event);\n    if (onSelect) onSelect(key, event);\n    handleToggle(false, event, 'select');\n  });\n  return /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: handleSelect\n  }, /*#__PURE__*/React.createElement(BaseDropdown, {\n    drop: drop,\n    show: show,\n    alignEnd: alignRight,\n    onToggle: handleToggle,\n    focusFirstItemOnShow: focusFirstItemOnShow,\n    itemSelector: \".\" + prefix + \"-item:not(.disabled):not(:disabled)\"\n  }, /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    className: classNames(className, show && 'show', (!drop || drop === 'down') && prefix, drop === 'up' && 'dropup', drop === 'right' && 'dropright', drop === 'left' && 'dropleft')\n  }))));\n});\nDropdown.displayName = 'Dropdown';\nDropdown.defaultProps = defaultProps;\nDropdown.Divider = DropdownDivider;\nDropdown.Header = DropdownHeader;\nDropdown.Item = DropdownItem;\nDropdown.ItemText = DropdownItemText;\nDropdown.Menu = DropdownMenu;\nDropdown.Toggle = DropdownToggle;\nexport default Dropdown;","import React from 'react'; // TODO (apparently this is a bare \"onSelect\"?)\n\nvar SelectableContext = /*#__PURE__*/React.createContext(null);\nexport var makeEventKey = function makeEventKey(eventKey, href) {\n  if (href === void 0) {\n    href = null;\n  }\n\n  if (eventKey != null) return String(eventKey);\n  return href || null;\n};\nexport default SelectableContext;","/**\n * Safe chained function\n *\n * Will only create a new function if needed,\n * otherwise will pass back existing functions or null.\n *\n * @param {function} functions to chain\n * @returns {function|null}\n */\nfunction createChainedFunction() {\n  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  return funcs.filter(function (f) {\n    return f != null;\n  }).reduce(function (acc, f) {\n    if (typeof f !== 'function') {\n      throw new Error('Invalid Argument Type, must only provide functions, undefined, or null.');\n    }\n\n    if (acc === null) return f;\n    return function chainedFunction() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      // @ts-ignore\n      acc.apply(this, args); // @ts-ignore\n\n      f.apply(this, args);\n    };\n  }, null);\n}\n\nexport default createChainedFunction;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"as\", \"disabled\", \"onKeyDown\"];\nimport React from 'react';\nimport createChainedFunction from './createChainedFunction';\n\nfunction isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\n/**\n * There are situations due to browser quirks or Bootstrap CSS where\n * an anchor tag is needed, when semantically a button tag is the\n * better choice. SafeAnchor ensures that when an anchor is used like a\n * button its accessible. It also emulates input `disabled` behavior for\n * links, which is usually desirable for Buttons, NavItems, DropdownItems, etc.\n */\n\n\nvar SafeAnchor = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'a' : _ref$as,\n      disabled = _ref.disabled,\n      onKeyDown = _ref.onKeyDown,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var handleClick = function handleClick(event) {\n    var href = props.href,\n        onClick = props.onClick;\n\n    if (disabled || isTrivialHref(href)) {\n      event.preventDefault();\n    }\n\n    if (disabled) {\n      event.stopPropagation();\n      return;\n    }\n\n    if (onClick) {\n      onClick(event);\n    }\n  };\n\n  var handleKeyDown = function handleKeyDown(event) {\n    if (event.key === ' ') {\n      event.preventDefault();\n      handleClick(event);\n    }\n  };\n\n  if (isTrivialHref(props.href)) {\n    props.role = props.role || 'button'; // we want to make sure there is a href attribute on the node\n    // otherwise, the cursor incorrectly styled (except with role='button')\n\n    props.href = props.href || '#';\n  }\n\n  if (disabled) {\n    props.tabIndex = -1;\n    props['aria-disabled'] = true;\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    onClick: handleClick,\n    onKeyDown: createChainedFunction(handleKeyDown, onKeyDown)\n  }));\n});\nSafeAnchor.displayName = 'SafeAnchor';\nexport default SafeAnchor;","import React from 'react'; // TODO: check this\n\nvar NavContext = /*#__PURE__*/React.createContext(null);\nNavContext.displayName = 'NavContext';\nexport default NavContext;","var toArray = Function.prototype.bind.call(Function.prototype.call, [].slice);\n/**\n * Runs `querySelectorAll` on a given element.\n * \n * @param element the element\n * @param selector the selector\n */\n\nexport default function qsa(element, selector) {\n  return toArray(element.querySelectorAll(selector));\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"variant\", \"size\", \"active\", \"className\", \"block\", \"type\", \"as\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport SafeAnchor from './SafeAnchor';\nvar defaultProps = {\n  variant: 'primary',\n  active: false,\n  disabled: false\n};\nvar Button = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      variant = _ref.variant,\n      size = _ref.size,\n      active = _ref.active,\n      className = _ref.className,\n      block = _ref.block,\n      type = _ref.type,\n      as = _ref.as,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  var classes = classNames(className, prefix, active && 'active', variant && prefix + \"-\" + variant, block && prefix + \"-block\", size && prefix + \"-\" + size);\n\n  if (props.href) {\n    return /*#__PURE__*/React.createElement(SafeAnchor, _extends({}, props, {\n      as: as,\n      ref: ref,\n      className: classNames(classes, props.disabled && 'disabled')\n    }));\n  }\n\n  if (ref) {\n    props.ref = ref;\n  }\n\n  if (type) {\n    props.type = type;\n  } else if (!as) {\n    props.type = 'button';\n  }\n\n  var Component = as || 'button';\n  return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n    className: classes\n  }));\n});\nButton.displayName = 'Button';\nButton.defaultProps = defaultProps;\nexport default Button;","import { useReducer } from 'react';\n/**\n * Returns a function that triggers a component update. the hook equivalent to\n * `this.forceUpdate()` in a class component. In most cases using a state value directly\n * is preferable but may be required in some advanced usages of refs for interop or\n * when direct DOM manipulation is required.\n *\n * ```ts\n * const forceUpdate = useForceUpdate();\n *\n * const updateOnClick = useCallback(() => {\n *  forceUpdate()\n * }, [forceUpdate])\n *\n * return <button type=\"button\" onClick={updateOnClick}>Hi there</button>\n * ```\n */\n\nexport default function useForceUpdate() {\n  // The toggling state value is designed to defeat React optimizations for skipping\n  // updates when they are stricting equal to the last state value\n  var _useReducer = useReducer(function (state) {\n    return !state;\n  }, false),\n      dispatch = _useReducer[1];\n\n  return dispatch;\n}","import React from 'react'; // TODO: check\n\nvar context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'NavbarContext';\nexport default context;","import { useEffect, useRef } from 'react';\n/**\n * Store the last of some value. Tracked via a `Ref` only updating it\n * after the component renders.\n *\n * Helpful if you need to compare a prop value to it's previous value during render.\n *\n * ```ts\n * function Component(props) {\n *   const lastProps = usePrevious(props)\n *\n *   if (lastProps.foo !== props.foo)\n *     resetValueFromProps(props.foo)\n * }\n * ```\n *\n * @param value the value to track\n */\n\nexport default function usePrevious(value) {\n  var ref = useRef(null);\n  useEffect(function () {\n    ref.current = value;\n  });\n  return ref.current;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"className\", \"align\", \"alignRight\", \"rootCloseEvent\", \"flip\", \"show\", \"renderOnMount\", \"as\", \"popperConfig\"];\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { useContext } from 'react';\nimport { useDropdownMenu } from 'react-overlays/DropdownMenu';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport warning from 'warning';\nimport NavbarContext from './NavbarContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport useWrappedRefWithWarning from './useWrappedRefWithWarning';\nimport usePopperMarginModifiers from './usePopperMarginModifiers';\nvar alignDirection = PropTypes.oneOf(['left', 'right']);\nexport var alignPropType = PropTypes.oneOfType([alignDirection, PropTypes.shape({\n  sm: alignDirection\n}), PropTypes.shape({\n  md: alignDirection\n}), PropTypes.shape({\n  lg: alignDirection\n}), PropTypes.shape({\n  xl: alignDirection\n})]);\nvar defaultProps = {\n  align: 'left',\n  alignRight: false,\n  flip: true\n};\nvar DropdownMenu = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      align = _ref.align,\n      alignRight = _ref.alignRight,\n      rootCloseEvent = _ref.rootCloseEvent,\n      flip = _ref.flip,\n      showProps = _ref.show,\n      renderOnMount = _ref.renderOnMount,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      popperConfig = _ref.popperConfig,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var isNavbar = useContext(NavbarContext);\n  var prefix = useBootstrapPrefix(bsPrefix, 'dropdown-menu');\n\n  var _usePopperMarginModif = usePopperMarginModifiers(),\n      popperRef = _usePopperMarginModif[0],\n      marginModifiers = _usePopperMarginModif[1];\n\n  var alignClasses = [];\n\n  if (align) {\n    if (typeof align === 'object') {\n      var keys = Object.keys(align);\n      process.env.NODE_ENV !== \"production\" ? warning(keys.length === 1, 'There should only be 1 breakpoint when passing an object to `align`') : void 0;\n\n      if (keys.length) {\n        var brkPoint = keys[0];\n        var direction = align[brkPoint]; // .dropdown-menu-right is required for responsively aligning\n        // left in addition to align left classes.\n        // Reuse alignRight to toggle the class below.\n\n        alignRight = direction === 'left';\n        alignClasses.push(prefix + \"-\" + brkPoint + \"-\" + direction);\n      }\n    } else if (align === 'right') {\n      alignRight = true;\n    }\n  }\n\n  var _useDropdownMenu = useDropdownMenu({\n    flip: flip,\n    rootCloseEvent: rootCloseEvent,\n    show: showProps,\n    alignEnd: alignRight,\n    usePopper: !isNavbar && alignClasses.length === 0,\n    popperConfig: _extends({}, popperConfig, {\n      modifiers: marginModifiers.concat((popperConfig == null ? void 0 : popperConfig.modifiers) || [])\n    })\n  }),\n      menuProps = _useDropdownMenu[0],\n      _useDropdownMenu$ = _useDropdownMenu[1],\n      hasShown = _useDropdownMenu$.hasShown,\n      popper = _useDropdownMenu$.popper,\n      show = _useDropdownMenu$.show,\n      alignEnd = _useDropdownMenu$.alignEnd,\n      toggle = _useDropdownMenu$.toggle;\n\n  menuProps.ref = useMergedRefs(popperRef, useMergedRefs(useWrappedRefWithWarning(ref, 'DropdownMenu'), menuProps.ref));\n  if (!hasShown && !renderOnMount) return null; // For custom components provide additional, non-DOM, props;\n\n  if (typeof Component !== 'string') {\n    menuProps.show = show;\n\n    menuProps.close = function () {\n      return toggle == null ? void 0 : toggle(false);\n    };\n\n    menuProps.alignRight = alignEnd;\n  }\n\n  var style = props.style;\n\n  if (popper != null && popper.placement) {\n    // we don't need the default popper style,\n    // menus are display: none when not shown.\n    style = _extends({}, props.style, menuProps.style);\n    props['x-placement'] = popper.placement;\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({}, props, menuProps, {\n    style: style,\n    className: classNames.apply(void 0, [className, prefix, show && 'show', alignEnd && prefix + \"-right\"].concat(alignClasses))\n  }));\n});\nDropdownMenu.displayName = 'DropdownMenu';\nDropdownMenu.defaultProps = defaultProps;\nexport default DropdownMenu;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"split\", \"className\", \"childBsPrefix\", \"as\"];\nimport classNames from 'classnames';\nimport isRequiredForA11y from 'prop-types-extra/lib/isRequiredForA11y';\nimport React from 'react';\nimport { useDropdownToggle } from 'react-overlays/DropdownToggle';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport Button from './Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport useWrappedRefWithWarning from './useWrappedRefWithWarning';\nvar DropdownToggle = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      split = _ref.split,\n      className = _ref.className,\n      childBsPrefix = _ref.childBsPrefix,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? Button : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'dropdown-toggle');\n\n  if (childBsPrefix !== undefined) {\n    props.bsPrefix = childBsPrefix;\n  }\n\n  var _useDropdownToggle = useDropdownToggle(),\n      toggleProps = _useDropdownToggle[0];\n\n  toggleProps.ref = useMergedRefs(toggleProps.ref, useWrappedRefWithWarning(ref, 'DropdownToggle')); // This intentionally forwards size and variant (if set) to the\n  // underlying component, to allow it to render size and style variants.\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: classNames(className, prefix, split && prefix + \"-split\")\n  }, toggleProps, props));\n});\nDropdownToggle.displayName = 'DropdownToggle';\nexport default DropdownToggle;","import React from 'react';\nvar DropdownContext = /*#__PURE__*/React.createContext(null);\nexport default DropdownContext;"],"sourceRoot":""}