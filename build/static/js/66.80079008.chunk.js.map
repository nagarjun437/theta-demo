{"version":3,"sources":["app/views/app/chat/chatService.js","app/views/app/chat/ChatSidenav.jsx","app/views/app/chat/EmptyMessage.jsx","app/views/app/chat/ChatContainer.jsx","app/views/app/chat/AppChat.jsx","../node_modules/react-bootstrap/esm/createChainedFunction.js","../node_modules/react-bootstrap/esm/SafeAnchor.js","../node_modules/react-bootstrap/esm/Button.js"],"names":["getContactById","id","axios","get","data","getRecentContact","getChatRoomByContactId","currentUser","contactId","sendNewMessage","message","post","ChatSidenav","open","contactList","recentContactList","handleContactClick","toggleSidenav","useState","query","setQuery","className","style","left","onClick","type","placeholder","value","onChange","target","filter","user","name","toLocaleLowerCase","match","map","key","status","src","avatar","alt","format","Date","lastChatTime","getTime","EmptyMessage","height","width","borderRadius","ChatContainer","currentChatRoom","opponentUser","messageList","setBottomRef","handleMessageSend","isMobile","React","setMessage","marginLeft","containerRef","ref","item","ind","getTimeDifference","time","text","cols","rows","e","onKeyUp","event","shiftKey","trim","Button","variant","htmlFor","as","console","log","files","AppChat","state","bottomRef","createRef","updateRecentContactList","then","setState","scrollToBottom","current","scrollIntoView","behavior","chatId","recentListUpdated","scrollTop","setTimeout","currentUserId","this","window","windowResizeListener","addEventListener","removeEventListener","Card","Component","createChainedFunction","_len","arguments","length","funcs","Array","_key","f","reduce","acc","Error","_len2","args","_key2","apply","_excluded","isTrivialHref","href","SafeAnchor","forwardRef","_ref","_ref$as","disabled","onKeyDown","props","_objectWithoutPropertiesLoose","handleClick","preventDefault","stopPropagation","role","tabIndex","createElement","_extends","displayName","bsPrefix","size","active","block","prefix","useBootstrapPrefix","classes","classNames","defaultProps"],"mappings":"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","file":"static/js/66.80079008.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport const getContactById = id => {\n  return axios.get(\"/api/chat/contacts\", { data: id });\n};\nexport const getRecentContact = id => {\n  return axios.get(\"/api/chat/contacts/recent\", { data: id });\n};\nexport const getAllContact = currentUserId => {\n  return axios.get(\"/api/chat/contacts/all\", { data: currentUserId });\n};\nexport const getChatRoomByContactId = (currentUser, contactId) => {\n  return axios.get(\"/api/chat/chat-room\", { data: { currentUser, contactId } });\n};\nexport const deleteMessage = message => {\n  return axios.post(\"/api/chat/delete\", message);\n};\nexport const sendNewMessage = message => {\n  return axios.post(\"/api/chat/add\", message);\n};\nexport const updateMessage = message => {\n  return axios.post(\"/api/chat/update\", message);\n};\n","import React, { useState } from \"react\";\n// import ChatAvatar from \"./ChatAvatar\";\nimport Scrollbar from \"react-perfect-scrollbar\";\n// import { Divider } from \"@material-ui/core\";\nimport { format } from \"date-fns\";\n\nconst ChatSidenav = ({\n  open,\n  currentUser,\n  contactList = [],\n  recentContactList = [],\n  handleContactClick,\n  toggleSidenav\n}) => {\n  const [query, setQuery] = useState(\"\");\n\n  return (\n    <div\n      className=\"chat-sidebar-wrap sidebar\"\n      style={{ left: !open ? \"-260px\" : 0 }}\n    >\n      <div className=\"border-right\">\n        <div className=\"pt-2 pb-2 pl-3 pr-3 d-flex align-items-center o-hidden box-shadow-1 chat-topbar\">\n          <span className=\"link-icon d-md-none\" onClick={toggleSidenav}>\n            <i className=\"icon-regular ml-0 mr-3 i-Left\"></i>\n          </span>\n          <div className=\"form-group m-0 flex-grow-1\">\n            <input\n              type=\"text\"\n              className=\"form-control form-control-rounded\"\n              id=\"search\"\n              placeholder=\"Search contacts\"\n              value={query}\n              onChange={({ target: { value } }) => setQuery(value)}\n            />\n          </div>\n        </div>\n\n        <Scrollbar className=\"contacts-scrollable\">\n          <div className=\"mt-4 pb-2 pl-3 pr-3 font-weight-bold text-muted border-bottom\">\n            Recent\n          </div>\n\n          {recentContactList\n            .filter(user =>\n              user.name.toLocaleLowerCase().match(query.toLocaleLowerCase())\n            )\n            .map(user => (\n              <div\n                key={user.id}\n                onClick={() => handleContactClick(user.id)}\n                className={`p-3 d-flex align-items-center border-bottom contact ${user.status}`}\n              >\n                <img\n                  src={user.avatar}\n                  className=\"avatar-sm rounded-circle mr-3\"\n                  alt=\"\"\n                />\n                <div>\n                  <h6 className=\"m-0\">{user.name}</h6>\n                  <span className=\"text-muted text-small\">\n                    {format(\n                      new Date(user.lastChatTime).getTime(),\n                      \"dd MMM, yyyy\"\n                    )}\n                  </span>\n                </div>\n              </div>\n            ))}\n\n          <div className=\"mt-3 pb-2 pl-3 pr-3 font-weight-bold text-muted border-bottom\">\n            Contacts\n          </div>\n          {contactList\n            .filter(user =>\n              user.name.toLocaleLowerCase().match(query.toLocaleLowerCase())\n            )\n            .map(user => (\n              <div\n                key={user.id}\n                onClick={() => handleContactClick(user.id)}\n                className=\"p-3 d-flex border-bottom align-items-center contact online\"\n              >\n                <img\n                  src={user.avatar}\n                  className=\"avatar-sm rounded-circle mr-3\"\n                  alt=\"\"\n                />\n                <h6 className=\"\">{user.name}</h6>\n              </div>\n            ))}\n        </Scrollbar>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatSidenav;\n","import React from \"react\";\n\nconst EmptyMessage = () => {\n  return (\n    <div className=\"d-flex flex-column justify-content-center align-items-center h-100\">\n      <div\n        className=\"card bg-white d-flex justify-content-center align-items-center\"\n        style={{\n          height: \"220px\",\n          width: \"220px\",\n          borderRadius: \"50%\"\n        }}\n      >\n        <i className=\"i-Mail-Reply text-64 text-primary font-weight-900\"> </i>\n      </div>\n      <p className=\"py-3\">Click on a contact to start chat</p>\n    </div>\n  );\n};\n\nexport default EmptyMessage;\n","import React from \"react\";\nimport Scrollbar from \"react-perfect-scrollbar\";\nimport { Button } from \"react-bootstrap\";\nimport { getTimeDifference } from \"@utils\";\nimport EmptyMessage from \"./EmptyMessage\";\n\nconst ChatContainer = ({\n  currentUser = {},\n  toggleSidenav,\n  currentChatRoom,\n  opponentUser = {},\n  messageList = [],\n  setBottomRef,\n  handleMessageSend,\n  isMobile\n}) => {\n  let [message, setMessage] = React.useState(\"\");\n  const sendMessageOnEnter = event => {\n    if (event.key === \"Enter\" && !event.shiftKey) {\n      message = message.trim();\n      if (message !== \"\") handleMessageSend(message);\n      setMessage(\"\");\n    }\n  };\n\n  return (\n    <div\n      className=\"chat-content-wrap sidebar-content\"\n      style={{ marginLeft: isMobile ? 0 : \"260px\" }}\n    >\n      <div className=\"d-flex pl-3 pr-3 pt-2 pb-2 o-hidden box-shadow-1 chat-topbar\">\n        <span className=\"link-icon d-md-none\" onClick={toggleSidenav}>\n          <i className=\"icon-regular i-Right ml-0 mr-3\"></i>\n        </span>\n        {opponentUser && (\n          <div className=\"d-flex align-items-center\">\n            <img\n              src={opponentUser.avatar}\n              alt=\"\"\n              className=\"avatar-sm rounded-circle mr-2\"\n            />\n            <p className=\"m-0 text-title text-16 flex-grow-1\">\n              {opponentUser.name}\n            </p>\n          </div>\n        )}\n      </div>\n\n      {opponentUser ? (\n        <>\n          <Scrollbar\n            className=\"chat-content\"\n            containerRef={ref => {\n              setBottomRef(ref);\n            }}\n          >\n            {messageList.map((item, ind) =>\n              item.contactId === opponentUser.id ? (\n                <div key={ind} className=\"d-flex mb-4\">\n                  <div className=\"message flex-grow-1\">\n                    <div className=\"d-flex\">\n                      <p className=\"mb-1 text-title text-16 flex-grow-1\">\n                        {item.name}\n                      </p>\n                      <span className=\"text-small text-muted\">\n                        {getTimeDifference(new Date(item.time))} ago\n                      </span>\n                    </div>\n                    <p className=\"m-0 white-space-pre-line\">{item.text}</p>\n                  </div>\n                  <img\n                    src={item.avatar}\n                    alt=\"\"\n                    className=\"avatar-sm rounded-circle ml-3\"\n                  />\n                </div>\n              ) : (\n                <div key={ind} className=\"d-flex mb-4 user\">\n                  <img\n                    src={item.avatar}\n                    alt=\"\"\n                    className=\"avatar-sm rounded-circle ml-3\"\n                  />\n                  <div className=\"message flex-grow-1\">\n                    <div className=\"d-flex\">\n                      <p className=\"mb-1 text-title text-16 flex-grow-1\">\n                        {item.name}\n                      </p>\n                      <span className=\"text-small text-muted\">\n                        {getTimeDifference(new Date(item.time))} ago\n                      </span>\n                    </div>\n                    <p className=\"m-0 white-space-pre-line\">{item.text}</p>\n                  </div>\n                </div>\n              )\n            )}\n          </Scrollbar>\n          <div className=\"pl-3 pr-3 pt-3 pb-3 box-shadow-1 chat-input-area\">\n            <form className=\"inputForm\">\n              <div className=\"form-group\">\n                <textarea\n                  className=\"form-control form-control-rounded\"\n                  placeholder=\"Type your message\"\n                  name=\"message\"\n                  id=\"message\"\n                  cols=\"30\"\n                  rows=\"3\"\n                  onChange={e => setMessage(e.target.value)}\n                  onKeyUp={sendMessageOnEnter}\n                  value={message}\n                ></textarea>\n              </div>\n              <div className=\"d-flex\">\n                <div className=\"flex-grow-1\"></div>\n                <Button\n                  className=\"btn btn-icon btn-rounded mr-2\"\n                  variant=\"primary\"\n                  onClick={() => {\n                    if (message.trim() !== \"\") handleMessageSend(message);\n                    setMessage(\"\");\n                  }}\n                >\n                  <i className=\"i-Paper-Plane\"></i>\n                </Button>\n\n                <label htmlFor=\"attachment\" className=\"mb-0\">\n                  <Button\n                    type=\"button\"\n                    className=\"mr-2\"\n                    as=\"span\"\n                    variant=\"outline-primary\"\n                  >\n                    <i className=\"i-Add-File\"></i>\n                  </Button>\n                </label>\n                <input\n                  onChange={event => {\n                    console.log(event.target.files[0]);\n                  }}\n                  className=\"d-none\"\n                  id=\"attachment\"\n                  type=\"file\"\n                />\n              </div>\n            </form>\n          </div>\n        </>\n      ) : (\n        <EmptyMessage></EmptyMessage>\n      )}\n    </div>\n  );\n};\n\nexport default ChatContainer;\n","import React, { Component } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport {\n  getAllContact,\n  getRecentContact,\n  sendNewMessage,\n  getContactById,\n  getChatRoomByContactId\n} from \"./chatService\";\nimport ChatSidenav from \"./ChatSidenav\";\nimport ChatContainer from \"./ChatContainer\";\nimport { isMobile } from \"@utils\";\n\nclass AppChat extends Component {\n  state = {\n    currentUser: {\n      id: \"7863a6802ez0e277a0f98534\"\n    },\n    contactList: [],\n    recentContactList: [],\n    messageList: [],\n    currentChatRoom: \"\",\n    opponentUser: null,\n    open: true,\n    isMobile: false\n  };\n\n  bottomRef = React.createRef();\n  windowResizeListener;\n\n  componentDidMount() {\n    let { id } = this.state.currentUser;\n    getContactById(id).then(data => {\n      this.setState({\n        currentUser: {\n          ...data.data\n        }\n      });\n    });\n    getAllContact(this.state.currentUser.id).then(data =>\n      this.setState({ contactList: [...data.data] })\n    );\n    this.updateRecentContactList();\n\n    if (isMobile())\n      this.setState({\n        open: false,\n        isMobile: true\n      });\n    if (window)\n      this.windowResizeListener = window.addEventListener(\"resize\", e => {\n        if (isMobile())\n          this.setState({\n            open: false,\n            isMobile: true\n          });\n        else\n          this.setState({\n            open: true,\n            isMobile: false\n          });\n      });\n  }\n\n  componentWillUnmount() {\n    if (window) window.removeEventListener(\"resize\", this.windowResizeListener);\n  }\n\n  updateRecentContactList = () => {\n    let { id } = this.state.currentUser;\n    getRecentContact(id).then(data => {\n      this.setState({\n        recentContactList: [...data.data]\n      });\n    });\n  };\n\n  scrollToBottom = () => {\n    this.bottomRef.current.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  handleContactClick = contactId => {\n    if (isMobile()) this.toggleSidenav();\n\n    getContactById(contactId).then(({ data }) => {\n      this.setState({\n        opponentUser: { ...data }\n      });\n    });\n\n    getChatRoomByContactId(this.state.currentUser.id, contactId).then(\n      ({ data }) => {\n        let { chatId, messageList, recentListUpdated } = data;\n        console.log(chatId);\n\n        this.setState(\n          {\n            currentChatRoom: chatId,\n            messageList\n          },\n          () => {\n            this.bottomRef.scrollTop = 9999999999999;\n          }\n        );\n        if (recentListUpdated) {\n          this.updateRecentContactList();\n        }\n      }\n    );\n  };\n\n  handleMessageSend = message => {\n    let { id } = this.state.currentUser;\n    let { currentChatRoom, opponentUser } = this.state;\n    if (currentChatRoom === \"\") return;\n    sendNewMessage({\n      chatId: currentChatRoom,\n      text: message,\n      contactId: id,\n      time: new Date()\n    }).then(data => {\n      this.setState(\n        {\n          messageList: [...data.data]\n        },\n        () => {\n          this.bottomRef.scrollTop = 9999999999999;\n        }\n      );\n\n      // bot message\n      setTimeout(() => {\n        sendNewMessage({\n          chatId: currentChatRoom,\n          text: `Hi, I'm ${opponentUser.name}. Your imaginary friend.`,\n          contactId: opponentUser.id,\n          time: new Date()\n        }).then(data => {\n          this.setState(\n            {\n              messageList: [...data.data]\n            },\n            () => {\n              this.bottomRef.scrollTop = 9999999999999;\n            }\n          );\n        });\n      }, 750);\n      // bot message ends here\n    });\n  };\n\n  setBottomRef = ref => {\n    this.bottomRef = ref;\n  };\n\n  toggleSidenav = () => this.setState({ open: !this.state.open });\n\n  render() {\n    let {\n      open,\n      isMobile,\n      currentUser,\n      contactList,\n      recentContactList,\n      messageList,\n      opponentUser,\n      currentChatRoom\n    } = this.state;\n    return (\n      <Card className=\"chat-sidebar-container sidebar-container\">\n        <ChatSidenav\n          open={open}\n          isMobile={isMobile}\n          toggleSidenav={this.toggleSidenav}\n          contactList={contactList}\n          recentContactList={recentContactList}\n          handleContactClick={this.handleContactClick}\n        ></ChatSidenav>\n        <ChatContainer\n          open={open}\n          isMobile={isMobile}\n          toggleSidenav={this.toggleSidenav}\n          messageList={messageList}\n          currentUser={currentUser}\n          opponentUser={opponentUser}\n          currentChatRoom={currentChatRoom}\n          setBottomRef={this.setBottomRef}\n          handleMessageSend={this.handleMessageSend}\n        ></ChatContainer>\n      </Card>\n    );\n  }\n}\n\nexport default AppChat;\n","/**\n * Safe chained function\n *\n * Will only create a new function if needed,\n * otherwise will pass back existing functions or null.\n *\n * @param {function} functions to chain\n * @returns {function|null}\n */\nfunction createChainedFunction() {\n  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  return funcs.filter(function (f) {\n    return f != null;\n  }).reduce(function (acc, f) {\n    if (typeof f !== 'function') {\n      throw new Error('Invalid Argument Type, must only provide functions, undefined, or null.');\n    }\n\n    if (acc === null) return f;\n    return function chainedFunction() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      // @ts-ignore\n      acc.apply(this, args); // @ts-ignore\n\n      f.apply(this, args);\n    };\n  }, null);\n}\n\nexport default createChainedFunction;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"as\", \"disabled\", \"onKeyDown\"];\nimport React from 'react';\nimport createChainedFunction from './createChainedFunction';\n\nfunction isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\n/**\n * There are situations due to browser quirks or Bootstrap CSS where\n * an anchor tag is needed, when semantically a button tag is the\n * better choice. SafeAnchor ensures that when an anchor is used like a\n * button its accessible. It also emulates input `disabled` behavior for\n * links, which is usually desirable for Buttons, NavItems, DropdownItems, etc.\n */\n\n\nvar SafeAnchor = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'a' : _ref$as,\n      disabled = _ref.disabled,\n      onKeyDown = _ref.onKeyDown,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var handleClick = function handleClick(event) {\n    var href = props.href,\n        onClick = props.onClick;\n\n    if (disabled || isTrivialHref(href)) {\n      event.preventDefault();\n    }\n\n    if (disabled) {\n      event.stopPropagation();\n      return;\n    }\n\n    if (onClick) {\n      onClick(event);\n    }\n  };\n\n  var handleKeyDown = function handleKeyDown(event) {\n    if (event.key === ' ') {\n      event.preventDefault();\n      handleClick(event);\n    }\n  };\n\n  if (isTrivialHref(props.href)) {\n    props.role = props.role || 'button'; // we want to make sure there is a href attribute on the node\n    // otherwise, the cursor incorrectly styled (except with role='button')\n\n    props.href = props.href || '#';\n  }\n\n  if (disabled) {\n    props.tabIndex = -1;\n    props['aria-disabled'] = true;\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    onClick: handleClick,\n    onKeyDown: createChainedFunction(handleKeyDown, onKeyDown)\n  }));\n});\nSafeAnchor.displayName = 'SafeAnchor';\nexport default SafeAnchor;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"variant\", \"size\", \"active\", \"className\", \"block\", \"type\", \"as\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport SafeAnchor from './SafeAnchor';\nvar defaultProps = {\n  variant: 'primary',\n  active: false,\n  disabled: false\n};\nvar Button = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      variant = _ref.variant,\n      size = _ref.size,\n      active = _ref.active,\n      className = _ref.className,\n      block = _ref.block,\n      type = _ref.type,\n      as = _ref.as,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  var classes = classNames(className, prefix, active && 'active', variant && prefix + \"-\" + variant, block && prefix + \"-block\", size && prefix + \"-\" + size);\n\n  if (props.href) {\n    return /*#__PURE__*/React.createElement(SafeAnchor, _extends({}, props, {\n      as: as,\n      ref: ref,\n      className: classNames(classes, props.disabled && 'disabled')\n    }));\n  }\n\n  if (ref) {\n    props.ref = ref;\n  }\n\n  if (type) {\n    props.type = type;\n  } else if (!as) {\n    props.type = 'button';\n  }\n\n  var Component = as || 'button';\n  return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n    className: classes\n  }));\n});\nButton.displayName = 'Button';\nButton.defaultProps = defaultProps;\nexport default Button;"],"sourceRoot":""}