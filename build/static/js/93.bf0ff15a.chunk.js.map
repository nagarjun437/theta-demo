{"version":3,"sources":["app/GullLayout/Layout3/Layout3Header.jsx","app/GullLayout/Layout3/Layout3.jsx"],"names":["Layout3Header","state","shorcutMenuList","icon","link","text","notificationList","title","description","time","color","status","handleMenuClick","props","setLayoutSettings","settings","merge","layout3Settings","leftSidebar","open","toggleFullScreen","document","fullscreenEnabled","fullscreen","exitFullscreen","documentElement","requestFullscreen","handleSearchBoxOpen","searchBox","this","className","src","alt","onClick","style","margin","data-fullscreen","Dropdown","Toggle","variant","role","Menu","map","menu","key","to","id","data-toggle","DropdownMenu","note","index","getTimeDifference","Date","DropdownToggle","aria-haspopup","aria-expanded","logoutUser","classList","navigations","parent","htmlFor","name","sub","path","type","child","i","Component","withRouter","connect","PropTypes","func","isRequired","layout","Layout3","handleSearchBoxClose","routes","renderRoutes","Footer","GullSearch","handleClose"],"mappings":"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","file":"static/js/93.bf0ff15a.chunk.js","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport { Dropdown } from \"react-bootstrap\";\nimport DropdownMenu from \"react-bootstrap/DropdownMenu\";\nimport { getTimeDifference, classList } from \"@utils\";\nimport DropdownToggle from \"react-bootstrap/DropdownToggle\";\n\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { setLayoutSettings } from \"app/redux/actions/LayoutActions\";\nimport { withRouter, Link } from \"react-router-dom\";\n\nimport { merge } from \"lodash\";\nimport { navigations } from \"app/navigations\";\nimport ScrollBar from \"react-perfect-scrollbar\";\nimport MegaMenu from \"@gull/components/MegaMenu\";\n\nclass Layout3Header extends Component {\n  state = {\n    shorcutMenuList: [\n      {\n        icon: \"i-Shop-4\",\n        link: \"#\",\n        text: \"Home\"\n      },\n      {\n        icon: \"i-Library\",\n        link: \"#\",\n        text: \"Ui Kits\"\n      },\n      {\n        icon: \"i-Drop\",\n        link: \"#\",\n        text: \"Apps\"\n      },\n      {\n        icon: \"i-File-Clipboard-File--Text\",\n        link: \"#\",\n        text: \"Form\"\n      },\n      {\n        icon: \"i-Checked-User\",\n        link: \"#\",\n        text: \"Sessions\"\n      },\n      {\n        icon: \"i-Ambulance\",\n        link: \"#\",\n        text: \"Support\"\n      }\n    ],\n    notificationList: [\n      {\n        icon: \"i-Speach-Bubble-6\",\n        title: \"New message\",\n        description: \"James: Hey! are you busy?\",\n        time: \"2019-10-30T02:10:18.931Z\",\n        color: \"primary\",\n        status: \"New\"\n      },\n      {\n        icon: \"i-Receipt-3\",\n        title: \"New order received\",\n        description: \"1 Headphone, 3 iPhone\",\n        time: \"2019-03-10T02:10:18.931Z\",\n        color: \"success\",\n        status: \"New\"\n      },\n      {\n        icon: \"i-Empty-Box\",\n        title: \"Product out of stock\",\n        description: \"1 Headphone, 3 iPhone\",\n        time: \"2019-05-10T02:10:18.931Z\",\n        color: \"danger\",\n        status: \"3\"\n      },\n      {\n        icon: \"i-Data-Power\",\n        title: \"Server up!\",\n        description: \"Server rebooted successfully\",\n        time: \"2019-03-10T02:10:18.931Z\",\n        color: \"success\",\n        status: \"3\"\n      }\n    ]\n  };\n\n  handleMenuClick = () => {\n    let { setLayoutSettings, settings } = this.props;\n    setLayoutSettings(\n      merge({}, settings, {\n        layout3Settings: {\n          leftSidebar: {\n            open: !settings.layout3Settings.leftSidebar.open\n          }\n        }\n      })\n    );\n  };\n\n  toggleFullScreen = () => {\n    if (document.fullscreenEnabled) {\n      if (!document.fullscreen) document.documentElement.requestFullscreen();\n      else document.exitFullscreen();\n    }\n  };\n\n  handleSearchBoxOpen = () => {\n    let { setLayoutSettings, settings } = this.props;\n    setLayoutSettings(\n      merge({}, settings, {\n        layout3Settings: {\n          searchBox: {\n            open: true\n          }\n        }\n      })\n    );\n  };\n\n  render() {\n    let { shorcutMenuList = [], notificationList = [] } = this.state;\n    let { settings } = this.props;\n\n    return (\n      <Fragment>\n        <div className=\"main-header\">\n          <div className=\"logo\">\n            <img src=\"/assets/images/logo.png\" alt=\"\" onClick={this.handleMenuClick} />\n          </div>\n\n          {/*<div className=\"menu-toggle\" onClick={this.handleMenuClick}>*/}\n          {/*  <div></div>*/}\n          {/*  <div></div>*/}\n          {/*  <div></div>*/}\n          {/*</div>*/}\n\n          {/*<div className=\"d-none d-lg-flex align-items-center\">*/}\n          {/*  <Dropdown className=\"mr-3\">*/}\n          {/*    <Dropdown.Toggle variant=\"link\" id=\"dropdown-basic\">*/}\n          {/*      Mega Menu*/}\n          {/*    </Dropdown.Toggle>*/}\n\n          {/*    <div className=\"mega-menu\">*/}\n          {/*      <Dropdown.Menu>*/}\n          {/*        <MegaMenu></MegaMenu>*/}\n          {/*      </Dropdown.Menu>*/}\n          {/*    </div>*/}\n          {/*  </Dropdown>*/}\n\n          {/*  <div className=\"search-bar\">*/}\n          {/*    <input*/}\n          {/*      type=\"text\"*/}\n          {/*      placeholder=\"Search\"*/}\n          {/*      onFocus={this.handleSearchBoxOpen}*/}\n          {/*    />*/}\n          {/*    <i className=\"search-icon text-muted i-Magnifi-Glass1\"></i>*/}\n          {/*  </div>*/}\n          {/*</div>*/}\n\n          <div style={{ margin: \"auto\" }}></div>\n\n          <div className=\"header-part-right\">\n            <i\n              className=\"i-Full-Screen header-icon d-none d-sm-inline-block\"\n              data-fullscreen\n              onClick={this.toggleFullScreen}\n            ></i>\n\n            <Dropdown>\n              <Dropdown.Toggle variant=\"link\" className=\"toggle-hidden\">\n                <i\n                  className=\"i-Safe-Box text-muted header-icon\"\n                  role=\"button\"\n                ></i>\n              </Dropdown.Toggle>\n              <Dropdown.Menu>\n                <div className=\"menu-icon-grid\">\n                  {shorcutMenuList.map(menu => (\n                    <Link key={menu.text} to={menu.link}>\n                      <i className={menu.icon}></i> {menu.text}\n                    </Link>\n                  ))}\n                </div>\n              </Dropdown.Menu>\n            </Dropdown>\n\n            <Dropdown>\n              <Dropdown.Toggle variant=\"link\" className=\"toggle-hidden\">\n                <div\n                  className=\"badge-top-container\"\n                  role=\"button\"\n                  id=\"dropdownNotification\"\n                  data-toggle=\"dropdown\"\n                >\n                  <span className=\"badge badge-primary\">3</span>\n                  <i className=\"i-Bell text-muted header-icon\"></i>\n                </div>\n              </Dropdown.Toggle>\n\n              <DropdownMenu className=\"notification-dropdown rtl-ps-none\">\n                {notificationList.map((note, index) => (\n                  <div key={index} className=\"dropdown-item d-flex\">\n                    <div className=\"notification-icon\">\n                      <i className={`${note.icon} text-${note.color} mr-1`}></i>\n                    </div>\n                    <div className=\"notification-details flex-grow-1\">\n                      <p className=\"m-0 d-flex align-items-center\">\n                        <span>{note.title}</span>\n                        <span\n                          className={`badge badge-pill badge-${note.color} ml-1 mr-1`}\n                        >\n                          {note.status}\n                        </span>\n                        <span className=\"flex-grow-1\"></span>\n                        <span className=\"text-small text-muted ml-auto\">\n                          {getTimeDifference(new Date(note.time))} ago\n                        </span>\n                      </p>\n                      <p className=\"text-small text-muted m-0\">\n                        {note.description}\n                      </p>\n                    </div>\n                  </div>\n                ))}\n              </DropdownMenu>\n            </Dropdown>\n\n            <div className=\"user col align-self-end\">\n              <Dropdown>\n                <DropdownToggle variant=\"link\" className=\"toggle-hidden\">\n                  <img\n                    src=\"/assets/images/faces/1.jpg\"\n                    id=\"userDropdown\"\n                    alt=\"\"\n                    data-toggle=\"dropdown\"\n                    aria-haspopup=\"true\"\n                    aria-expanded=\"false\"\n                  />\n                </DropdownToggle>\n                <DropdownMenu>\n                  <div className=\"dropdown-header\">\n                    <i className=\"i-Lock-User mr-1\"></i> Timothy Carlson\n                  </div>\n                  <span className=\"dropdown-item cursor-pointer\">\n                    Account settings\n                  </span>\n                  <span className=\"dropdown-item cursor-pointer\">\n                    Billing history\n                  </span>\n                  <span\n                    className=\"dropdown-item cursor-pointer\"\n                    onClick={this.props.logoutUser}\n                  >\n                    Sign out\n                  </span>\n                </DropdownMenu>\n              </Dropdown>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"horizontal-bar-wrap\">\n          <div\n            className={classList({\n              \"header-topnav\": true,\n              open: settings.layout3Settings.leftSidebar.open\n            })}\n          >\n            <div className=\"container-fluid\">\n              <ScrollBar className=\"topnav position-relative rtl-ps-none\">\n                <ul className=\"menu float-left\">\n                  {navigations.map((parent, index) => (\n                    <li key={index}>\n                      <div>\n                        <div>\n                          <label className=\"toggle\" htmlFor={`drop-${index}`}>\n                            {parent.name}\n                          </label>\n                          <Link to={!parent.sub ? parent.path : \"#\"}>\n                            <i className={`nav-icon mr-2 ${parent.icon}`}></i>\n                            {parent.name}\n                          </Link>\n                          <input type=\"checkbox\" id={`drop-${index}`} />\n                          <ul>\n                            {parent.sub &&\n                              parent.sub.map((child, i) => (\n                                <li key={i}>\n                                  <Link to={child.path || \"#\"}>\n                                    <i\n                                      className={`nav-icon mr-2 ${child.icon}`}\n                                    ></i>\n                                    <span className=\"item-name\">\n                                      {child.name}\n                                    </span>\n                                  </Link>\n                                </li>\n                              ))}\n                          </ul>\n                        </div>\n                      </div>\n                    </li>\n                  ))}\n                </ul>\n              </ScrollBar>\n            </div>\n          </div>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nLayout3Header.propTypes = {\n  setLayoutSettings: PropTypes.func.isRequired,\n  settings: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  setLayoutSettings: PropTypes.func.isRequired,\n  settings: state.layout.settings\n});\n\nexport default withRouter(\n  connect(mapStateToProps, {\n    setLayoutSettings\n  })(Layout3Header)\n);\n","import React, { Component } from \"react\";\nimport AppContext from \"app/appContext\";\nimport { renderRoutes } from \"react-router-config\";\n\nimport Footer from \"../SharedComponents/Footer\";\n\nimport { connect } from \"react-redux\";\nimport { merge } from \"lodash\";\nimport { classList } from \"@utils\";\nimport Layout3Header from \"./Layout3Header\";\nimport GullSearch from \"@gull/components/GullSearch\";\nimport { setLayoutSettings } from \"app/redux/actions/LayoutActions\";\n\nclass Layout3 extends Component {\n  state = {};\n\n  handleSearchBoxClose = () => {\n    let { setLayoutSettings, settings } = this.props;\n    setLayoutSettings(\n      merge({}, settings, {\n        layout3Settings: {\n          searchBox: {\n            open: false\n          }\n        }\n      })\n    );\n  };\n\n  render() {\n    let { settings, routes } = this.props;\n\n    return (\n      <div>\n        <div className=\"app-admin-wrap  layout-horizontal-bar\">\n          <Layout3Header></Layout3Header>\n\n          <div\n            className={classList({\n              \"main-content-wrap d-flex flex-column\": true\n            })}\n          >\n            <div className=\"main-content\">{renderRoutes(routes)}</div>\n\n            <Footer></Footer>\n          </div>\n        </div>\n        <GullSearch\n          open={settings.layout3Settings.searchBox.open}\n          handleClose={this.handleSearchBoxClose}\n        ></GullSearch>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  settings: state.layout.settings\n});\n\nexport default connect(\n  mapStateToProps,\n  { setLayoutSettings }\n)(Layout3);\n"],"sourceRoot":""}