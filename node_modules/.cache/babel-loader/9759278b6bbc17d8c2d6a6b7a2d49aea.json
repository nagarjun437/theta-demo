{"ast":null,"code":"var _jsxFileName = \"/Users/arjun/Documents/Personal/Test/Theta/UI Theme/theta-demo/src/app/views/ui-kits/buttons/AppButton.jsx\";\nimport React, { Component } from \"react\";\nimport { Breadcrumb } from \"@gull\";\nimport { Row, Col, Button, ButtonToolbar } from \"react-bootstrap\";\nimport SimpleCard from \"@gull/components/cards/SimpleCard\";\nimport LoadingButton from \"@gull/components/buttons/LoadingButton\";\n\nclass AppButton extends Component {\n  constructor(...args) {\n    super(...args);\n    this.variantList = [\"primary\", \"success\", \"warning\", \"danger\", \"info\", \"light\", \"dark\"];\n    this.socialButtonList = [{\n      name: \"facebook\",\n      icon: \"i-Facebook-2\"\n    }, {\n      name: \"google\",\n      icon: \"i-Google-Plus\"\n    }, {\n      name: \"twitter\",\n      icon: \"i-Twitter\"\n    }, {\n      name: \"instagram\",\n      icon: \"i-Instagram\"\n    }, {\n      name: \"linkedin\",\n      icon: \"i-Linkedin-2\"\n    }, {\n      name: \"dribble\",\n      icon: \"i-Dribble\"\n    }, {\n      name: \"youtube\",\n      icon: \"i-Youtube\"\n    }];\n    this.state = {};\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Breadcrumb, {\n      routeSegments: [{\n        name: \"UI Kits\",\n        path: \"/uikits\"\n      }, {\n        name: \"Buttons\"\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      lg: 6,\n      md: 6,\n      sm: 6,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(SimpleCard, {\n      title: \"Default Buttons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 15\n      }\n    }, this.variantList.map(color => /*#__PURE__*/React.createElement(Button, {\n      key: color,\n      variant: color,\n      className: \"m-1 text-capitalize\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 19\n      }\n    }, color)))), /*#__PURE__*/React.createElement(Col, {\n      lg: 6,\n      md: 6,\n      sm: 6,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(SimpleCard, {\n      title: \"Buttons Rounded\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 15\n      }\n    }, this.variantList.map(color => /*#__PURE__*/React.createElement(Button, {\n      key: color,\n      variant: color,\n      className: \"btn-rounded m-1 text-capitalize\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 19\n      }\n    }, color)))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      lg: 6,\n      md: 6,\n      sm: 6,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(SimpleCard, {\n      title: \"Buttons Raised\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 15\n      }\n    }, this.variantList.map(color => /*#__PURE__*/React.createElement(Button, {\n      key: color,\n      variant: color,\n      className: `btn-raised btn-raised-${color} m-1 text-capitalize`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 19\n      }\n    }, color)))), /*#__PURE__*/React.createElement(Col, {\n      lg: 6,\n      md: 6,\n      sm: 6,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(SimpleCard, {\n      title: \"Buttons outline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 15\n      }\n    }, this.variantList.map(color => /*#__PURE__*/React.createElement(Button, {\n      key: color,\n      variant: `outline-${color}`,\n      className: \"m-1 text-capitalize\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 19\n      }\n    }, color)))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      lg: 6,\n      md: 6,\n      sm: 6,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(SimpleCard, {\n      title: \"Button block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 15\n      }\n    }, this.variantList.slice(0, 3).map(color => /*#__PURE__*/React.createElement(Button, {\n      key: color,\n      variant: color,\n      className: \"d-block w-100 my-2 text-capitalize\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 19\n      }\n    }, color)))), /*#__PURE__*/React.createElement(Col, {\n      lg: 6,\n      md: 6,\n      sm: 6,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(SimpleCard, {\n      title: \"Buttons outline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }\n    }, this.variantList.slice(0, 3).map(color => /*#__PURE__*/React.createElement(Button, {\n      key: color,\n      variant: color,\n      size: \"sm\",\n      className: \"m-1 text-capitalize\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 21\n      }\n    }, color))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }\n    }, this.variantList.slice(0, 3).map(color => /*#__PURE__*/React.createElement(Button, {\n      key: color,\n      variant: color,\n      className: \"m-1 text-capitalize\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 21\n      }\n    }, color))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }\n    }, this.variantList.slice(0, 3).map(color => /*#__PURE__*/React.createElement(Button, {\n      key: color,\n      variant: color,\n      size: \"lg\",\n      className: \"m-1 text-capitalize\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 21\n      }\n    }, color))))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      lg: 6,\n      md: 6,\n      sm: 6,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(SimpleCard, {\n      title: \"Styles- Button with Icons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      className: \"btn-icon m-1 text-capitalize\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"ul-btn__icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"i-Gear-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"ul-btn__text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 19\n      }\n    }, \"With Icon\")), /*#__PURE__*/React.createElement(Button, {\n      variant: \"info\",\n      className: \"btn-icon m-1 text-capitalize\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"ul-btn__icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"i-RSS\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(Button, {\n      variant: \"success\",\n      className: \"btn-icon m-1 text-capitalize\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 17\n      }\n    }, \"button\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"outline-danger\",\n      className: \"btn-icon m-1 text-capitalize\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"ul-btn__icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"i-Shutter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(Button, {\n      variant: \"warning\",\n      className: \"btn-icon m-1 text-capitalize\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"ul-btn__icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"i-Atom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"ul-btn__text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 19\n      }\n    }, \"Atom\")))), /*#__PURE__*/React.createElement(Col, {\n      lg: 6,\n      md: 6,\n      sm: 6,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(SimpleCard, {\n      title: \"Buttons Ripple\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 15\n      }\n    }, this.variantList.map(color => /*#__PURE__*/React.createElement(Button, {\n      key: color,\n      variant: color,\n      className: \"ripple m-1 text-capitalize\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 19\n      }\n    }, color)))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      lg: 6,\n      md: 6,\n      sm: 6,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(SimpleCard, {\n      title: \"social\",\n      className: \"mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 17\n      }\n    }, this.socialButtonList.map(item => /*#__PURE__*/React.createElement(Button, {\n      key: item.name,\n      variant: \"primary\",\n      className: `btn-${item.name} btn-icon m-1 text-capitalize`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"ul-btn__icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: item.icon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"ul-btn__text text-capitalize\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 23\n      }\n    }, item.name)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 17\n      }\n    }, this.socialButtonList.map(item => /*#__PURE__*/React.createElement(Button, {\n      key: item.name,\n      variant: \"primary\",\n      className: `btn-${item.name} btn-icon m-1 text-capitalize`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"ul-btn__icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: item.icon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 25\n      }\n    }))))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 17\n      }\n    }, this.socialButtonList.map(item => /*#__PURE__*/React.createElement(Button, {\n      key: item.name,\n      variant: \"primary\",\n      className: `btn-${item.name} rounded-circle btn-icon m-1 text-capitalize`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"ul-btn__icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: item.icon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 25\n      }\n    })))))), /*#__PURE__*/React.createElement(SimpleCard, {\n      title: \"Button Group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(ButtonToolbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 17\n      }\n    }, this.variantList.map(color => /*#__PURE__*/React.createElement(Button, {\n      key: color,\n      variant: `outline-${color}`,\n      className: \"text-capitalize\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 21\n      }\n    }, color))))), /*#__PURE__*/React.createElement(Col, {\n      lg: 6,\n      md: 6,\n      sm: 6,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(SimpleCard, {\n      title: \"Loading Button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mb-3 d-flex flex-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 17\n      }\n    }, this.variantList.slice(0, 3).map((color, ind) => /*#__PURE__*/React.createElement(LoadingButton, {\n      key: ind,\n      className: \"text-capitalize m-1\",\n      variant: color,\n      loading: true,\n      animation: \"border\",\n      spinnerSize: \"sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 21\n      }\n    }, color, \" loader\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mb-3 d-flex flex-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 17\n      }\n    }, this.variantList.slice(0, 3).map((color, ind) => /*#__PURE__*/React.createElement(LoadingButton, {\n      key: ind,\n      className: \"text-capitalize m-1\",\n      variant: color,\n      loading: true,\n      animation: \"grow\",\n      spinnerSize: \"sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 21\n      }\n    }, color, \" loader\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex flex-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 17\n      }\n    }, this.variantList.slice(0, 3).map((color, ind) => /*#__PURE__*/React.createElement(LoadingButton, {\n      key: ind,\n      className: \"text-capitalize m-1\",\n      variant: color,\n      loading: true,\n      animation: \"border\",\n      spinnerSize: \"lg\",\n      buttonSize: \"lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 21\n      }\n    }, color, \" loader\"))))))));\n  }\n\n}\n\nexport default AppButton;","map":{"version":3,"sources":["/Users/arjun/Documents/Personal/Test/Theta/UI Theme/theta-demo/src/app/views/ui-kits/buttons/AppButton.jsx"],"names":["React","Component","Breadcrumb","Row","Col","Button","ButtonToolbar","SimpleCard","LoadingButton","AppButton","variantList","socialButtonList","name","icon","state","render","path","map","color","slice","item","ind"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Breadcrumb } from \"@gull\";\nimport { Row, Col, Button, ButtonToolbar } from \"react-bootstrap\";\nimport SimpleCard from \"@gull/components/cards/SimpleCard\";\nimport LoadingButton from \"@gull/components/buttons/LoadingButton\";\n\nclass AppButton extends Component {\n  variantList = [\n    \"primary\",\n    \"success\",\n    \"warning\",\n    \"danger\",\n    \"info\",\n    \"light\",\n    \"dark\"\n  ];\n\n  socialButtonList = [\n    {\n      name: \"facebook\",\n      icon: \"i-Facebook-2\"\n    },\n    {\n      name: \"google\",\n      icon: \"i-Google-Plus\"\n    },\n    {\n      name: \"twitter\",\n      icon: \"i-Twitter\"\n    },\n    {\n      name: \"instagram\",\n      icon: \"i-Instagram\"\n    },\n    {\n      name: \"linkedin\",\n      icon: \"i-Linkedin-2\"\n    },\n    {\n      name: \"dribble\",\n      icon: \"i-Dribble\"\n    },\n    {\n      name: \"youtube\",\n      icon: \"i-Youtube\"\n    }\n  ];\n\n  state = {};\n\n  render() {\n    return (\n      <div>\n        <Breadcrumb\n          routeSegments={[\n            { name: \"UI Kits\", path: \"/uikits\" },\n            { name: \"Buttons\" }\n          ]}\n        ></Breadcrumb>\n\n        <div className=\"mb-3\">\n          <Row>\n            <Col lg={6} md={6} sm={6} xs={12}>\n              <SimpleCard title=\"Default Buttons\">\n                {this.variantList.map(color => (\n                  <Button\n                    key={color}\n                    variant={color}\n                    className=\"m-1 text-capitalize\"\n                  >\n                    {color}\n                  </Button>\n                ))}\n              </SimpleCard>\n            </Col>\n            <Col lg={6} md={6} sm={6} xs={12}>\n              <SimpleCard title=\"Buttons Rounded\">\n                {this.variantList.map(color => (\n                  <Button\n                    key={color}\n                    variant={color}\n                    className=\"btn-rounded m-1 text-capitalize\"\n                  >\n                    {color}\n                  </Button>\n                ))}\n              </SimpleCard>\n            </Col>\n          </Row>\n        </div>\n\n        <div className=\"mb-3\">\n          <Row>\n            <Col lg={6} md={6} sm={6} xs={12}>\n              <SimpleCard title=\"Buttons Raised\">\n                {this.variantList.map(color => (\n                  <Button\n                    key={color}\n                    variant={color}\n                    className={`btn-raised btn-raised-${color} m-1 text-capitalize`}\n                  >\n                    {color}\n                  </Button>\n                ))}\n              </SimpleCard>\n            </Col>\n            <Col lg={6} md={6} sm={6} xs={12}>\n              <SimpleCard title=\"Buttons outline\">\n                {this.variantList.map(color => (\n                  <Button\n                    key={color}\n                    variant={`outline-${color}`}\n                    className=\"m-1 text-capitalize\"\n                  >\n                    {color}\n                  </Button>\n                ))}\n              </SimpleCard>\n            </Col>\n          </Row>\n        </div>\n\n        <div className=\"mb-3\">\n          <Row>\n            <Col lg={6} md={6} sm={6} xs={12}>\n              <SimpleCard title=\"Button block\">\n                {this.variantList.slice(0, 3).map(color => (\n                  <Button\n                    key={color}\n                    variant={color}\n                    className=\"d-block w-100 my-2 text-capitalize\"\n                  >\n                    {color}\n                  </Button>\n                ))}\n              </SimpleCard>\n            </Col>\n            <Col lg={6} md={6} sm={6} xs={12}>\n              <SimpleCard title=\"Buttons outline\">\n                <div>\n                  {this.variantList.slice(0, 3).map(color => (\n                    <Button\n                      key={color}\n                      variant={color}\n                      size=\"sm\"\n                      className=\"m-1 text-capitalize\"\n                    >\n                      {color}\n                    </Button>\n                  ))}\n                </div>\n                <div>\n                  {this.variantList.slice(0, 3).map(color => (\n                    <Button\n                      key={color}\n                      variant={color}\n                      className=\"m-1 text-capitalize\"\n                    >\n                      {color}\n                    </Button>\n                  ))}\n                </div>\n                <div>\n                  {this.variantList.slice(0, 3).map(color => (\n                    <Button\n                      key={color}\n                      variant={color}\n                      size=\"lg\"\n                      className=\"m-1 text-capitalize\"\n                    >\n                      {color}\n                    </Button>\n                  ))}\n                </div>\n              </SimpleCard>\n            </Col>\n          </Row>\n        </div>\n\n        <div className=\"mb-3\">\n          <Row>\n            <Col lg={6} md={6} sm={6} xs={12}>\n              <SimpleCard title=\"Styles- Button with Icons\">\n                <Button\n                  variant=\"primary\"\n                  className=\"btn-icon m-1 text-capitalize\"\n                >\n                  <span className=\"ul-btn__icon\">\n                    <i className=\"i-Gear-2\"></i>\n                  </span>\n                  <span className=\"ul-btn__text\">With Icon</span>\n                </Button>\n                <Button variant=\"info\" className=\"btn-icon m-1 text-capitalize\">\n                  <span className=\"ul-btn__icon\">\n                    <i className=\"i-RSS\"></i>\n                  </span>\n                </Button>\n                <Button\n                  variant=\"success\"\n                  className=\"btn-icon m-1 text-capitalize\"\n                >\n                  button\n                </Button>\n                <Button\n                  variant=\"outline-danger\"\n                  className=\"btn-icon m-1 text-capitalize\"\n                >\n                  <span className=\"ul-btn__icon\">\n                    <i className=\"i-Shutter\"></i>\n                  </span>\n                </Button>\n                <Button\n                  variant=\"warning\"\n                  className=\"btn-icon m-1 text-capitalize\"\n                >\n                  <span className=\"ul-btn__icon\">\n                    <i className=\"i-Atom\"></i>\n                  </span>\n                  <span className=\"ul-btn__text\">Atom</span>\n                </Button>\n              </SimpleCard>\n            </Col>\n            <Col lg={6} md={6} sm={6} xs={12}>\n              <SimpleCard title=\"Buttons Ripple\">\n                {this.variantList.map(color => (\n                  <Button\n                    key={color}\n                    variant={color}\n                    className=\"ripple m-1 text-capitalize\"\n                  >\n                    {color}\n                  </Button>\n                ))}\n              </SimpleCard>\n            </Col>\n          </Row>\n        </div>\n\n        <div className=\"mb-3\">\n          <Row>\n            <Col lg={6} md={6} sm={6} xs={12}>\n              <SimpleCard title=\"social\" className=\"mb-3\">\n                <div className=\"mb-3\">\n                  {this.socialButtonList.map(item => (\n                    <Button\n                      key={item.name}\n                      variant=\"primary\"\n                      className={`btn-${item.name} btn-icon m-1 text-capitalize`}\n                    >\n                      <span className=\"ul-btn__icon\">\n                        <i className={item.icon}></i>\n                      </span>\n                      <span className=\"ul-btn__text text-capitalize\">\n                        {item.name}\n                      </span>\n                    </Button>\n                  ))}\n                </div>\n                <div className=\"mb-3\">\n                  {this.socialButtonList.map(item => (\n                    <Button\n                      key={item.name}\n                      variant=\"primary\"\n                      className={`btn-${item.name} btn-icon m-1 text-capitalize`}\n                    >\n                      <span className=\"ul-btn__icon\">\n                        <i className={item.icon}></i>\n                      </span>\n                    </Button>\n                  ))}\n                </div>\n                <div>\n                  {this.socialButtonList.map(item => (\n                    <Button\n                      key={item.name}\n                      variant=\"primary\"\n                      className={`btn-${item.name} rounded-circle btn-icon m-1 text-capitalize`}\n                    >\n                      <span className=\"ul-btn__icon\">\n                        <i className={item.icon}></i>\n                      </span>\n                    </Button>\n                  ))}\n                </div>\n              </SimpleCard>\n\n              <SimpleCard title=\"Button Group\">\n                <ButtonToolbar>\n                  {this.variantList.map(color => (\n                    <Button\n                      key={color}\n                      variant={`outline-${color}`}\n                      className=\"text-capitalize\"\n                    >\n                      {color}\n                    </Button>\n                  ))}\n                </ButtonToolbar>\n              </SimpleCard>\n            </Col>\n            <Col lg={6} md={6} sm={6} xs={12}>\n              <SimpleCard title=\"Loading Button\">\n                <div className=\"mb-3 d-flex flex-wrap\">\n                  {this.variantList.slice(0, 3).map((color, ind) => (\n                    <LoadingButton\n                      key={ind}\n                      className=\"text-capitalize m-1\"\n                      variant={color}\n                      loading={true}\n                      animation=\"border\"\n                      spinnerSize=\"sm\"\n                    >\n                      {color} loader\n                    </LoadingButton>\n                  ))}\n                </div>\n                <div className=\"mb-3 d-flex flex-wrap\">\n                  {this.variantList.slice(0, 3).map((color, ind) => (\n                    <LoadingButton\n                      key={ind}\n                      className=\"text-capitalize m-1\"\n                      variant={color}\n                      loading={true}\n                      animation=\"grow\"\n                      spinnerSize=\"sm\"\n                    >\n                      {color} loader\n                    </LoadingButton>\n                  ))}\n                </div>\n                <div className=\"d-flex flex-wrap\">\n                  {this.variantList.slice(0, 3).map((color, ind) => (\n                    <LoadingButton\n                      key={ind}\n                      className=\"text-capitalize m-1\"\n                      variant={color}\n                      loading={true}\n                      animation=\"border\"\n                      spinnerSize=\"lg\"\n                      buttonSize=\"lg\"\n                    >\n                      {color} loader\n                    </LoadingButton>\n                  ))}\n                </div>\n              </SimpleCard>\n            </Col>\n          </Row>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AppButton;\n"]},"metadata":{},"sourceType":"module"}