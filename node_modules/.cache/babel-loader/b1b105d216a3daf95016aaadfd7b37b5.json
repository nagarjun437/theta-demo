{"ast":null,"code":"var _jsxFileName = \"/Users/arjun/Documents/Personal/Test/Theta/UI Theme/gull-admin/react/src/app/GullLayout/Layout1/Layout1Sidenav.jsx\";\nimport React, { Component } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { navigations } from \"../../navigations\";\nimport { merge } from \"lodash\";\nimport { classList, isMobile } from \"@utils\";\nimport Srcollbar from \"react-perfect-scrollbar\";\nimport { DropDownMenu } from \"@gull\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { setLayoutSettings, setDefaultSettings } from \"app/redux/actions/LayoutActions\";\nimport { logoutUser } from \"app/redux/actions/UserActions\";\nimport { withRouter } from \"react-router-dom\";\nimport ScrollBar from \"react-perfect-scrollbar\";\n\nclass Layout1Sidenav extends Component {\n  constructor(...args) {\n    super(...args);\n    this.windowListener = null;\n    this.state = {\n      selectedItem: null,\n      navOpen: true,\n      secondaryNavOpen: false\n    };\n\n    this.onMainItemMouseEnter = item => {\n      if (item.type === \"dropDown\") {\n        this.setSelected(item);\n        this.openSecSidenav();\n      } else {\n        this.setSelected(item);\n        this.closeSecSidenav();\n      }\n    };\n\n    this.onMainItemMouseLeave = () => {// this.closeSecSidenav();\n    };\n\n    this.setSelected = selectedItem => {\n      this.setState({\n        selectedItem\n      }); // console.log(selectedItem);\n    };\n\n    this.removeSelected = () => {\n      this.setState({\n        selectedItem: null\n      }); // console.log('removed');\n    };\n\n    this.openSecSidenav = () => {\n      let {\n        setLayoutSettings,\n        settings\n      } = this.props;\n      setLayoutSettings(merge({}, settings, {\n        layout1Settings: {\n          leftSidebar: {\n            secondaryNavOpen: true\n          }\n        }\n      }));\n    };\n\n    this.closeSecSidenav = () => {\n      console.log(\"closing sec sidenav\");\n      let {\n        setLayoutSettings,\n        settings\n      } = this.props;\n      let other = {};\n\n      if (isMobile()) {\n        other.open = false;\n      }\n\n      setLayoutSettings(merge({}, settings, {\n        layout1Settings: {\n          leftSidebar: { ...other,\n            secondaryNavOpen: false\n          }\n        }\n      }));\n    };\n\n    this.closeSidenav = () => {\n      console.log(\"closing sidenav\");\n      let {\n        setLayoutSettings,\n        settings\n      } = this.props;\n      setLayoutSettings(merge({}, settings, {\n        layout1Settings: {\n          leftSidebar: {\n            open: false,\n            secondaryNavOpen: false\n          }\n        }\n      }));\n    };\n\n    this.openSidenav = () => {\n      console.log(\"opening sidenav\");\n      let {\n        setLayoutSettings,\n        settings\n      } = this.props;\n      setLayoutSettings(merge({}, settings, {\n        layout1Settings: {\n          leftSidebar: {\n            open: true\n          }\n        }\n      }));\n    };\n  }\n\n  componentDidMount() {\n    if (this.state.selectedItem === null) this.closeSecSidenav();\n    if (window) if (window.innerWidth < 1200) {\n      this.closeSidenav();\n    } else {\n      this.openSidenav();\n    }\n    this.windowListener = window.addEventListener(\"resize\", ({\n      target\n    }) => {\n      if (window.innerWidth < 1200) {\n        this.closeSidenav();\n      } else {\n        this.openSidenav();\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    if (this.windowListener) {\n      window.removeEventListener(\"resize\", this.windowListener);\n    }\n  }\n\n  render() {\n    let {\n      settings\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"side-content-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Srcollbar, {\n      className: classList({\n        \"sidebar-left o-hidden rtl-ps-none\": true,\n        open: settings.layout1Settings.leftSidebar.open\n      }) // id=\"mainsidenav\"\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"navigation-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }\n    }, navigations.map((item, i) => /*#__PURE__*/React.createElement(\"li\", {\n      className: classList({\n        \"nav-item\": true,\n        active: this.state.selectedItem === item\n      }),\n      onMouseEnter: () => {\n        this.onMainItemMouseEnter(item);\n      },\n      onMouseLeave: this.onMainItemMouseLeave,\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 15\n      }\n    }, item.path && item.type !== \"extLink\" && /*#__PURE__*/React.createElement(NavLink, {\n      className: \"nav-item-hold\",\n      to: item.path,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: `nav-icon ${item.icon}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"nav-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 21\n      }\n    }, item.name)), item.path && item.type === \"extLink\" && /*#__PURE__*/React.createElement(\"a\", {\n      className: \"nav-item-hold\",\n      href: item.path,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: `nav-icon ${item.icon}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"nav-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 21\n      }\n    }, item.name)), !item.path && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"nav-item-hold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: `nav-icon ${item.icon}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"nav-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 21\n      }\n    }, item.name)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"triangle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }\n    }))))), /*#__PURE__*/React.createElement(ScrollBar, {\n      className: classList({\n        \"sidebar-left-secondary o-hidden rtl-ps-none\": true,\n        open: settings.layout1Settings.leftSidebar.secondaryNavOpen\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }\n    }, this.state.selectedItem && this.state.selectedItem.sub && /*#__PURE__*/React.createElement(DropDownMenu, {\n      menu: this.state.selectedItem.sub,\n      closeSecSidenav: this.closeSecSidenav,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      onMouseEnter: this.closeSecSidenav,\n      className: classList({\n        \"sidebar-overlay\": true,\n        open: settings.layout1Settings.leftSidebar.secondaryNavOpen\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nLayout1Sidenav.propTypes = {\n  setLayoutSettings: PropTypes.func.isRequired,\n  setDefaultSettings: PropTypes.func.isRequired,\n  logoutUser: PropTypes.func.isRequired,\n  user: PropTypes.object.isRequired,\n  settings: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  setDefaultSettings: PropTypes.func.isRequired,\n  setLayoutSettings: PropTypes.func.isRequired,\n  logoutUser: PropTypes.func.isRequired,\n  user: state.user,\n  settings: state.layout.settings\n});\n\nexport default withRouter(connect(mapStateToProps, {\n  setLayoutSettings,\n  setDefaultSettings,\n  logoutUser\n})(Layout1Sidenav));","map":{"version":3,"sources":["/Users/arjun/Documents/Personal/Test/Theta/UI Theme/gull-admin/react/src/app/GullLayout/Layout1/Layout1Sidenav.jsx"],"names":["React","Component","NavLink","navigations","merge","classList","isMobile","Srcollbar","DropDownMenu","PropTypes","connect","setLayoutSettings","setDefaultSettings","logoutUser","withRouter","ScrollBar","Layout1Sidenav","windowListener","state","selectedItem","navOpen","secondaryNavOpen","onMainItemMouseEnter","item","type","setSelected","openSecSidenav","closeSecSidenav","onMainItemMouseLeave","setState","removeSelected","settings","props","layout1Settings","leftSidebar","console","log","other","open","closeSidenav","openSidenav","componentDidMount","window","innerWidth","addEventListener","target","componentWillUnmount","removeEventListener","render","map","i","active","path","icon","name","sub","propTypes","func","isRequired","user","object","mapStateToProps","layout"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { navigations } from \"../../navigations\";\nimport { merge } from \"lodash\";\nimport { classList, isMobile } from \"@utils\";\nimport Srcollbar from \"react-perfect-scrollbar\";\nimport { DropDownMenu } from \"@gull\";\n\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport {\n  setLayoutSettings,\n  setDefaultSettings\n} from \"app/redux/actions/LayoutActions\";\nimport { logoutUser } from \"app/redux/actions/UserActions\";\nimport { withRouter } from \"react-router-dom\";\nimport ScrollBar from \"react-perfect-scrollbar\";\n\nclass Layout1Sidenav extends Component {\n  windowListener = null;\n\n  state = {\n    selectedItem: null,\n    navOpen: true,\n    secondaryNavOpen: false\n  };\n\n  onMainItemMouseEnter = item => {\n    if (item.type === \"dropDown\") {\n      this.setSelected(item);\n      this.openSecSidenav();\n    } else {\n      this.setSelected(item);\n      this.closeSecSidenav();\n    }\n  };\n\n  onMainItemMouseLeave = () => {\n    // this.closeSecSidenav();\n  };\n\n  setSelected = selectedItem => {\n    this.setState({ selectedItem });\n    // console.log(selectedItem);\n  };\n\n  removeSelected = () => {\n    this.setState({ selectedItem: null });\n    // console.log('removed');\n  };\n\n  openSecSidenav = () => {\n    let { setLayoutSettings, settings } = this.props;\n\n    setLayoutSettings(\n      merge({}, settings, {\n        layout1Settings: {\n          leftSidebar: {\n            secondaryNavOpen: true\n          }\n        }\n      })\n    );\n  };\n\n  closeSecSidenav = () => {\n    console.log(\"closing sec sidenav\");\n    let { setLayoutSettings, settings } = this.props;\n    let other = {};\n\n    if (isMobile()) {\n      other.open = false;\n    }\n\n    setLayoutSettings(\n      merge({}, settings, {\n        layout1Settings: {\n          leftSidebar: {\n            ...other,\n            secondaryNavOpen: false\n          }\n        }\n      })\n    );\n  };\n\n  closeSidenav = () => {\n    console.log(\"closing sidenav\");\n\n    let { setLayoutSettings, settings } = this.props;\n    setLayoutSettings(\n      merge({}, settings, {\n        layout1Settings: {\n          leftSidebar: {\n            open: false,\n            secondaryNavOpen: false\n          }\n        }\n      })\n    );\n  };\n\n  openSidenav = () => {\n    console.log(\"opening sidenav\");\n    let { setLayoutSettings, settings } = this.props;\n    setLayoutSettings(\n      merge({}, settings, {\n        layout1Settings: {\n          leftSidebar: {\n            open: true\n          }\n        }\n      })\n    );\n  };\n\n  componentDidMount() {\n    if (this.state.selectedItem === null) this.closeSecSidenav();\n\n    if (window)\n      if (window.innerWidth < 1200) {\n        this.closeSidenav();\n      } else {\n        this.openSidenav();\n      }\n\n    this.windowListener = window.addEventListener(\"resize\", ({ target }) => {\n      if (window.innerWidth < 1200) {\n        this.closeSidenav();\n      } else {\n        this.openSidenav();\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    if (this.windowListener) {\n      window.removeEventListener(\"resize\", this.windowListener);\n    }\n  }\n\n  render() {\n    let { settings } = this.props;\n\n    return (\n      <div className=\"side-content-wrap\">\n        <Srcollbar\n          className={classList({\n            \"sidebar-left o-hidden rtl-ps-none\": true,\n            open: settings.layout1Settings.leftSidebar.open\n          })}\n          // id=\"mainsidenav\"\n        >\n          <ul className=\"navigation-left\">\n            {navigations.map((item, i) => (\n              <li\n                className={classList({\n                  \"nav-item\": true,\n                  active: this.state.selectedItem === item\n                })}\n                onMouseEnter={() => {\n                  this.onMainItemMouseEnter(item);\n                }}\n                onMouseLeave={this.onMainItemMouseLeave}\n                key={i}\n              >\n                {item.path && item.type !== \"extLink\" && (\n                  <NavLink className=\"nav-item-hold\" to={item.path}>\n                    <i className={`nav-icon ${item.icon}`}></i>\n                    <span className=\"nav-text\">{item.name}</span>\n                  </NavLink>\n                )}\n                {item.path && item.type === \"extLink\" && (\n                  <a className=\"nav-item-hold\" href={item.path}>\n                    <i className={`nav-icon ${item.icon}`}></i>\n                    <span className=\"nav-text\">{item.name}</span>\n                  </a>\n                )}\n                {!item.path && (\n                  <div className=\"nav-item-hold\">\n                    <i className={`nav-icon ${item.icon}`}></i>\n                    <span className=\"nav-text\">{item.name}</span>\n                  </div>\n                )}\n                <div className=\"triangle\"></div>\n              </li>\n            ))}\n          </ul>\n        </Srcollbar>\n\n        <ScrollBar\n          className={classList({\n            \"sidebar-left-secondary o-hidden rtl-ps-none\": true,\n            open: settings.layout1Settings.leftSidebar.secondaryNavOpen\n          })}\n        >\n          {this.state.selectedItem && this.state.selectedItem.sub && (\n            <DropDownMenu\n              menu={this.state.selectedItem.sub}\n              closeSecSidenav={this.closeSecSidenav}\n            ></DropDownMenu>\n          )}\n          <span></span>\n        </ScrollBar>\n        <div\n          onMouseEnter={this.closeSecSidenav}\n          className={classList({\n            \"sidebar-overlay\": true,\n            open: settings.layout1Settings.leftSidebar.secondaryNavOpen\n          })}\n        ></div>\n      </div>\n    );\n  }\n}\n\nLayout1Sidenav.propTypes = {\n  setLayoutSettings: PropTypes.func.isRequired,\n  setDefaultSettings: PropTypes.func.isRequired,\n  logoutUser: PropTypes.func.isRequired,\n  user: PropTypes.object.isRequired,\n  settings: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  setDefaultSettings: PropTypes.func.isRequired,\n  setLayoutSettings: PropTypes.func.isRequired,\n  logoutUser: PropTypes.func.isRequired,\n  user: state.user,\n  settings: state.layout.settings\n});\n\nexport default withRouter(\n  connect(mapStateToProps, {\n    setLayoutSettings,\n    setDefaultSettings,\n    logoutUser\n  })(Layout1Sidenav)\n);\n"]},"metadata":{},"sourceType":"module"}