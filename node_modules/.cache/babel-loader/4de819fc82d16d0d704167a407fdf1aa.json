{"ast":null,"code":"import _toConsumableArray from\"/Users/arjun/Documents/Personal/Test/Theta/UI Theme/gull-admin/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import Mock from\"../mock\";import shortId from\"shortid\";var NotificationDB={list:[{id:shortId.generate(),heading:\"Message\",icon:{name:\"chat\",color:\"primary\"},timestamp:1570702802573,title:\"New message from Devid\",subtitle:\"Hello, Let's chit chat...\",path:\"chat\"},{id:shortId.generate(),heading:\"Alert\",icon:{name:\"notifications\",color:\"error\"},timestamp:1570702702573,title:\"Server overloaded\",subtitle:\"Traffice reached 2M\",path:\"page-layouts/user-profile\"},{id:shortId.generate(),heading:\"Message\",icon:{name:\"chat\",color:\"primary\"},timestamp:1570502502573,title:\"New message from Goustove\",subtitle:\"Hello, Let's chit chat...\",path:\"chat\"}]};Mock.onGet(\"/api/notification\").reply(function(config){var response=NotificationDB.list;return[200,response];});Mock.onPost(\"/api/notification/add\").reply(function(config){var response=NotificationDB.list;return[200,response];});Mock.onPost(\"/api/notification/delete\").reply(function(config){var _JSON$parse=JSON.parse(config.data),id=_JSON$parse.id;console.log(id);var response=NotificationDB.list.filter(function(notification){return notification.id!==id;});NotificationDB.list=_toConsumableArray(response);return[200,response];});Mock.onPost(\"/api/notification/delete-all\").reply(function(config){NotificationDB.list=[];var response=NotificationDB.list;return[200,response];});","map":{"version":3,"sources":["/Users/arjun/Documents/Personal/Test/Theta/UI Theme/gull-admin/react/src/fake-db/db/notification.js"],"names":["Mock","shortId","NotificationDB","list","id","generate","heading","icon","name","color","timestamp","title","subtitle","path","onGet","reply","config","response","onPost","JSON","parse","data","console","log","filter","notification"],"mappings":"mMAAA,MAAOA,CAAAA,IAAP,KAAiB,SAAjB,CACA,MAAOC,CAAAA,OAAP,KAAoB,SAApB,CAEA,GAAMC,CAAAA,cAAc,CAAG,CACrBC,IAAI,CAAE,CACJ,CACEC,EAAE,CAAEH,OAAO,CAACI,QAAR,EADN,CAEEC,OAAO,CAAE,SAFX,CAGEC,IAAI,CAAE,CACJC,IAAI,CAAE,MADF,CAEJC,KAAK,CAAE,SAFH,CAHR,CAOEC,SAAS,CAAE,aAPb,CAQEC,KAAK,CAAE,wBART,CASEC,QAAQ,CAAE,2BATZ,CAUEC,IAAI,CAAE,MAVR,CADI,CAaJ,CACET,EAAE,CAAEH,OAAO,CAACI,QAAR,EADN,CAEEC,OAAO,CAAE,OAFX,CAGEC,IAAI,CAAE,CACJC,IAAI,CAAE,eADF,CAEJC,KAAK,CAAE,OAFH,CAHR,CAOEC,SAAS,CAAE,aAPb,CAQEC,KAAK,CAAE,mBART,CASEC,QAAQ,CAAE,qBATZ,CAUEC,IAAI,CAAE,2BAVR,CAbI,CAyBJ,CACET,EAAE,CAAEH,OAAO,CAACI,QAAR,EADN,CAEEC,OAAO,CAAE,SAFX,CAGEC,IAAI,CAAE,CACJC,IAAI,CAAE,MADF,CAEJC,KAAK,CAAE,SAFH,CAHR,CAOEC,SAAS,CAAE,aAPb,CAQEC,KAAK,CAAE,2BART,CASEC,QAAQ,CAAE,2BATZ,CAUEC,IAAI,CAAE,MAVR,CAzBI,CADe,CAAvB,CAyCAb,IAAI,CAACc,KAAL,CAAW,mBAAX,EAAgCC,KAAhC,CAAsC,SAAAC,MAAM,CAAI,CAC9C,GAAMC,CAAAA,QAAQ,CAAGf,cAAc,CAACC,IAAhC,CACA,MAAO,CAAC,GAAD,CAAMc,QAAN,CAAP,CACD,CAHD,EAKAjB,IAAI,CAACkB,MAAL,CAAY,uBAAZ,EAAqCH,KAArC,CAA2C,SAAAC,MAAM,CAAI,CACnD,GAAMC,CAAAA,QAAQ,CAAGf,cAAc,CAACC,IAAhC,CACA,MAAO,CAAC,GAAD,CAAMc,QAAN,CAAP,CACD,CAHD,EAKAjB,IAAI,CAACkB,MAAL,CAAY,0BAAZ,EAAwCH,KAAxC,CAA8C,SAAAC,MAAM,CAAI,CACtD,gBAAaG,IAAI,CAACC,KAAL,CAAWJ,MAAM,CAACK,IAAlB,CAAb,CAAMjB,EAAN,aAAMA,EAAN,CACAkB,OAAO,CAACC,GAAR,CAAYnB,EAAZ,EAEA,GAAMa,CAAAA,QAAQ,CAAGf,cAAc,CAACC,IAAf,CAAoBqB,MAApB,CACf,SAAAC,YAAY,QAAIA,CAAAA,YAAY,CAACrB,EAAb,GAAoBA,EAAxB,EADG,CAAjB,CAGAF,cAAc,CAACC,IAAf,oBAA0Bc,QAA1B,EACA,MAAO,CAAC,GAAD,CAAMA,QAAN,CAAP,CACD,CATD,EAWAjB,IAAI,CAACkB,MAAL,CAAY,8BAAZ,EAA4CH,KAA5C,CAAkD,SAAAC,MAAM,CAAI,CAC1Dd,cAAc,CAACC,IAAf,CAAsB,EAAtB,CACA,GAAMc,CAAAA,QAAQ,CAAGf,cAAc,CAACC,IAAhC,CACA,MAAO,CAAC,GAAD,CAAMc,QAAN,CAAP,CACD,CAJD","sourcesContent":["import Mock from \"../mock\";\nimport shortId from \"shortid\";\n\nconst NotificationDB = {\n  list: [\n    {\n      id: shortId.generate(),\n      heading: \"Message\",\n      icon: {\n        name: \"chat\",\n        color: \"primary\"\n      },\n      timestamp: 1570702802573,\n      title: \"New message from Devid\",\n      subtitle: \"Hello, Let's chit chat...\",\n      path: \"chat\"\n    },\n    {\n      id: shortId.generate(),\n      heading: \"Alert\",\n      icon: {\n        name: \"notifications\",\n        color: \"error\"\n      },\n      timestamp: 1570702702573,\n      title: \"Server overloaded\",\n      subtitle: \"Traffice reached 2M\",\n      path: \"page-layouts/user-profile\"\n    },\n    {\n      id: shortId.generate(),\n      heading: \"Message\",\n      icon: {\n        name: \"chat\",\n        color: \"primary\"\n      },\n      timestamp: 1570502502573,\n      title: \"New message from Goustove\",\n      subtitle: \"Hello, Let's chit chat...\",\n      path: \"chat\"\n    }\n  ]\n};\n\nMock.onGet(\"/api/notification\").reply(config => {\n  const response = NotificationDB.list;\n  return [200, response];\n});\n\nMock.onPost(\"/api/notification/add\").reply(config => {\n  const response = NotificationDB.list;\n  return [200, response];\n});\n\nMock.onPost(\"/api/notification/delete\").reply(config => {\n  let { id } = JSON.parse(config.data);\n  console.log(id);\n\n  const response = NotificationDB.list.filter(\n    notification => notification.id !== id\n  );\n  NotificationDB.list = [...response];\n  return [200, response];\n});\n\nMock.onPost(\"/api/notification/delete-all\").reply(config => {\n  NotificationDB.list = [];\n  const response = NotificationDB.list;\n  return [200, response];\n});\n"]},"metadata":{},"sourceType":"module"}