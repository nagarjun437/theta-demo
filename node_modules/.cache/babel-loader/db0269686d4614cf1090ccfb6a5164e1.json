{"ast":null,"code":"var _jsxFileName = \"/Users/arjun/Documents/Personal/Test/Theta/UI Theme/gull-admin/react/src/app/views/extra-kits/AppSweetAlert.jsx\";\nimport React, { Component } from \"react\";\nimport { renderToStaticMarkup } from \"react-dom/server\";\nimport { Breadcrumb, SimpleCard } from \"@gull\";\nimport SweetAlert from \"sweetalert2-react\";\nimport swal from \"sweetalert2\";\nimport { Button, Row, Col } from \"react-bootstrap\";\n\nclass AppSweetAlert extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      basic1: false,\n      basic2: false,\n      success: false,\n      error: false,\n      warning: false,\n      question: false,\n      info: false,\n      other1: false,\n      other2: false,\n      other3: false\n    };\n\n    this.toggleAlert = name => {\n      this.setState({\n        [name]: !this.state[name]\n      });\n    };\n\n    this.closeAlert = name => {\n      this.setState({\n        [name]: false\n      });\n    };\n  }\n\n  render() {\n    let {\n      basic1,\n      basic2,\n      success,\n      error,\n      info,\n      warning,\n      question,\n      other1,\n      other2,\n      other3\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Breadcrumb, {\n      routeSegments: [{\n        name: \"Home\",\n        path: \"/\"\n      }, {\n        name: \"Extra Kits\",\n        path: \"/extra-kits\"\n      }, {\n        name: \"Sweet Alert\"\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      lg: 6,\n      md: 6,\n      sm: 6,\n      xs: 12,\n      className: \"mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(SimpleCard, {\n      title: \"Basic Alert\",\n      className: \"h-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"btn-block mb-2\",\n      onClick: () => this.toggleAlert(\"basic1\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 15\n      }\n    }, \"Alert with title\"), /*#__PURE__*/React.createElement(SweetAlert, {\n      show: basic1,\n      title: \"Title\",\n      text: \"Here's a message!\",\n      onConfirm: () => this.toggleAlert(\"basic1\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      className: \"btn-block mb-2\",\n      onClick: () => this.toggleAlert(\"basic2\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 15\n      }\n    }, \"Alert with HTML\"), /*#__PURE__*/React.createElement(SweetAlert, {\n      show: basic2,\n      title: \"Demo\",\n      html: renderToStaticMarkup( /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 44\n        }\n      }, \"Message from html\")),\n      onConfirm: () => this.toggleAlert(\"basic2\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      lg: 6,\n      md: 6,\n      sm: 6,\n      xs: 12,\n      className: \"mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(SimpleCard, {\n      title: \"Alert Types\",\n      className: \"h-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"btn-block mb-2\",\n      variant: \"success\",\n      onClick: () => this.toggleAlert(\"success\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 15\n      }\n    }, \"Success\"), /*#__PURE__*/React.createElement(SweetAlert, {\n      show: success,\n      title: \"Alert Title\",\n      type: \"success\",\n      text: \"SweetAlert in React\",\n      onConfirm: () => this.toggleAlert(\"success\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      className: \"btn-block mb-2\",\n      variant: \"info\",\n      onClick: () => this.toggleAlert(\"info\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 15\n      }\n    }, \"info\"), /*#__PURE__*/React.createElement(SweetAlert, {\n      show: info,\n      title: \"Alert Title\",\n      type: \"info\",\n      text: \"SweetAlert in React\",\n      onConfirm: () => this.toggleAlert(\"info\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      className: \"btn-block mb-2\",\n      variant: \"warning\",\n      onClick: () => this.toggleAlert(\"warning\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 15\n      }\n    }, \"warning\"), /*#__PURE__*/React.createElement(SweetAlert, {\n      show: warning,\n      title: \"Alert Title\",\n      type: \"warning\",\n      text: \"SweetAlert in React\",\n      onConfirm: () => this.toggleAlert(\"warning\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      className: \"btn-block mb-2\",\n      variant: \"danger\",\n      onClick: () => this.toggleAlert(\"error\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 15\n      }\n    }, \"error\"), /*#__PURE__*/React.createElement(SweetAlert, {\n      show: error,\n      title: \"Alert Title\",\n      type: \"error\",\n      text: \"SweetAlert in React\",\n      onConfirm: () => this.toggleAlert(\"error\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      className: \"btn-block mb-2\",\n      variant: \"success\",\n      onClick: () => this.toggleAlert(\"question\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 15\n      }\n    }, \"question\"), /*#__PURE__*/React.createElement(SweetAlert, {\n      show: question,\n      title: \"Alert Title\",\n      type: \"question\",\n      text: \"SweetAlert in React\",\n      onConfirm: () => this.toggleAlert(\"question\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      lg: 6,\n      md: 6,\n      sm: 6,\n      xs: 12,\n      className: \"mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(SimpleCard, {\n      title: \"Other Options\",\n      className: \"h-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"btn-block mb-2\",\n      onClick: () => this.toggleAlert(\"other1\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 15\n      }\n    }, \"Alert with Cancel\"), /*#__PURE__*/React.createElement(SweetAlert, {\n      show: other1,\n      title: \"Title with Cancel\",\n      text: \"SweetAlert in React\",\n      showCancelButton: true,\n      onConfirm: () => {\n        console.log(\"confirm\");\n        this.closeAlert(\"other1\");\n      },\n      onCancel: () => {\n        console.log(\"cancel\");\n        this.closeAlert(\"other1\");\n      },\n      onClose: () => this.closeAlert(\"other1\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      className: \"btn-block mb-2\",\n      onClick: () => {\n        swal.fire({\n          title: \"Are you sure?\",\n          text: \"You won't be able to revert this!\",\n          icon: \"warning\",\n          type: \"question\",\n          showCancelButton: true,\n          confirmButtonColor: \"#3085d6\",\n          cancelButtonColor: \"#d33\",\n          confirmButtonText: \"Yes, delete it!\",\n          cancelButtonText: \"No\"\n        }).then(result => {\n          if (result.value) {\n            swal.fire(\"Deleted!\", \"Your file has been deleted.\", \"success\");\n          } else {\n            swal.fire(\"Cancelled!\", \"Permission denied.\", \"error\");\n          }\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 15\n      }\n    }, \"Confirm Dialog\"), /*#__PURE__*/React.createElement(Button, {\n      className: \"btn-block mb-2\",\n      onClick: () => {\n        swal.fire({\n          title: \"Sweet!\",\n          text: \"Modal with a custom image.\",\n          imageUrl: \"/assets/images/photo-wide-4.jpg\",\n          imageWidth: 400,\n          imageHeight: 200,\n          imageAlt: \"Custom image\"\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 15\n      }\n    }, \"Alert with Custo Image\"), /*#__PURE__*/React.createElement(Button, {\n      className: \"btn-block mb-2\",\n      onClick: () => {\n        let timerInterval;\n        swal.fire({\n          title: \"Auto close alert!\",\n          html: \"I will close in <b></b> milliseconds.\",\n          timer: 2000,\n          timerProgressBar: true,\n          onBeforeOpen: () => {\n            swal.showLoading();\n            timerInterval = setInterval(() => {\n              swal.getContent().querySelector(\"b\").textContent = swal.getTimerLeft();\n            }, 100);\n          },\n          onClose: () => {\n            clearInterval(timerInterval);\n          }\n        }).then(result => {\n          if (\n          /* Read more about handling dismissals below */\n          result.dismiss === swal.DismissReason.timer) {\n            console.log(\"I was closed by the timer\"); // eslint-disable-line\n          }\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 15\n      }\n    }, \"Self Closing Alert\"))), /*#__PURE__*/React.createElement(Col, {\n      lg: 6,\n      md: 6,\n      sm: 6,\n      xs: 12,\n      className: \"mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(SimpleCard, {\n      title: \"Special Alerts\",\n      className: \"h-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"btn-block mb-2\",\n      onClick: () => {\n        swal.fire({\n          title: \"Submit your Github username\",\n          input: \"text\",\n          inputAttributes: {\n            autocapitalize: \"off\"\n          },\n          showCancelButton: true,\n          confirmButtonText: \"Look up\",\n          showLoaderOnConfirm: true,\n          preConfirm: login => {\n            return fetch(`//api.github.com/users/${login}`).then(response => {\n              if (!response.ok) {\n                throw new Error(response.statusText);\n              }\n\n              return response.json();\n            }).catch(error => {\n              swal.showValidationMessage(`Request failed: ${error}`);\n            });\n          },\n          allowOutsideClick: () => !swal.isLoading()\n        }).then(result => {\n          if (result.value) {\n            swal.fire({\n              title: `${result.value.login}'s avatar`,\n              imageUrl: result.value.avatar_url\n            });\n          }\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 15\n      }\n    }, \"Alert with Server Request\"), /*#__PURE__*/React.createElement(Button, {\n      className: \"btn-block mb-2\",\n      onClick: () => {\n        swal.mixin({\n          input: \"text\",\n          confirmButtonText: \"Next &rarr;\",\n          showCancelButton: true,\n          progressSteps: [\"1\", \"2\", \"3\"]\n        }).queue([{\n          title: \"Question 1\",\n          text: \"Chaining swal2 modals is easy\"\n        }, \"Question 2\", \"Question 3\"]).then(result => {\n          if (result.value) {\n            const answers = JSON.stringify(result.value);\n            swal.fire({\n              title: \"All done!\",\n              html: `\n          Your answers:\n          <pre><code>${answers}</code></pre>\n        `,\n              confirmButtonText: \"Lovely!\"\n            });\n          }\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 15\n      }\n    }, \"Alert with Stepper\"), /*#__PURE__*/React.createElement(Button, {\n      className: \"btn-block mb-2\",\n      onClick: () => {\n        const ipAPI = \"//api.ipify.org?format=json\";\n        swal.queue([{\n          title: \"Your public IP\",\n          confirmButtonText: \"Show my public IP\",\n          text: \"Your public IP will be received \" + \"via AJAX request\",\n          showLoaderOnConfirm: true,\n          preConfirm: () => {\n            return fetch(ipAPI).then(response => response.json()).then(data => swal.insertQueueStep(data.ip)).catch(() => {\n              swal.insertQueueStep({\n                icon: \"error\",\n                title: \"Unable to get your public IP\"\n              });\n            });\n          }\n        }]);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 15\n      }\n    }, \"Alert with Stepper\"))), /*#__PURE__*/React.createElement(Col, {\n      lg: 6,\n      md: 6,\n      sm: 6,\n      xs: 12,\n      className: \"mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(SimpleCard, {\n      title: \"Positioning with Animation\",\n      className: \"h-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"btn-block mb-2\",\n      onClick: () => {\n        const ipAPI = \"//api.ipify.org?format=json\";\n        swal.fire({\n          title: \"Custom Position\",\n          confirmButtonText: \"Ok\",\n          position: \"top-end\",\n          icon: \"success\",\n          text: \"Your public IP will be received \" + \"via AJAX request\",\n          footer: `<a href=\"https://daneden.github.io/animate.css/\">positions?</a>`\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 15\n      }\n    }, \"Alert with Positioning\"), /*#__PURE__*/React.createElement(Button, {\n      className: \"btn-block mb-2\",\n      onClick: () => {\n        swal.fire({\n          title: \"Custom animation with Animate.css\",\n          showClass: {\n            popup: \"animated fadeInDown  faster\"\n          },\n          hideClass: {\n            popup: \"animated fadeOutUp  slower\"\n          }\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 15\n      }\n    }, \"Alert with Animation\")))));\n  }\n\n}\n\nexport default AppSweetAlert;","map":{"version":3,"sources":["/Users/arjun/Documents/Personal/Test/Theta/UI Theme/gull-admin/react/src/app/views/extra-kits/AppSweetAlert.jsx"],"names":["React","Component","renderToStaticMarkup","Breadcrumb","SimpleCard","SweetAlert","swal","Button","Row","Col","AppSweetAlert","state","basic1","basic2","success","error","warning","question","info","other1","other2","other3","toggleAlert","name","setState","closeAlert","render","path","console","log","fire","title","text","icon","type","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","then","result","value","imageUrl","imageWidth","imageHeight","imageAlt","timerInterval","html","timer","timerProgressBar","onBeforeOpen","showLoading","setInterval","getContent","querySelector","textContent","getTimerLeft","onClose","clearInterval","dismiss","DismissReason","input","inputAttributes","autocapitalize","showLoaderOnConfirm","preConfirm","login","fetch","response","ok","Error","statusText","json","catch","showValidationMessage","allowOutsideClick","isLoading","avatar_url","mixin","progressSteps","queue","answers","JSON","stringify","ipAPI","data","insertQueueStep","ip","position","footer","showClass","popup","hideClass"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { renderToStaticMarkup } from \"react-dom/server\";\nimport { Breadcrumb, SimpleCard } from \"@gull\";\nimport SweetAlert from \"sweetalert2-react\";\nimport swal from \"sweetalert2\";\nimport { Button, Row, Col } from \"react-bootstrap\";\n\nclass AppSweetAlert extends Component {\n  state = {\n    basic1: false,\n    basic2: false,\n    success: false,\n    error: false,\n    warning: false,\n    question: false,\n    info: false,\n    other1: false,\n    other2: false,\n    other3: false\n  };\n\n  toggleAlert = name => {\n    this.setState({ [name]: !this.state[name] });\n  };\n\n  closeAlert = name => {\n    this.setState({ [name]: false });\n  };\n\n  render() {\n    let {\n      basic1,\n      basic2,\n      success,\n      error,\n      info,\n      warning,\n      question,\n      other1,\n      other2,\n      other3\n    } = this.state;\n\n    return (\n      <div>\n        <Breadcrumb\n          routeSegments={[\n            { name: \"Home\", path: \"/\" },\n            { name: \"Extra Kits\", path: \"/extra-kits\" },\n            { name: \"Sweet Alert\" }\n          ]}\n        ></Breadcrumb>\n        <Row>\n          <Col lg={6} md={6} sm={6} xs={12} className=\"mb-4\">\n            <SimpleCard title=\"Basic Alert\" className=\"h-100\">\n              <Button\n                className=\"btn-block mb-2\"\n                onClick={() => this.toggleAlert(\"basic1\")}\n              >\n                Alert with title\n              </Button>\n              <SweetAlert\n                show={basic1}\n                title=\"Title\"\n                text=\"Here's a message!\"\n                onConfirm={() => this.toggleAlert(\"basic1\")}\n              />\n\n              <Button\n                className=\"btn-block mb-2\"\n                onClick={() => this.toggleAlert(\"basic2\")}\n              >\n                Alert with HTML\n              </Button>\n              <SweetAlert\n                show={basic2}\n                title=\"Demo\"\n                html={renderToStaticMarkup(<h1>Message from html</h1>)}\n                onConfirm={() => this.toggleAlert(\"basic2\")}\n              />\n            </SimpleCard>\n          </Col>\n\n          <Col lg={6} md={6} sm={6} xs={12} className=\"mb-4\">\n            <SimpleCard title=\"Alert Types\" className=\"h-100\">\n              <Button\n                className=\"btn-block mb-2\"\n                variant=\"success\"\n                onClick={() => this.toggleAlert(\"success\")}\n              >\n                Success\n              </Button>\n              <SweetAlert\n                show={success}\n                title=\"Alert Title\"\n                type=\"success\"\n                text=\"SweetAlert in React\"\n                onConfirm={() => this.toggleAlert(\"success\")}\n              />\n\n              <Button\n                className=\"btn-block mb-2\"\n                variant=\"info\"\n                onClick={() => this.toggleAlert(\"info\")}\n              >\n                info\n              </Button>\n              <SweetAlert\n                show={info}\n                title=\"Alert Title\"\n                type=\"info\"\n                text=\"SweetAlert in React\"\n                onConfirm={() => this.toggleAlert(\"info\")}\n              />\n\n              <Button\n                className=\"btn-block mb-2\"\n                variant=\"warning\"\n                onClick={() => this.toggleAlert(\"warning\")}\n              >\n                warning\n              </Button>\n              <SweetAlert\n                show={warning}\n                title=\"Alert Title\"\n                type=\"warning\"\n                text=\"SweetAlert in React\"\n                onConfirm={() => this.toggleAlert(\"warning\")}\n              />\n\n              <Button\n                className=\"btn-block mb-2\"\n                variant=\"danger\"\n                onClick={() => this.toggleAlert(\"error\")}\n              >\n                error\n              </Button>\n              <SweetAlert\n                show={error}\n                title=\"Alert Title\"\n                type=\"error\"\n                text=\"SweetAlert in React\"\n                onConfirm={() => this.toggleAlert(\"error\")}\n              />\n\n              <Button\n                className=\"btn-block mb-2\"\n                variant=\"success\"\n                onClick={() => this.toggleAlert(\"question\")}\n              >\n                question\n              </Button>\n              <SweetAlert\n                show={question}\n                title=\"Alert Title\"\n                type=\"question\"\n                text=\"SweetAlert in React\"\n                onConfirm={() => this.toggleAlert(\"question\")}\n              />\n            </SimpleCard>\n          </Col>\n\n          <Col lg={6} md={6} sm={6} xs={12} className=\"mb-4\">\n            <SimpleCard title=\"Other Options\" className=\"h-100\">\n              <Button\n                className=\"btn-block mb-2\"\n                onClick={() => this.toggleAlert(\"other1\")}\n              >\n                Alert with Cancel\n              </Button>\n              <SweetAlert\n                show={other1}\n                title=\"Title with Cancel\"\n                text=\"SweetAlert in React\"\n                showCancelButton\n                onConfirm={() => {\n                  console.log(\"confirm\");\n                  this.closeAlert(\"other1\");\n                }}\n                onCancel={() => {\n                  console.log(\"cancel\");\n                  this.closeAlert(\"other1\");\n                }}\n                onClose={() => this.closeAlert(\"other1\")}\n              />\n\n              <Button\n                className=\"btn-block mb-2\"\n                onClick={() => {\n                  swal\n                    .fire({\n                      title: \"Are you sure?\",\n                      text: \"You won't be able to revert this!\",\n                      icon: \"warning\",\n                      type: \"question\",\n                      showCancelButton: true,\n                      confirmButtonColor: \"#3085d6\",\n                      cancelButtonColor: \"#d33\",\n                      confirmButtonText: \"Yes, delete it!\",\n                      cancelButtonText: \"No\"\n                    })\n                    .then(result => {\n                      if (result.value) {\n                        swal.fire(\n                          \"Deleted!\",\n                          \"Your file has been deleted.\",\n                          \"success\"\n                        );\n                      } else {\n                        swal.fire(\"Cancelled!\", \"Permission denied.\", \"error\");\n                      }\n                    });\n                }}\n              >\n                Confirm Dialog\n              </Button>\n\n              <Button\n                className=\"btn-block mb-2\"\n                onClick={() => {\n                  swal.fire({\n                    title: \"Sweet!\",\n                    text: \"Modal with a custom image.\",\n                    imageUrl: \"/assets/images/photo-wide-4.jpg\",\n                    imageWidth: 400,\n                    imageHeight: 200,\n                    imageAlt: \"Custom image\"\n                  });\n                }}\n              >\n                Alert with Custo Image\n              </Button>\n\n              <Button\n                className=\"btn-block mb-2\"\n                onClick={() => {\n                  let timerInterval;\n                  swal\n                    .fire({\n                      title: \"Auto close alert!\",\n                      html: \"I will close in <b></b> milliseconds.\",\n                      timer: 2000,\n                      timerProgressBar: true,\n                      onBeforeOpen: () => {\n                        swal.showLoading();\n                        timerInterval = setInterval(() => {\n                          swal\n                            .getContent()\n                            .querySelector(\n                              \"b\"\n                            ).textContent = swal.getTimerLeft();\n                        }, 100);\n                      },\n                      onClose: () => {\n                        clearInterval(timerInterval);\n                      }\n                    })\n                    .then(result => {\n                      if (\n                        /* Read more about handling dismissals below */\n                        result.dismiss === swal.DismissReason.timer\n                      ) {\n                        console.log(\"I was closed by the timer\"); // eslint-disable-line\n                      }\n                    });\n                }}\n              >\n                Self Closing Alert\n              </Button>\n            </SimpleCard>\n          </Col>\n\n          <Col lg={6} md={6} sm={6} xs={12} className=\"mb-4\">\n            <SimpleCard title=\"Special Alerts\" className=\"h-100\">\n              <Button\n                className=\"btn-block mb-2\"\n                onClick={() => {\n                  swal\n                    .fire({\n                      title: \"Submit your Github username\",\n                      input: \"text\",\n                      inputAttributes: {\n                        autocapitalize: \"off\"\n                      },\n                      showCancelButton: true,\n                      confirmButtonText: \"Look up\",\n                      showLoaderOnConfirm: true,\n                      preConfirm: login => {\n                        return fetch(`//api.github.com/users/${login}`)\n                          .then(response => {\n                            if (!response.ok) {\n                              throw new Error(response.statusText);\n                            }\n                            return response.json();\n                          })\n                          .catch(error => {\n                            swal.showValidationMessage(\n                              `Request failed: ${error}`\n                            );\n                          });\n                      },\n                      allowOutsideClick: () => !swal.isLoading()\n                    })\n                    .then(result => {\n                      if (result.value) {\n                        swal.fire({\n                          title: `${result.value.login}'s avatar`,\n                          imageUrl: result.value.avatar_url\n                        });\n                      }\n                    });\n                }}\n              >\n                Alert with Server Request\n              </Button>\n\n              <Button\n                className=\"btn-block mb-2\"\n                onClick={() => {\n                  swal\n                    .mixin({\n                      input: \"text\",\n                      confirmButtonText: \"Next &rarr;\",\n                      showCancelButton: true,\n                      progressSteps: [\"1\", \"2\", \"3\"]\n                    })\n                    .queue([\n                      {\n                        title: \"Question 1\",\n                        text: \"Chaining swal2 modals is easy\"\n                      },\n                      \"Question 2\",\n                      \"Question 3\"\n                    ])\n                    .then(result => {\n                      if (result.value) {\n                        const answers = JSON.stringify(result.value);\n                        swal.fire({\n                          title: \"All done!\",\n                          html: `\n          Your answers:\n          <pre><code>${answers}</code></pre>\n        `,\n                          confirmButtonText: \"Lovely!\"\n                        });\n                      }\n                    });\n                }}\n              >\n                Alert with Stepper\n              </Button>\n\n              <Button\n                className=\"btn-block mb-2\"\n                onClick={() => {\n                  const ipAPI = \"//api.ipify.org?format=json\";\n                  swal.queue([\n                    {\n                      title: \"Your public IP\",\n                      confirmButtonText: \"Show my public IP\",\n                      text:\n                        \"Your public IP will be received \" + \"via AJAX request\",\n                      showLoaderOnConfirm: true,\n                      preConfirm: () => {\n                        return fetch(ipAPI)\n                          .then(response => response.json())\n                          .then(data => swal.insertQueueStep(data.ip))\n                          .catch(() => {\n                            swal.insertQueueStep({\n                              icon: \"error\",\n                              title: \"Unable to get your public IP\"\n                            });\n                          });\n                      }\n                    }\n                  ]);\n                }}\n              >\n                Alert with Stepper\n              </Button>\n            </SimpleCard>\n          </Col>\n\n          <Col lg={6} md={6} sm={6} xs={12} className=\"mb-4\">\n            <SimpleCard title=\"Positioning with Animation\" className=\"h-100\">\n              <Button\n                className=\"btn-block mb-2\"\n                onClick={() => {\n                  const ipAPI = \"//api.ipify.org?format=json\";\n                  swal.fire({\n                    title: \"Custom Position\",\n                    confirmButtonText: \"Ok\",\n                    position: \"top-end\",\n                    icon: \"success\",\n                    text:\n                      \"Your public IP will be received \" + \"via AJAX request\",\n                    footer: `<a href=\"https://daneden.github.io/animate.css/\">positions?</a>`\n                  });\n                }}\n              >\n                Alert with Positioning\n              </Button>\n\n              <Button\n                className=\"btn-block mb-2\"\n                onClick={() => {\n                  swal.fire({\n                    title: \"Custom animation with Animate.css\",\n                    showClass: {\n                      popup: \"animated fadeInDown  faster\"\n                    },\n                    hideClass: {\n                      popup: \"animated fadeOutUp  slower\"\n                    }\n                  });\n                }}\n              >\n                Alert with Animation\n              </Button>\n            </SimpleCard>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default AppSweetAlert;\n"]},"metadata":{},"sourceType":"module"}