{"ast":null,"code":"import _objectSpread from\"/Users/arjun/Documents/Personal/Test/Theta/UI Theme/theta-demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import jwtAuthService from\"../../services/jwtAuthService\";import FirebaseAuthService from\"../../services/firebase/firebaseAuthService\";import{setUserData}from\"./UserActions\";import history from\"@history.js\";export var LOGIN_ERROR=\"LOGIN_ERROR\";export var LOGIN_SUCCESS=\"LOGIN_SUCCESS\";export var LOGIN_LOADING=\"LOGIN_LOADING\";export var RESET_PASSWORD=\"RESET_PASSWORD\";export function loginWithEmailAndPassword(_ref){var email=_ref.email,password=_ref.password;return function(dispatch){dispatch({type:LOGIN_LOADING});jwtAuthService.loginWithEmailAndPassword(email,password).then(function(user){dispatch(setUserData(user));history.push({pathname:\"/\"});return dispatch({type:LOGIN_SUCCESS});}).catch(function(error){return dispatch({type:LOGIN_ERROR,payload:error});});};}export function resetPassword(_ref2){var email=_ref2.email;return function(dispatch){dispatch({payload:email,type:RESET_PASSWORD});};}export function firebaseLoginEmailPassword(_ref3){var email=_ref3.email,password=_ref3.password;return function(dispatch){FirebaseAuthService.signInWithEmailAndPassword(email,password).then(function(user){if(user){dispatch(setUserData(_objectSpread({userId:\"1\",role:\"ADMIN\",displayName:\"Watson Joyce\",email:\"watsonjoyce@gmail.com\",photoURL:\"/assets/images/face-7.jpg\",age:25,token:\"faslkhfh423oiu4h4kj432rkj23h432u49ufjaklj423h4jkhkjh\"},user)));history.push({pathname:\"/\"});return dispatch({type:LOGIN_SUCCESS});}else{return dispatch({type:LOGIN_ERROR,payload:\"Login Failed\"});}}).catch(function(error){return dispatch({type:LOGIN_ERROR,payload:error});});};}","map":{"version":3,"sources":["/Users/arjun/Documents/Personal/Test/Theta/UI Theme/theta-demo/src/app/redux/actions/LoginActions.js"],"names":["jwtAuthService","FirebaseAuthService","setUserData","history","LOGIN_ERROR","LOGIN_SUCCESS","LOGIN_LOADING","RESET_PASSWORD","loginWithEmailAndPassword","email","password","dispatch","type","then","user","push","pathname","catch","error","payload","resetPassword","firebaseLoginEmailPassword","signInWithEmailAndPassword","userId","role","displayName","photoURL","age","token"],"mappings":"oLAAA,MAAOA,CAAAA,cAAP,KAA2B,+BAA3B,CACA,MAAOC,CAAAA,mBAAP,KAAgC,6CAAhC,CACA,OAASC,WAAT,KAA4B,eAA5B,CACA,MAAOC,CAAAA,OAAP,KAAoB,aAApB,CAEA,MAAO,IAAMC,CAAAA,WAAW,CAAG,aAApB,CACP,MAAO,IAAMC,CAAAA,aAAa,CAAG,eAAtB,CACP,MAAO,IAAMC,CAAAA,aAAa,CAAG,eAAtB,CACP,MAAO,IAAMC,CAAAA,cAAc,CAAG,gBAAvB,CAEP,MAAO,SAASC,CAAAA,yBAAT,MAAwD,IAAnBC,CAAAA,KAAmB,MAAnBA,KAAmB,CAAZC,QAAY,MAAZA,QAAY,CAC7D,MAAO,UAAAC,QAAQ,CAAI,CACjBA,QAAQ,CAAC,CACPC,IAAI,CAAEN,aADC,CAAD,CAAR,CAIAN,cAAc,CACXQ,yBADH,CAC6BC,KAD7B,CACoCC,QADpC,EAEGG,IAFH,CAEQ,SAAAC,IAAI,CAAI,CACZH,QAAQ,CAACT,WAAW,CAACY,IAAD,CAAZ,CAAR,CAEAX,OAAO,CAACY,IAAR,CAAa,CACXC,QAAQ,CAAE,GADC,CAAb,EAIA,MAAOL,CAAAA,QAAQ,CAAC,CACdC,IAAI,CAAEP,aADQ,CAAD,CAAf,CAGD,CAZH,EAaGY,KAbH,CAaS,SAAAC,KAAK,CAAI,CACd,MAAOP,CAAAA,QAAQ,CAAC,CACdC,IAAI,CAAER,WADQ,CAEde,OAAO,CAAED,KAFK,CAAD,CAAf,CAID,CAlBH,EAmBD,CAxBD,CAyBD,CAED,MAAO,SAASE,CAAAA,aAAT,OAAkC,IAATX,CAAAA,KAAS,OAATA,KAAS,CACvC,MAAO,UAAAE,QAAQ,CAAI,CACjBA,QAAQ,CAAC,CACPQ,OAAO,CAAEV,KADF,CAEPG,IAAI,CAAEL,cAFC,CAAD,CAAR,CAID,CALD,CAMD,CAED,MAAO,SAASc,CAAAA,0BAAT,OAAyD,IAAnBZ,CAAAA,KAAmB,OAAnBA,KAAmB,CAAZC,QAAY,OAAZA,QAAY,CAC9D,MAAO,UAAAC,QAAQ,CAAI,CACjBV,mBAAmB,CAACqB,0BAApB,CAA+Cb,KAA/C,CAAsDC,QAAtD,EACGG,IADH,CACQ,SAAAC,IAAI,CAAI,CACZ,GAAIA,IAAJ,CAAU,CACRH,QAAQ,CACNT,WAAW,gBACTqB,MAAM,CAAE,GADC,CAETC,IAAI,CAAE,OAFG,CAGTC,WAAW,CAAE,cAHJ,CAIThB,KAAK,CAAE,uBAJE,CAKTiB,QAAQ,CAAE,2BALD,CAMTC,GAAG,CAAE,EANI,CAOTC,KAAK,CAAE,sDAPE,EAQNd,IARM,EADL,CAAR,CAaAX,OAAO,CAACY,IAAR,CAAa,CACXC,QAAQ,CAAE,GADC,CAAb,EAIA,MAAOL,CAAAA,QAAQ,CAAC,CACdC,IAAI,CAAEP,aADQ,CAAD,CAAf,CAGD,CArBD,IAqBO,CACL,MAAOM,CAAAA,QAAQ,CAAC,CACdC,IAAI,CAAER,WADQ,CAEde,OAAO,CAAE,cAFK,CAAD,CAAf,CAID,CACF,CA7BH,EA8BGF,KA9BH,CA8BS,SAAAC,KAAK,CAAI,CACd,MAAOP,CAAAA,QAAQ,CAAC,CACdC,IAAI,CAAER,WADQ,CAEde,OAAO,CAAED,KAFK,CAAD,CAAf,CAID,CAnCH,EAoCD,CArCD,CAsCD","sourcesContent":["import jwtAuthService from \"../../services/jwtAuthService\";\nimport FirebaseAuthService from \"../../services/firebase/firebaseAuthService\";\nimport { setUserData } from \"./UserActions\";\nimport history from \"@history.js\";\n\nexport const LOGIN_ERROR = \"LOGIN_ERROR\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_LOADING = \"LOGIN_LOADING\";\nexport const RESET_PASSWORD = \"RESET_PASSWORD\";\n\nexport function loginWithEmailAndPassword({ email, password }) {\n  return dispatch => {\n    dispatch({\n      type: LOGIN_LOADING\n    });\n\n    jwtAuthService\n      .loginWithEmailAndPassword(email, password)\n      .then(user => {\n        dispatch(setUserData(user));\n\n        history.push({\n          pathname: \"/\"\n        });\n\n        return dispatch({\n          type: LOGIN_SUCCESS\n        });\n      })\n      .catch(error => {\n        return dispatch({\n          type: LOGIN_ERROR,\n          payload: error\n        });\n      });\n  };\n}\n\nexport function resetPassword({ email }) {\n  return dispatch => {\n    dispatch({\n      payload: email,\n      type: RESET_PASSWORD\n    });\n  };\n}\n\nexport function firebaseLoginEmailPassword({ email, password }) {\n  return dispatch => {\n    FirebaseAuthService.signInWithEmailAndPassword(email, password)\n      .then(user => {\n        if (user) {\n          dispatch(\n            setUserData({\n              userId: \"1\",\n              role: \"ADMIN\",\n              displayName: \"Watson Joyce\",\n              email: \"watsonjoyce@gmail.com\",\n              photoURL: \"/assets/images/face-7.jpg\",\n              age: 25,\n              token: \"faslkhfh423oiu4h4kj432rkj23h432u49ufjaklj423h4jkhkjh\",\n              ...user\n            })\n          );\n\n          history.push({\n            pathname: \"/\"\n          });\n\n          return dispatch({\n            type: LOGIN_SUCCESS\n          });\n        } else {\n          return dispatch({\n            type: LOGIN_ERROR,\n            payload: \"Login Failed\"\n          });\n        }\n      })\n      .catch(error => {\n        return dispatch({\n          type: LOGIN_ERROR,\n          payload: error\n        });\n      });\n  };\n}\n"]},"metadata":{},"sourceType":"module"}