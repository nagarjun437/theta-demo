{"ast":null,"code":"var _jsxFileName = \"/Users/arjun/Documents/Personal/Test/Theta/UI Theme/gull-admin/react/src/app/views/charts/react-vis/LabelledHeatMap.jsx\";\nimport React, { Component } from \"react\";\nimport { scaleLinear } from \"d3-scale\";\nimport { FlexibleWidthXYPlot, XAxis, YAxis, HeatmapSeries, LabelSeries, Hint } from \"react-vis\";\nconst alphabet = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\"];\nconst data = alphabet.reduce((acc, letter1, idx) => {\n  return acc.concat(alphabet.map((letter2, jdx) => ({\n    x: `${letter1}1`,\n    y: `${letter2}2`,\n    color: (idx + jdx) % Math.floor(jdx / idx) || idx\n  })));\n}, []);\nconst {\n  min,\n  max\n} = data.reduce((acc, row) => ({\n  min: Math.min(acc.min, row.color),\n  max: Math.max(acc.max, row.color)\n}), {\n  min: Infinity,\n  max: -Infinity\n});\n\nclass LabeledHeatmap extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      value: false\n    };\n  }\n\n  render() {\n    const {\n      value\n    } = this.state;\n    let {\n      theme\n    } = this.props;\n    const exampleColorScale = scaleLinear().domain([min, (min + max) / 2, max]).range([\"orange\", \"white\", \"cyan\"]);\n    return /*#__PURE__*/React.createElement(FlexibleWidthXYPlot, {\n      xType: \"ordinal\",\n      xDomain: alphabet.map(letter => `${letter}1`),\n      yType: \"ordinal\",\n      yDomain: alphabet.map(letter => `${letter}2`).reverse(),\n      margin: 50,\n      height: 500,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(XAxis, {\n      orientation: \"top\",\n      style: {\n        text: {\n          stroke: \"none\",\n          // fill: theme.palette.text.secondary,\n          fontWeight: 600\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(YAxis, {\n      style: {\n        text: {\n          stroke: \"none\",\n          // fill: theme.palette.text.secondary,\n          fontWeight: 600\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(HeatmapSeries, {\n      colorType: \"literal\",\n      getColor: d => exampleColorScale(d.color),\n      style: {\n        stroke: \"white\",\n        strokeWidth: \"2px\",\n        rectStyle: {\n          rx: 10,\n          ry: 10\n        }\n      },\n      className: \"heatmap-series-example\",\n      data: data,\n      onValueMouseOver: v => this.setState({\n        value: v\n      }),\n      onSeriesMouseOut: v => this.setState({\n        value: false\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(LabelSeries, {\n      style: {\n        pointerEvents: \"none\"\n      },\n      data: data,\n      labelAnchorX: \"middle\",\n      labelAnchorY: \"baseline\",\n      getLabel: d => `${d.color}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }), value !== false && /*#__PURE__*/React.createElement(Hint, {\n      value: value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 29\n      }\n    }));\n  }\n\n}\n\nexport default LabeledHeatmap;","map":{"version":3,"sources":["/Users/arjun/Documents/Personal/Test/Theta/UI Theme/gull-admin/react/src/app/views/charts/react-vis/LabelledHeatMap.jsx"],"names":["React","Component","scaleLinear","FlexibleWidthXYPlot","XAxis","YAxis","HeatmapSeries","LabelSeries","Hint","alphabet","data","reduce","acc","letter1","idx","concat","map","letter2","jdx","x","y","color","Math","floor","min","max","row","Infinity","LabeledHeatmap","state","value","render","theme","props","exampleColorScale","domain","range","letter","reverse","text","stroke","fontWeight","d","strokeWidth","rectStyle","rx","ry","v","setState","pointerEvents"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { scaleLinear } from \"d3-scale\";\n\nimport {\n  FlexibleWidthXYPlot,\n  XAxis,\n  YAxis,\n  HeatmapSeries,\n  LabelSeries,\n  Hint\n} from \"react-vis\";\n\nconst alphabet = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\"];\nconst data = alphabet.reduce((acc, letter1, idx) => {\n  return acc.concat(\n    alphabet.map((letter2, jdx) => ({\n      x: `${letter1}1`,\n      y: `${letter2}2`,\n      color: (idx + jdx) % Math.floor(jdx / idx) || idx\n    }))\n  );\n}, []);\nconst { min, max } = data.reduce(\n  (acc, row) => ({\n    min: Math.min(acc.min, row.color),\n    max: Math.max(acc.max, row.color)\n  }),\n  { min: Infinity, max: -Infinity }\n);\n\nclass LabeledHeatmap extends Component {\n  state = {\n    value: false\n  };\n\n  render() {\n    const { value } = this.state;\n    let { theme } = this.props;\n\n    const exampleColorScale = scaleLinear()\n      .domain([min, (min + max) / 2, max])\n      .range([\"orange\", \"white\", \"cyan\"]);\n\n    return (\n      <FlexibleWidthXYPlot\n        xType=\"ordinal\"\n        xDomain={alphabet.map(letter => `${letter}1`)}\n        yType=\"ordinal\"\n        yDomain={alphabet.map(letter => `${letter}2`).reverse()}\n        margin={50}\n        height={500}\n      >\n        <XAxis\n          orientation=\"top\"\n          style={{\n            text: {\n              stroke: \"none\",\n              // fill: theme.palette.text.secondary,\n              fontWeight: 600\n            }\n          }}\n        />\n        <YAxis\n          style={{\n            text: {\n              stroke: \"none\",\n              // fill: theme.palette.text.secondary,\n              fontWeight: 600\n            }\n          }}\n        />\n        <HeatmapSeries\n          colorType=\"literal\"\n          getColor={d => exampleColorScale(d.color)}\n          style={{\n            stroke: \"white\",\n            strokeWidth: \"2px\",\n            rectStyle: {\n              rx: 10,\n              ry: 10\n            }\n          }}\n          className=\"heatmap-series-example\"\n          data={data}\n          onValueMouseOver={v => this.setState({ value: v })}\n          onSeriesMouseOut={v => this.setState({ value: false })}\n        />\n        <LabelSeries\n          style={{ pointerEvents: \"none\" }}\n          data={data}\n          labelAnchorX=\"middle\"\n          labelAnchorY=\"baseline\"\n          getLabel={d => `${d.color}`}\n        />\n        {value !== false && <Hint value={value} />}\n      </FlexibleWidthXYPlot>\n    );\n  }\n}\n\nexport default LabeledHeatmap;\n"]},"metadata":{},"sourceType":"module"}