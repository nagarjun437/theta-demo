{"ast":null,"code":"var _jsxFileName = \"/Users/arjun/Documents/Personal/Test/Theta/UI Theme/theta-demo/src/@gull/components/buttons/LoadingButton.jsx\";\nimport React from \"react\";\nimport { Spinner, Button } from \"react-bootstrap\";\n\nconst LoadingButton = ({\n  variant = \"primary\",\n  loading = false,\n  animation,\n  spinnerSize,\n  buttonSize,\n  children,\n  className\n}) => {\n  return /*#__PURE__*/React.createElement(Button, {\n    variant: variant,\n    className: `d-flex flex-row align-items-center ${className}`,\n    size: buttonSize,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, loading && /*#__PURE__*/React.createElement(Spinner, {\n    className: \"mr-2\",\n    animation: animation,\n    size: spinnerSize,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }), children);\n};\n\nexport default LoadingButton;","map":{"version":3,"sources":["/Users/arjun/Documents/Personal/Test/Theta/UI Theme/theta-demo/src/@gull/components/buttons/LoadingButton.jsx"],"names":["React","Spinner","Button","LoadingButton","variant","loading","animation","spinnerSize","buttonSize","children","className"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,MAAlB,QAAgC,iBAAhC;;AAEA,MAAMC,aAAa,GAAG,CAAC;AACrBC,EAAAA,OAAO,GAAG,SADW;AAErBC,EAAAA,OAAO,GAAG,KAFW;AAGrBC,EAAAA,SAHqB;AAIrBC,EAAAA,WAJqB;AAKrBC,EAAAA,UALqB;AAMrBC,EAAAA,QANqB;AAOrBC,EAAAA;AAPqB,CAAD,KAQhB;AACJ,sBACE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAEN,OADX;AAEE,IAAA,SAAS,EAAG,sCAAqCM,SAAU,EAF7D;AAGE,IAAA,IAAI,EAAEF,UAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGH,OAAO,iBACN,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAC,MAAnB;AAA0B,IAAA,SAAS,EAAEC,SAArC;AAAgD,IAAA,IAAI,EAAEC,WAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,EAQGE,QARH,CADF;AAYD,CArBD;;AAuBA,eAAeN,aAAf","sourcesContent":["import React from \"react\";\nimport { Spinner, Button } from \"react-bootstrap\";\n\nconst LoadingButton = ({\n  variant = \"primary\",\n  loading = false,\n  animation,\n  spinnerSize,\n  buttonSize,\n  children,\n  className\n}) => {\n  return (\n    <Button\n      variant={variant}\n      className={`d-flex flex-row align-items-center ${className}`}\n      size={buttonSize}\n    >\n      {loading && (\n        <Spinner className=\"mr-2\" animation={animation} size={spinnerSize} />\n      )}\n      {children}\n    </Button>\n  );\n};\n\nexport default LoadingButton;\n"]},"metadata":{},"sourceType":"module"}