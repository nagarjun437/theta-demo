{"ast":null,"code":"var _jsxFileName = \"/Users/arjun/Documents/Personal/Test/Theta/UI Theme/gull-admin/react/src/@gull/components/CodeViewer.jsx\";\nimport React, { Component } from \"react\";\nimport Highlight from \"react-highlight.js\";\nimport ClipboardJS from 'clipboard';\nimport { initCodeViewer } from \"@utils\";\n\nclass CodeViewer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.elem = React.createRef();\n  }\n\n  componentDidMount() {\n    const pre = this.elem.current.refs.code.parentElement; // add/remove class to pre tag\n\n    pre.classList.add('collapsed');\n    pre.addEventListener('click', e => {\n      e.target.classList.remove('collapsed');\n    }); // Add copy button\n\n    var copyButton = document.createElement(\"BUTTON\");\n    var copyButtonText = document.createTextNode(\"Copy\");\n    copyButton.appendChild(copyButtonText);\n    copyButton.classList.add('btn', 'btn-sm', 'btn-primary', 'btn-copy');\n    pre.appendChild(copyButton); // Clipboard\n\n    new ClipboardJS(copyButton, {\n      text: trigger => {\n        return this.elem.current.props.children;\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"code-viewer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(Highlight, Object.assign({\n      ref: this.elem\n    }, this.props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }\n    }), this.props.children));\n  }\n\n}\n\nexport default CodeViewer;","map":{"version":3,"sources":["/Users/arjun/Documents/Personal/Test/Theta/UI Theme/gull-admin/react/src/@gull/components/CodeViewer.jsx"],"names":["React","Component","Highlight","ClipboardJS","initCodeViewer","CodeViewer","constructor","props","state","elem","createRef","componentDidMount","pre","current","refs","code","parentElement","classList","add","addEventListener","e","target","remove","copyButton","document","createElement","copyButtonText","createTextNode","appendChild","text","trigger","children","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,WAAP,MAAwB,WAAxB;AACA,SAASC,cAAT,QAA+B,QAA/B;;AAEA,MAAMC,UAAN,SAAyBJ,SAAzB,CAAmC;AACjCK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AADiB,SAInBC,KAJmB,GAIX,EAJW;AAEjB,SAAKC,IAAL,GAAYT,KAAK,CAACU,SAAN,EAAZ;AACD;;AAGDC,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,GAAG,GAAG,KAAKH,IAAL,CAAUI,OAAV,CAAkBC,IAAlB,CAAuBC,IAAvB,CAA4BC,aAAxC,CADkB,CAGlB;;AACAJ,IAAAA,GAAG,CAACK,SAAJ,CAAcC,GAAd,CAAkB,WAAlB;AACAN,IAAAA,GAAG,CAACO,gBAAJ,CAAqB,OAArB,EAA+BC,CAAD,IAAO;AACnCA,MAAAA,CAAC,CAACC,MAAF,CAASJ,SAAT,CAAmBK,MAAnB,CAA0B,WAA1B;AACD,KAFD,EALkB,CASlB;;AACA,QAAIC,UAAU,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAjB;AACA,QAAIC,cAAc,GAAGF,QAAQ,CAACG,cAAT,CAAwB,MAAxB,CAArB;AACAJ,IAAAA,UAAU,CAACK,WAAX,CAAuBF,cAAvB;AACAH,IAAAA,UAAU,CAACN,SAAX,CAAqBC,GAArB,CAAyB,KAAzB,EAAgC,QAAhC,EAA0C,aAA1C,EAAyD,UAAzD;AACAN,IAAAA,GAAG,CAACgB,WAAJ,CAAgBL,UAAhB,EAdkB,CAgBlB;;AACA,QAAIpB,WAAJ,CAAgBoB,UAAhB,EAA4B;AAC1BM,MAAAA,IAAI,EAAGC,OAAD,IAAa;AACjB,eAAO,KAAKrB,IAAL,CAAUI,OAAV,CAAkBN,KAAlB,CAAwBwB,QAA/B;AACD;AAHyB,KAA5B;AAMD;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBAAO;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACL,oBAAC,SAAD;AAAW,MAAA,GAAG,EAAE,KAAKvB;AAArB,OAA+B,KAAKF,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA4C,KAAKA,KAAL,CAAWwB,QAAvD,CADK,CAAP;AAGD;;AApCgC;;AAuCnC,eAAe1B,UAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Highlight from \"react-highlight.js\";\nimport ClipboardJS from 'clipboard';\nimport { initCodeViewer } from \"@utils\";\n\nclass CodeViewer extends Component {\n  constructor(props) {\n    super(props);\n    this.elem = React.createRef();\n  }\n  state = {};\n\n  componentDidMount() {\n    const pre = this.elem.current.refs.code.parentElement;\n\n    // add/remove class to pre tag\n    pre.classList.add('collapsed');    \n    pre.addEventListener('click', (e) => {\n      e.target.classList.remove('collapsed');\n    });\n\n    // Add copy button\n    var copyButton = document.createElement(\"BUTTON\");              \n    var copyButtonText = document.createTextNode(\"Copy\");\n    copyButton.appendChild(copyButtonText);\n    copyButton.classList.add('btn', 'btn-sm', 'btn-primary', 'btn-copy')\n    pre.appendChild(copyButton);\n\n    // Clipboard\n    new ClipboardJS(copyButton, {\n      text: (trigger) => {\n        return this.elem.current.props.children;\n      }\n    });\n    \n  }\n\n  render() {\n    return <div className=\"code-viewer\">\n      <Highlight ref={this.elem} {...this.props}>{this.props.children}</Highlight>\n    </div>;\n  }\n}\n\nexport default CodeViewer;\n"]},"metadata":{},"sourceType":"module"}