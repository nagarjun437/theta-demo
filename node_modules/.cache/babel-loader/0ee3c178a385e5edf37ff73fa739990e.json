{"ast":null,"code":"var _jsxFileName = \"/Users/arjun/Documents/Personal/Test/Theta/UI Theme/theta-demo/src/app/views/app/task-manager/todo/TodoEditor.jsx\";\nimport React, { Component } from \"react\";\nimport { Card, Button, Dropdown, FormControl, FormGroup, FormLabel } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { getTodoById, getAllTodoTag, updateTodoById, deleteTodo, addTodo } from \"./todoService\";\nimport DatePicker from \"react-datepicker\";\nimport { Formik } from \"formik\";\nimport * as yup from \"yup\";\nimport { MdArrowBack, MdDrafts, MdMarkunread, MdError, MdErrorOutline, MdStar, MdStarBorder, MdLibraryAdd, MdLabel, MdDelete, MdClose } from \"react-icons/md\";\nimport { GullTooltip } from \"@gull\";\nimport TagDialog from \"./TagDialog\";\n\nclass TodoEditor extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      todo: {\n        title: \"\",\n        note: \"\",\n        done: false,\n        read: false,\n        starred: false,\n        important: false,\n        startDate: new Date(),\n        dueDate: new Date(),\n        tag: []\n      },\n      tagList: [],\n      shouldOpenTagDialog: false\n    };\n\n    this.addNewTodo = values => {\n      addTodo({ ...values\n      }).then(() => {\n        this.props.history.push(\"/todo/list\");\n      });\n    };\n\n    this.updateTodo = todo => {\n      updateTodoById(todo);\n      this.setState({\n        todo: { ...this.state.todo,\n          ...todo\n        }\n      });\n    };\n\n    this.reloadTagList = () => {\n      getAllTodoTag().then(({\n        data\n      }) => {\n        this.setState({\n          tagList: [...data]\n        });\n      });\n    };\n\n    this.addTagInTodo = id => {\n      let {\n        tag\n      } = this.state.todo;\n\n      if (!tag.includes(id)) {\n        tag.push(id);\n        this.setState({\n          todo: { ...this.state.todo,\n            tag\n          }\n        });\n      }\n    };\n\n    this.handleTagDelete = tagId => {\n      let {\n        tag: tagList = []\n      } = this.state.todo;\n      tagList = tagList.filter(id => id !== tagId);\n      this.setState({\n        todo: { ...this.state.todo,\n          tag: [...tagList]\n        }\n      }, () => updateTodoById({ ...this.state.todo\n      }));\n    };\n\n    this.handleTodoDelete = () => {\n      deleteTodo({ ...this.state.todo\n      }).then(() => {\n        this.props.history.push(\"/todo/list\");\n      });\n    };\n\n    this.handleSubmit = values => {\n      let {\n        id: todoId\n      } = this.props.match.params;\n\n      if (todoId === \"add\") {\n        this.addNewTodo(values);\n      } else {\n        updateTodoById({ ...this.state.todo,\n          ...values\n        }).then(() => {\n          this.props.history.push(\"/todo/list\");\n        });\n      }\n    };\n\n    this.handleTagDialogToggle = () => {\n      this.setState({\n        shouldOpenTagDialog: !this.state.shouldOpenTagDialog\n      });\n    };\n  }\n\n  componentDidMount() {\n    let {\n      id: todoId\n    } = this.props.match.params;\n    getAllTodoTag().then(({\n      data: tagList\n    }) => {\n      if (todoId !== \"add\") {\n        getTodoById(todoId).then(({\n          data\n        }) => {\n          if (!data) {\n            this.props.history.push(\"/todo/list\");\n            return;\n          }\n\n          this.setState({\n            todo: { ...data\n            },\n            tagList: [...tagList]\n          });\n        });\n      } else {\n        this.setState({\n          tagList\n        });\n      }\n    });\n  }\n\n  render() {\n    let {\n      done,\n      read,\n      starred,\n      important,\n      tag: tagIdList = []\n    } = this.state.todo;\n    let {\n      tagList\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Card, {\n      className: \"todo-editor position-relative m-sm-30\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"editor__topbar bg-light-gray p-2 d-flex flex-wrap card-header justify-content-between align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex flex-wrap align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/todo/list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p-2 rounded-circle btn-hover\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(MdArrowBack, {\n      size: 24,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ml-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"checkbox checkbox-primary mb-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      name: \"agree\",\n      checked: done,\n      onChange: () => this.updateTodo({ ...this.state,\n        done: !done\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }\n    }, `Mark As ${done ? \"Und\" : \"D\"}one`), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"checkmark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex flex-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(GullTooltip, {\n      title: `Mark As ${read ? \"Unr\" : \"R\"}ead`,\n      fontSize: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p-2 rounded-circle btn-hover cursor-pointer mr-2\",\n      onClick: () => this.updateTodo({ ...this.state,\n        read: !read\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 15\n      }\n    }, read ? /*#__PURE__*/React.createElement(MdDrafts, {\n      size: 24,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 19\n      }\n    }) : /*#__PURE__*/React.createElement(MdMarkunread, {\n      size: 24,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(GullTooltip, {\n      title: `Mark As ${important ? \"Uni\" : \"I\"}mportant`,\n      fontSize: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p-2 rounded-circle btn-hover  cursor-pointer mr-2\",\n      onClick: () => this.updateTodo({ ...this.state,\n        important: !important\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 15\n      }\n    }, important ? /*#__PURE__*/React.createElement(MdError, {\n      className: \"text-danger\",\n      size: 24,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 19\n      }\n    }) : /*#__PURE__*/React.createElement(MdErrorOutline, {\n      size: 24,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(GullTooltip, {\n      title: `Mark As ${starred ? \"Uns\" : \"S\"}tarred`,\n      fontSize: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p-2 rounded-circle btn-hover  cursor-pointer mr-2\",\n      onClick: () => this.updateTodo({ ...this.state,\n        starred: !starred\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 15\n      }\n    }, starred ? /*#__PURE__*/React.createElement(MdStar, {\n      className: \"text-warning\",\n      size: 24,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 19\n      }\n    }) : /*#__PURE__*/React.createElement(MdStarBorder, {\n      size: 24,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(GullTooltip, {\n      title: \"Manage tags\",\n      fontSize: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p-2 rounded-circle btn-hover  cursor-pointer mr-2\",\n      onClick: this.handleTagDialogToggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(MdLibraryAdd, {\n      size: 24,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(Dropdown, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Dropdown.Toggle, {\n      as: \"span\",\n      className: \"cursor-pointer toggle-hidden\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(GullTooltip, {\n      title: \"Add tags\",\n      fontSize: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p-2 rounded-circle btn-hover\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(MdLabel, {\n      size: 24,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 21\n      }\n    })))), /*#__PURE__*/React.createElement(Dropdown.Menu, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 15\n      }\n    }, this.state.tagList.map(tag => /*#__PURE__*/React.createElement(Dropdown.Item, {\n      className: \"text-capitalize\",\n      key: tag.id,\n      onClick: () => this.addTagInTodo(tag.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 19\n      }\n    }, tag.name)))), /*#__PURE__*/React.createElement(GullTooltip, {\n      title: \"Delete\",\n      fontSize: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p-2 rounded-circle btn-hover  cursor-pointer mr-2\",\n      onClick: this.handleTodoDelete,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(MdDelete, {\n      size: 24,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 17\n      }\n    }))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"editor__form p-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"my-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 11\n      }\n    }, tagIdList.map(tagId => {\n      let tagName = (tagList.find(tag => tag.id === tagId) || {}).name;\n      if (!tagName) return null;else return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"badge badge-pill bg-gray-400 text-capitalize mr-2 pl-2\",\n        key: tagId,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \" d-flex align-items-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"text-12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 23\n        }\n      }, tagName), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"p-1 rounded-circle btn-hover\",\n        onClick: () => this.handleTagDelete(tagId),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(MdClose, {\n        size: \"18\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 25\n        }\n      }))));\n    })), /*#__PURE__*/React.createElement(Formik, {\n      initialValues: this.state.todo,\n      validationSchema: todoSchema,\n      enableReinitialize: true,\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 11\n      }\n    }, ({\n      values,\n      errors,\n      touched,\n      handleChange,\n      handleBlur,\n      handleSubmit,\n      isSubmitting,\n      setFieldValue\n    }) => /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 19\n      }\n    }, \"Title\"), /*#__PURE__*/React.createElement(FormControl, {\n      className: \"mb-3 w-100\",\n      label: \"Title*\",\n      onChange: handleChange,\n      onBlur: handleBlur,\n      type: \"text\",\n      name: \"title\",\n      value: values.title,\n      isInvalid: errors.title && touched.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 19\n      }\n    }, \"Put your notes\"), /*#__PURE__*/React.createElement(FormControl, {\n      as: \"textarea\",\n      className: \"mb-3 w-100\",\n      onChange: handleChange,\n      onBlur: handleBlur,\n      type: \"text\",\n      name: \"note\",\n      value: values.note,\n      isInvalid: errors.note && touched.note,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"col-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      className: \"mr-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 21\n      }\n    }, \"Start date\"), /*#__PURE__*/React.createElement(DatePicker, {\n      className: \"form-control\",\n      dateFormat: \"dd/MM/yyyy\",\n      placeholderText: \"Start date\",\n      selected: new Date(values.startDate),\n      onChange: date => {\n        setFieldValue(\"startDate\", date);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"col-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      className: \"mr-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 21\n      }\n    }, \"Due date\"), /*#__PURE__*/React.createElement(DatePicker, {\n      className: \"form-control\",\n      dateFormat: \"dd/MM/yyyy\",\n      placeholderText: \"Start date\",\n      selected: new Date(values.dueDate),\n      onChange: date => {\n        setFieldValue(\"dueDate\", date);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(Link, {\n      to: \"/todo/list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"mr-3\",\n      variant: \"outline-danger\",\n      type: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 19\n      }\n    }, \"Cancel\")), /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 17\n      }\n    }, \"Save\")))), /*#__PURE__*/React.createElement(TagDialog, {\n      reloadTagList: this.reloadTagList,\n      open: this.state.shouldOpenTagDialog,\n      handleClose: this.handleTagDialogToggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst todoSchema = yup.object().shape({\n  title: yup.string().required(\"title is required\"),\n  note: yup.string().required(\"note is required\")\n});\nexport default TodoEditor;","map":{"version":3,"sources":["/Users/arjun/Documents/Personal/Test/Theta/UI Theme/theta-demo/src/app/views/app/task-manager/todo/TodoEditor.jsx"],"names":["React","Component","Card","Button","Dropdown","FormControl","FormGroup","FormLabel","Link","getTodoById","getAllTodoTag","updateTodoById","deleteTodo","addTodo","DatePicker","Formik","yup","MdArrowBack","MdDrafts","MdMarkunread","MdError","MdErrorOutline","MdStar","MdStarBorder","MdLibraryAdd","MdLabel","MdDelete","MdClose","GullTooltip","TagDialog","TodoEditor","state","todo","title","note","done","read","starred","important","startDate","Date","dueDate","tag","tagList","shouldOpenTagDialog","addNewTodo","values","then","props","history","push","updateTodo","setState","reloadTagList","data","addTagInTodo","id","includes","handleTagDelete","tagId","filter","handleTodoDelete","handleSubmit","todoId","match","params","handleTagDialogToggle","componentDidMount","render","tagIdList","map","name","tagName","find","todoSchema","errors","touched","handleChange","handleBlur","isSubmitting","setFieldValue","date","object","shape","string","required"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Card,\n  Button,\n  Dropdown,\n  FormControl,\n  FormGroup,\n  FormLabel\n} from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport {\n  getTodoById,\n  getAllTodoTag,\n  updateTodoById,\n  deleteTodo,\n  addTodo\n} from \"./todoService\";\nimport DatePicker from \"react-datepicker\";\nimport { Formik } from \"formik\";\nimport * as yup from \"yup\";\nimport {\n  MdArrowBack,\n  MdDrafts,\n  MdMarkunread,\n  MdError,\n  MdErrorOutline,\n  MdStar,\n  MdStarBorder,\n  MdLibraryAdd,\n  MdLabel,\n  MdDelete,\n  MdClose\n} from \"react-icons/md\";\nimport { GullTooltip } from \"@gull\";\nimport TagDialog from \"./TagDialog\";\n\nclass TodoEditor extends Component {\n  state = {\n    todo: {\n      title: \"\",\n      note: \"\",\n      done: false,\n      read: false,\n      starred: false,\n      important: false,\n      startDate: new Date(),\n      dueDate: new Date(),\n      tag: []\n    },\n    tagList: [],\n    shouldOpenTagDialog: false\n  };\n\n  componentDidMount() {\n    let { id: todoId } = this.props.match.params;\n\n    getAllTodoTag().then(({ data: tagList }) => {\n      if (todoId !== \"add\") {\n        getTodoById(todoId).then(({ data }) => {\n          if (!data) {\n            this.props.history.push(\"/todo/list\");\n            return;\n          }\n          this.setState({\n            todo: { ...data },\n            tagList: [...tagList]\n          });\n        });\n      } else {\n        this.setState({\n          tagList\n        });\n      }\n    });\n  }\n\n  addNewTodo = values => {\n    addTodo({ ...values }).then(() => {\n      this.props.history.push(\"/todo/list\");\n    });\n  };\n\n  updateTodo = todo => {\n    updateTodoById(todo);\n    this.setState({\n      todo: {\n        ...this.state.todo,\n        ...todo\n      }\n    });\n  };\n\n  reloadTagList = () => {\n    getAllTodoTag().then(({ data }) => {\n      this.setState({\n        tagList: [...data]\n      });\n    });\n  };\n\n  addTagInTodo = id => {\n    let { tag } = this.state.todo;\n    if (!tag.includes(id)) {\n      tag.push(id);\n      this.setState({\n        todo: {\n          ...this.state.todo,\n          tag\n        }\n      });\n    }\n  };\n\n  handleTagDelete = tagId => {\n    let { tag: tagList = [] } = this.state.todo;\n    tagList = tagList.filter(id => id !== tagId);\n    this.setState(\n      {\n        todo: {\n          ...this.state.todo,\n          tag: [...tagList]\n        }\n      },\n      () => updateTodoById({ ...this.state.todo })\n    );\n  };\n\n  handleTodoDelete = () => {\n    deleteTodo({ ...this.state.todo }).then(() => {\n      this.props.history.push(\"/todo/list\");\n    });\n  };\n\n  handleSubmit = values => {\n    let { id: todoId } = this.props.match.params;\n    if (todoId === \"add\") {\n      this.addNewTodo(values);\n    } else {\n      updateTodoById({ ...this.state.todo, ...values }).then(() => {\n        this.props.history.push(\"/todo/list\");\n      });\n    }\n  };\n\n  handleTagDialogToggle = () => {\n    this.setState({\n      shouldOpenTagDialog: !this.state.shouldOpenTagDialog\n    });\n  };\n\n  render() {\n    let {\n      done,\n      read,\n      starred,\n      important,\n      tag: tagIdList = []\n    } = this.state.todo;\n    let { tagList } = this.state;\n\n    return (\n      <Card className=\"todo-editor position-relative m-sm-30\">\n        <div className=\"editor__topbar bg-light-gray p-2 d-flex flex-wrap card-header justify-content-between align-items-center\">\n          <div className=\"d-flex flex-wrap align-items-center\">\n            <Link to=\"/todo/list\">\n              <div className=\"p-2 rounded-circle btn-hover\">\n                <MdArrowBack size={24}></MdArrowBack>\n              </div>\n            </Link>\n            <div className=\"ml-4\">\n              <label className=\"checkbox checkbox-primary mb-0\">\n                <input\n                  type=\"checkbox\"\n                  name=\"agree\"\n                  checked={done}\n                  onChange={() =>\n                    this.updateTodo({ ...this.state, done: !done })\n                  }\n                />\n                <span>{`Mark As ${done ? \"Und\" : \"D\"}one`}</span>\n                <span className=\"checkmark\"></span>\n              </label>\n            </div>\n          </div>\n          <div className=\"d-flex flex-wrap\">\n            <GullTooltip\n              title={`Mark As ${read ? \"Unr\" : \"R\"}ead`}\n              fontSize=\"large\"\n            >\n              <div\n                className=\"p-2 rounded-circle btn-hover cursor-pointer mr-2\"\n                onClick={() => this.updateTodo({ ...this.state, read: !read })}\n              >\n                {read ? (\n                  <MdDrafts size={24}></MdDrafts>\n                ) : (\n                  <MdMarkunread size={24}></MdMarkunread>\n                )}\n              </div>\n            </GullTooltip>\n\n            <GullTooltip\n              title={`Mark As ${important ? \"Uni\" : \"I\"}mportant`}\n              fontSize=\"large\"\n            >\n              <div\n                className=\"p-2 rounded-circle btn-hover  cursor-pointer mr-2\"\n                onClick={() =>\n                  this.updateTodo({ ...this.state, important: !important })\n                }\n              >\n                {important ? (\n                  <MdError className=\"text-danger\" size={24}></MdError>\n                ) : (\n                  <MdErrorOutline size={24}></MdErrorOutline>\n                )}\n              </div>\n            </GullTooltip>\n\n            <GullTooltip\n              title={`Mark As ${starred ? \"Uns\" : \"S\"}tarred`}\n              fontSize=\"large\"\n            >\n              <div\n                className=\"p-2 rounded-circle btn-hover  cursor-pointer mr-2\"\n                onClick={() =>\n                  this.updateTodo({ ...this.state, starred: !starred })\n                }\n              >\n                {starred ? (\n                  <MdStar className=\"text-warning\" size={24}></MdStar>\n                ) : (\n                  <MdStarBorder size={24}></MdStarBorder>\n                )}\n              </div>\n            </GullTooltip>\n\n            <GullTooltip title=\"Manage tags\" fontSize=\"large\">\n              <div\n                className=\"p-2 rounded-circle btn-hover  cursor-pointer mr-2\"\n                onClick={this.handleTagDialogToggle}\n              >\n                <MdLibraryAdd size={24}></MdLibraryAdd>\n              </div>\n            </GullTooltip>\n\n            <Dropdown>\n              <Dropdown.Toggle\n                as=\"span\"\n                className=\"cursor-pointer toggle-hidden\"\n              >\n                <GullTooltip title=\"Add tags\" fontSize=\"large\">\n                  <div className=\"p-2 rounded-circle btn-hover\">\n                    <MdLabel size={24}></MdLabel>\n                  </div>\n                </GullTooltip>\n              </Dropdown.Toggle>\n              <Dropdown.Menu>\n                {this.state.tagList.map(tag => (\n                  <Dropdown.Item\n                    className=\"text-capitalize\"\n                    key={tag.id}\n                    onClick={() => this.addTagInTodo(tag.id)}\n                  >\n                    {tag.name}\n                  </Dropdown.Item>\n                ))}\n              </Dropdown.Menu>\n            </Dropdown>\n\n            <GullTooltip title=\"Delete\" fontSize=\"large\">\n              <div\n                className=\"p-2 rounded-circle btn-hover  cursor-pointer mr-2\"\n                onClick={this.handleTodoDelete}\n              >\n                <MdDelete size={24}></MdDelete>\n              </div>\n            </GullTooltip>\n          </div>\n        </div>\n\n        <div className=\"editor__form p-3\">\n          <div className=\"my-3\">\n            {tagIdList.map(tagId => {\n              let tagName = (tagList.find(tag => tag.id === tagId) || {}).name;\n              if (!tagName) return null;\n              else\n                return (\n                  <div\n                    className=\"badge badge-pill bg-gray-400 text-capitalize mr-2 pl-2\"\n                    key={tagId}\n                  >\n                    <div className=\" d-flex align-items-center\">\n                      <span className=\"text-12\">{tagName}</span>\n                      <span\n                        className=\"p-1 rounded-circle btn-hover\"\n                        onClick={() => this.handleTagDelete(tagId)}\n                      >\n                        <MdClose size=\"18\"></MdClose>\n                      </span>\n                    </div>\n                  </div>\n                );\n            })}\n          </div>\n\n          <Formik\n            initialValues={this.state.todo}\n            validationSchema={todoSchema}\n            enableReinitialize={true}\n            onSubmit={this.handleSubmit}\n          >\n            {({\n              values,\n              errors,\n              touched,\n              handleChange,\n              handleBlur,\n              handleSubmit,\n              isSubmitting,\n              setFieldValue\n            }) => (\n              <form onSubmit={handleSubmit}>\n                <FormGroup>\n                  <FormLabel>Title</FormLabel>\n                  <FormControl\n                    className=\"mb-3 w-100\"\n                    label=\"Title*\"\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    type=\"text\"\n                    name=\"title\"\n                    value={values.title}\n                    isInvalid={errors.title && touched.title}\n                  />\n                </FormGroup>\n\n                <FormGroup>\n                  <FormLabel>Put your notes</FormLabel>\n                  <FormControl\n                    as=\"textarea\"\n                    className=\"mb-3 w-100\"\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    type=\"text\"\n                    name=\"note\"\n                    value={values.note}\n                    isInvalid={errors.note && touched.note}\n                  />\n                </FormGroup>\n\n                <div className=\"row mb-3\">\n                  <FormGroup className=\"col-4\">\n                    <FormLabel className=\"mr-2\">Start date</FormLabel>\n                    <DatePicker\n                      className=\"form-control\"\n                      dateFormat=\"dd/MM/yyyy\"\n                      placeholderText=\"Start date\"\n                      selected={new Date(values.startDate)}\n                      onChange={date => {\n                        setFieldValue(\"startDate\", date);\n                      }}\n                    />\n                  </FormGroup>\n                  <FormGroup className=\"col-4\">\n                    <FormLabel className=\"mr-2\">Due date</FormLabel>\n                    <DatePicker\n                      className=\"form-control\"\n                      dateFormat=\"dd/MM/yyyy\"\n                      placeholderText=\"Start date\"\n                      selected={new Date(values.dueDate)}\n                      onChange={date => {\n                        setFieldValue(\"dueDate\", date);\n                      }}\n                    />\n                  </FormGroup>\n                </div>\n                <Link to=\"/todo/list\">\n                  <Button\n                    className=\"mr-3\"\n                    variant=\"outline-danger\"\n                    type=\"button\"\n                  >\n                    Cancel\n                  </Button>\n                </Link>\n                <Button variant=\"primary\" type=\"submit\">\n                  Save\n                </Button>\n              </form>\n            )}\n          </Formik>\n        </div>\n        <TagDialog\n          reloadTagList={this.reloadTagList}\n          open={this.state.shouldOpenTagDialog}\n          handleClose={this.handleTagDialogToggle}\n        />\n      </Card>\n    );\n  }\n}\n\nconst todoSchema = yup.object().shape({\n  title: yup.string().required(\"title is required\"),\n  note: yup.string().required(\"note is required\")\n});\n\nexport default TodoEditor;\n"]},"metadata":{},"sourceType":"module"}