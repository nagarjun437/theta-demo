{"ast":null,"code":"import _classCallCheck from\"/Users/arjun/Documents/Personal/Test/Theta/UI Theme/gull-admin/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/arjun/Documents/Personal/Test/Theta/UI Theme/gull-admin/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/arjun/Documents/Personal/Test/Theta/UI Theme/gull-admin/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/arjun/Documents/Personal/Test/Theta/UI Theme/gull-admin/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from\"react\";import{Breadcrumb}from\"@gull\";import OutlinedBadge from\"@gull/components/badges/OutlinedBadge\";import SimpleCard from\"@gull/components/cards/SimpleCard\";import{Badge,Row,Col}from\"react-bootstrap\";import{Link}from\"react-router-dom\";var AppBadge=/*#__PURE__*/function(_Component){_inherits(AppBadge,_Component);var _super=_createSuper(AppBadge);function AppBadge(){var _this;_classCallCheck(this,AppBadge);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.variantList=[\"primary\",\"secondary\",\"success\",\"danger\",\"warning\",\"info\",\"light\",\"dark\"];_this.state={};return _this;}_createClass(AppBadge,[{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Breadcrumb,{routeSegments:[{name:\"UI Kits\",path:\"/uikits\"},{name:\"Badges\"}]}),/*#__PURE__*/React.createElement(\"div\",{className:\"mb-3\"},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{lg:6,md:6,sm:6,xs:12},/*#__PURE__*/React.createElement(SimpleCard,{title:\"Badge outline\"},this.variantList.map(function(color){return/*#__PURE__*/React.createElement(Badge,{key:color,pill:true,className:\"badge-outline-\".concat(color,\" p-2 m-1\")},color);}))),/*#__PURE__*/React.createElement(Col,{lg:6,md:6,sm:6,xs:12},/*#__PURE__*/React.createElement(SimpleCard,{title:\"Regular Badges\"},this.variantList.map(function(color){return/*#__PURE__*/React.createElement(Badge,{key:color,variant:color,className:\"m-1\"},color);}))))),/*#__PURE__*/React.createElement(\"div\",{className:\"mb-3\"},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{lg:6,md:6,sm:6,xs:12},/*#__PURE__*/React.createElement(SimpleCard,{title:\"Badge Pill\"},this.variantList.map(function(color){return/*#__PURE__*/React.createElement(Badge,{key:color,pill:true,variant:color,className:\"m-1\"},color);}))),/*#__PURE__*/React.createElement(Col,{lg:6,md:6,sm:6,xs:12},/*#__PURE__*/React.createElement(SimpleCard,{title:\"Badge Pill with Padding\"},this.variantList.map(function(color){return/*#__PURE__*/React.createElement(Badge,{key:color,pill:true,variant:color,className:\"p-2 m-1\"},color);}))))),/*#__PURE__*/React.createElement(\"div\",{className:\"mb-3\"},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{lg:6,md:6,sm:6,xs:12},/*#__PURE__*/React.createElement(SimpleCard,{title:\"Badge link\"},this.variantList.map(function(color,ind){return/*#__PURE__*/React.createElement(Link,{to:\"/uikits/badges\",key:ind},/*#__PURE__*/React.createElement(Badge,{pill:true,variant:color,className:\"m-1\"},color));}))))),/*#__PURE__*/React.createElement(\"div\",{className:\"mb-3\"},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{lg:6,md:6,sm:6,xs:12},/*#__PURE__*/React.createElement(SimpleCard,{className:\"mb-3\",title:\"Badge liSizing & Styles\"},/*#__PURE__*/React.createElement(\"ul\",{className:\"list-group list-group-flush\"},/*#__PURE__*/React.createElement(\"h6\",{className:\"card-subtitle mt-2 mb-2 text-muted\"},\"Medium Size\"),/*#__PURE__*/React.createElement(\"li\",{className:\"list-group-item border-0\"},this.variantList.map(function(color,i){return/*#__PURE__*/React.createElement(Badge,{key:i,className:\"badge-round-\".concat(color,\"  m-1\")},String.fromCharCode(65+i));})),/*#__PURE__*/React.createElement(\"li\",{className:\"list-group-item border-0\"},this.variantList.map(function(color,i){return/*#__PURE__*/React.createElement(Badge,{key:i,className:\"badge-square-\".concat(color,\"  m-1\")},String.fromCharCode(65+i));})),/*#__PURE__*/React.createElement(\"h6\",{className:\"card-subtitle mt-2 mb-2 text-muted\"},\"Large Size\"),/*#__PURE__*/React.createElement(\"li\",{className:\"list-group-item border-0\"},this.variantList.map(function(color,i){return/*#__PURE__*/React.createElement(Badge,{key:i,className:\"badge-round-\".concat(color,\" lg  m-1\")},String.fromCharCode(65+i));})),/*#__PURE__*/React.createElement(\"li\",{className:\"list-group-item border-0\"},this.variantList.map(function(color,i){return/*#__PURE__*/React.createElement(Badge,{key:i,className:\"badge-square-\".concat(color,\" lg m-1\")},String.fromCharCode(65+i));})),/*#__PURE__*/React.createElement(\"h6\",{className:\"card-subtitle mt-2 mb-2 text-muted\"},\"Extra Large Size\"),/*#__PURE__*/React.createElement(\"li\",{className:\"list-group-item border-0\"},this.variantList.map(function(color,i){return/*#__PURE__*/React.createElement(Badge,{key:i,className:\"badge-round-\".concat(color,\" xl  m-1\")},String.fromCharCode(65+i));})),/*#__PURE__*/React.createElement(\"li\",{className:\"list-group-item border-0\"},this.variantList.map(function(color,i){return/*#__PURE__*/React.createElement(Badge,{key:i,className:\"badge-square-\".concat(color,\" xl  m-1\")},String.fromCharCode(65+i));})))),/*#__PURE__*/React.createElement(SimpleCard,{title:\"More Styles & Options\"},/*#__PURE__*/React.createElement(\"ul\",{className:\"list-group list-group-flash\"},/*#__PURE__*/React.createElement(\"h6\",{className:\"card-subtitle mt-2 mb-2 text-muted\"},\"Wide badges for longer text:\"),/*#__PURE__*/React.createElement(\"li\",{className:\"list-group-item border-0\"},this.variantList.map(function(color,i){return/*#__PURE__*/React.createElement(Badge,{key:i,variant:color,className:\"w-badge m-1\"},color);})),/*#__PURE__*/React.createElement(\"h6\",{className:\"card-subtitle mt-2 mb-2 text-muted\"},\"Rounded badges examples:\"),/*#__PURE__*/React.createElement(\"li\",{className:\"list-group-item border-0\"},this.variantList.map(function(color,i){return/*#__PURE__*/React.createElement(Badge,{key:i,variant:color,className:\"r-badge m-1\"},color);}))))),/*#__PURE__*/React.createElement(Col,{lg:6,md:6,sm:6,xs:12},/*#__PURE__*/React.createElement(SimpleCard,{title:\"Unified Styles\",className:\"mb-3\"},/*#__PURE__*/React.createElement(\"ul\",{className:\"list-group list-group-flash\"},/*#__PURE__*/React.createElement(\"h6\",{className:\"card-subtitle mt-2 mb-2 text-muted\"},\"Circle and Square Unified Styles\"),/*#__PURE__*/React.createElement(\"li\",{className:\"list-group-item border-0\"},this.variantList.map(function(color,i){return/*#__PURE__*/React.createElement(Badge,{key:i,pill:true,variant:color,className:\"badge-round badge-round-opacity-\".concat(color,\"  m-1\")},String.fromCharCode(65+i));})))),/*#__PURE__*/React.createElement(SimpleCard,{title:\"Basic Examples\",className:\"mb-3\"},/*#__PURE__*/React.createElement(\"ul\",{className:\"list-group list-group-flash\"},/*#__PURE__*/React.createElement(\"h6\",{className:\"card-subtitle mt-2 mb-2 text-muted\"},\"Circle and Square Unified Styles\"),/*#__PURE__*/React.createElement(\"li\",{className:\"list-group-item border-0\"},this.variantList.map(function(color,i){return/*#__PURE__*/React.createElement(Badge,{key:i,variant:color,className:\"badge-round-\".concat(color,\" sm  m-1\")},String.fromCharCode(65+i));}))),/*#__PURE__*/React.createElement(\"ul\",{className:\"list-group list-group-flash\"},/*#__PURE__*/React.createElement(\"h6\",{className:\"card-subtitle mt-2 mb-2 text-muted\"},\"Dot Styles Examples:\"),/*#__PURE__*/React.createElement(\"li\",{className:\"list-group-item border-0\"},this.variantList.map(function(color,i){return/*#__PURE__*/React.createElement(\"span\",{key:i,variant:color,className:\"badge-dot-\".concat(color,\" mr-1\")});})),/*#__PURE__*/React.createElement(\"li\",{className:\"list-group-item border-0\"},\"Pending \",/*#__PURE__*/React.createElement(\"span\",{className:\"badge-dot-primary mr-1\"}),\"Caption\",/*#__PURE__*/React.createElement(\"span\",{className:\"badge-dot-secondary mr-1\"}),\" Heading\",/*#__PURE__*/React.createElement(\"span\",{className:\"badge-dot-success mr-1\"}),\" Status\",/*#__PURE__*/React.createElement(\"span\",{className:\"badge-dot-danger mr-1\"})))),/*#__PURE__*/React.createElement(SimpleCard,{title:\"Outline Badges\"},/*#__PURE__*/React.createElement(\"ul\",{className:\"list-group list-group-flash\"},/*#__PURE__*/React.createElement(\"h6\",{className:\"card-subtitle mt-2 mb-2 text-muted\"},\"Basic state color badges:\"),/*#__PURE__*/React.createElement(\"li\",{className:\"list-group-item border-0\"},this.variantList.map(function(color,i){return/*#__PURE__*/React.createElement(Badge,{key:i,className:\"outline-round-\".concat(color,\" sm m-1\")},String.fromCharCode(65+i));}))))))));}}]);return AppBadge;}(Component);export default AppBadge;","map":{"version":3,"sources":["/Users/arjun/Documents/Personal/Test/Theta/UI Theme/gull-admin/react/src/app/views/ui-kits/badges/AppBadge.jsx"],"names":["React","Component","Breadcrumb","OutlinedBadge","SimpleCard","Badge","Row","Col","Link","AppBadge","variantList","state","name","path","map","color","ind","i","String","fromCharCode"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Breadcrumb } from \"@gull\";\nimport OutlinedBadge from \"@gull/components/badges/OutlinedBadge\";\nimport SimpleCard from \"@gull/components/cards/SimpleCard\";\nimport { Badge, Row, Col } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\nclass AppBadge extends Component {\n  variantList = [\n    \"primary\",\n    \"secondary\",\n    \"success\",\n    \"danger\",\n    \"warning\",\n    \"info\",\n    \"light\",\n    \"dark\"\n  ];\n\n  state = {};\n\n  render() {\n    return (\n      <div>\n        <Breadcrumb\n          routeSegments={[\n            { name: \"UI Kits\", path: \"/uikits\" },\n            { name: \"Badges\" }\n          ]}\n        ></Breadcrumb>\n        <div className=\"mb-3\">\n          <Row>\n            <Col lg={6} md={6} sm={6} xs={12}>\n              <SimpleCard title=\"Badge outline\">\n                {this.variantList.map(color => (\n                  <Badge\n                    key={color}\n                    pill\n                    className={`badge-outline-${color} p-2 m-1`}\n                  >\n                    {color}\n                  </Badge>\n                ))}\n              </SimpleCard>\n            </Col>\n            <Col lg={6} md={6} sm={6} xs={12}>\n              <SimpleCard title=\"Regular Badges\">\n                {this.variantList.map(color => (\n                  <Badge key={color} variant={color} className=\"m-1\">\n                    {color}\n                  </Badge>\n                ))}\n              </SimpleCard>\n            </Col>\n          </Row>\n        </div>\n\n        <div className=\"mb-3\">\n          <Row>\n            <Col lg={6} md={6} sm={6} xs={12}>\n              <SimpleCard title=\"Badge Pill\">\n                {this.variantList.map(color => (\n                  <Badge key={color} pill variant={color} className=\"m-1\">\n                    {color}\n                  </Badge>\n                ))}\n              </SimpleCard>\n            </Col>\n            <Col lg={6} md={6} sm={6} xs={12}>\n              <SimpleCard title=\"Badge Pill with Padding\">\n                {this.variantList.map(color => (\n                  <Badge key={color} pill variant={color} className=\"p-2 m-1\">\n                    {color}\n                  </Badge>\n                ))}\n              </SimpleCard>\n            </Col>\n          </Row>\n        </div>\n\n        <div className=\"mb-3\">\n          <Row>\n            <Col lg={6} md={6} sm={6} xs={12}>\n              <SimpleCard title=\"Badge link\">\n                {this.variantList.map((color, ind) => (\n                  <Link to=\"/uikits/badges\" key={ind}>\n                    <Badge pill variant={color} className=\"m-1\">\n                      {color}\n                    </Badge>\n                  </Link>\n                ))}\n              </SimpleCard>\n            </Col>\n          </Row>\n        </div>\n\n        <div className=\"mb-3\">\n          <Row>\n            <Col lg={6} md={6} sm={6} xs={12}>\n              <SimpleCard className=\"mb-3\" title=\"Badge liSizing & Styles\">\n                <ul className=\"list-group list-group-flush\">\n                  <h6 className=\"card-subtitle mt-2 mb-2 text-muted\">\n                    Medium Size\n                  </h6>\n\n                  <li className=\"list-group-item border-0\">\n                    {this.variantList.map((color, i) => (\n                      <Badge key={i} className={`badge-round-${color}  m-1`}>\n                        {String.fromCharCode(65 + i)}\n                      </Badge>\n                    ))}\n                  </li>\n                  <li className=\"list-group-item border-0\">\n                    {this.variantList.map((color, i) => (\n                      <Badge key={i} className={`badge-square-${color}  m-1`}>\n                        {String.fromCharCode(65 + i)}\n                      </Badge>\n                    ))}\n                  </li>\n\n                  <h6 className=\"card-subtitle mt-2 mb-2 text-muted\">\n                    Large Size\n                  </h6>\n\n                  <li className=\"list-group-item border-0\">\n                    {this.variantList.map((color, i) => (\n                      <Badge key={i} className={`badge-round-${color} lg  m-1`}>\n                        {String.fromCharCode(65 + i)}\n                      </Badge>\n                    ))}\n                  </li>\n\n                  <li className=\"list-group-item border-0\">\n                    {this.variantList.map((color, i) => (\n                      <Badge key={i} className={`badge-square-${color} lg m-1`}>\n                        {String.fromCharCode(65 + i)}\n                      </Badge>\n                    ))}\n                  </li>\n\n                  <h6 className=\"card-subtitle mt-2 mb-2 text-muted\">\n                    Extra Large Size\n                  </h6>\n\n                  <li className=\"list-group-item border-0\">\n                    {this.variantList.map((color, i) => (\n                      <Badge key={i} className={`badge-round-${color} xl  m-1`}>\n                        {String.fromCharCode(65 + i)}\n                      </Badge>\n                    ))}\n                  </li>\n\n                  <li className=\"list-group-item border-0\">\n                    {this.variantList.map((color, i) => (\n                      <Badge\n                        key={i}\n                        className={`badge-square-${color} xl  m-1`}\n                      >\n                        {String.fromCharCode(65 + i)}\n                      </Badge>\n                    ))}\n                  </li>\n                </ul>\n              </SimpleCard>\n\n              <SimpleCard title=\"More Styles & Options\">\n                <ul className=\"list-group list-group-flash\">\n                  <h6 className=\"card-subtitle mt-2 mb-2 text-muted\">\n                    Wide badges for longer text:\n                  </h6>\n\n                  <li className=\"list-group-item border-0\">\n                    {this.variantList.map((color, i) => (\n                      <Badge key={i} variant={color} className=\"w-badge m-1\">\n                        {color}\n                      </Badge>\n                    ))}\n                  </li>\n\n                  <h6 className=\"card-subtitle mt-2 mb-2 text-muted\">\n                    Rounded badges examples:\n                  </h6>\n                  <li className=\"list-group-item border-0\">\n                    {this.variantList.map((color, i) => (\n                      <Badge key={i} variant={color} className=\"r-badge m-1\">\n                        {color}\n                      </Badge>\n                    ))}\n                  </li>\n                </ul>\n              </SimpleCard>\n            </Col>\n\n            <Col lg={6} md={6} sm={6} xs={12}>\n              <SimpleCard title=\"Unified Styles\" className=\"mb-3\">\n                <ul className=\"list-group list-group-flash\">\n                  <h6 className=\"card-subtitle mt-2 mb-2 text-muted\">\n                    Circle and Square Unified Styles\n                  </h6>\n\n                  <li className=\"list-group-item border-0\">\n                    {this.variantList.map((color, i) => (\n                      <Badge\n                        key={i}\n                        pill\n                        variant={color}\n                        className={`badge-round badge-round-opacity-${color}  m-1`}\n                      >\n                        {String.fromCharCode(65 + i)}\n                      </Badge>\n                    ))}\n                  </li>\n                </ul>\n              </SimpleCard>\n\n              <SimpleCard title=\"Basic Examples\" className=\"mb-3\">\n                <ul className=\"list-group list-group-flash\">\n                  <h6 className=\"card-subtitle mt-2 mb-2 text-muted\">\n                    Circle and Square Unified Styles\n                  </h6>\n\n                  <li className=\"list-group-item border-0\">\n                    {this.variantList.map((color, i) => (\n                      <Badge\n                        key={i}\n                        variant={color}\n                        className={`badge-round-${color} sm  m-1`}\n                      >\n                        {String.fromCharCode(65 + i)}\n                      </Badge>\n                    ))}\n                  </li>\n                </ul>\n\n                <ul className=\"list-group list-group-flash\">\n                  <h6 className=\"card-subtitle mt-2 mb-2 text-muted\">\n                    Dot Styles Examples:\n                  </h6>\n\n                  <li className=\"list-group-item border-0\">\n                    {this.variantList.map((color, i) => (\n                      <span\n                        key={i}\n                        variant={color}\n                        className={`badge-dot-${color} mr-1`}\n                      ></span>\n                    ))}\n                  </li>\n\n                  <li className=\"list-group-item border-0\">\n                    Pending <span className=\"badge-dot-primary mr-1\"></span>\n                    Caption\n                    <span className=\"badge-dot-secondary mr-1\"></span> Heading\n                    <span className=\"badge-dot-success mr-1\"></span> Status\n                    <span className=\"badge-dot-danger mr-1\"></span>\n                  </li>\n                </ul>\n              </SimpleCard>\n\n              <SimpleCard title=\"Outline Badges\">\n                <ul className=\"list-group list-group-flash\">\n                  <h6 className=\"card-subtitle mt-2 mb-2 text-muted\">\n                    Basic state color badges:\n                  </h6>\n\n                  <li className=\"list-group-item border-0\">\n                    {this.variantList.map((color, i) => (\n                      <Badge\n                        key={i}\n                        className={`outline-round-${color} sm m-1`}\n                      >\n                        {String.fromCharCode(65 + i)}\n                      </Badge>\n                    ))}\n                  </li>\n                </ul>\n              </SimpleCard>\n            </Col>\n          </Row>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AppBadge;\n"]},"metadata":{},"sourceType":"module"}