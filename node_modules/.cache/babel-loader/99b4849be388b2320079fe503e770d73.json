{"ast":null,"code":"import _classCallCheck from\"/Users/arjun/Documents/Personal/Test/Theta/UI Theme/gull-admin/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/arjun/Documents/Personal/Test/Theta/UI Theme/gull-admin/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/arjun/Documents/Personal/Test/Theta/UI Theme/gull-admin/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/arjun/Documents/Personal/Test/Theta/UI Theme/gull-admin/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from\"react\";import{VictoryPie,VictoryAnimation,VictoryLabel}from\"victory\";var CircularProgressBar=/*#__PURE__*/function(_Component){_inherits(CircularProgressBar,_Component);var _super=_createSuper(CircularProgressBar);function CircularProgressBar(){var _this;_classCallCheck(this,CircularProgressBar);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={percent:0,data:_this.getData(0)};return _this;}_createClass(CircularProgressBar,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;var percent=25;this.setStateInterval=window.setInterval(function(){percent+=25;percent=percent>100?0:percent;_this2.setState({percent:percent,data:_this2.getData(percent)});},2000);}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){if(this.setStateInterval)window.clearInterval(this.setStateInterval);}},{key:\"getData\",value:function getData(percent){return[{x:1,y:percent},{x:2,y:100-percent}];}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",{style:{height:\"320px\"}},/*#__PURE__*/React.createElement(\"svg\",{viewBox:\"0 0 400 400\",width:\"100%\",height:\"100%\"},/*#__PURE__*/React.createElement(VictoryPie,{standalone:false,animate:{duration:1000},width:400,height:400,data:this.state.data,innerRadius:120,cornerRadius:25,labels:function labels(){return null;},style:{data:{fill:function fill(_ref){var datum=_ref.datum;var color=datum.y>30?\"green\":\"red\";return datum.x===1?color:\"transparent\";}}}}),/*#__PURE__*/React.createElement(VictoryAnimation,{duration:1000,data:this.state},function(newProps){return/*#__PURE__*/React.createElement(VictoryLabel,{textAnchor:\"middle\",verticalAnchor:\"middle\",x:200,y:200,text:\"\".concat(Math.round(newProps.percent),\"%\"),style:{fontSize:45}});})));}}]);return CircularProgressBar;}(Component);export default CircularProgressBar;","map":{"version":3,"sources":["/Users/arjun/Documents/Personal/Test/Theta/UI Theme/gull-admin/react/src/app/views/charts/victory-charts/CircularProgressBar.jsx"],"names":["React","Component","VictoryPie","VictoryAnimation","VictoryLabel","CircularProgressBar","state","percent","data","getData","setStateInterval","window","setInterval","setState","clearInterval","x","y","height","duration","fill","datum","color","newProps","Math","round","fontSize"],"mappings":"4tBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,UAAT,CAAqBC,gBAArB,CAAuCC,YAAvC,KAA2D,SAA3D,C,GAEMC,CAAAA,mB,+WACJC,K,CAAQ,CACNC,OAAO,CAAE,CADH,CAENC,IAAI,CAAE,MAAKC,OAAL,CAAa,CAAb,CAFA,C,gFAKR,4BAAoB,iBAClB,GAAIF,CAAAA,OAAO,CAAG,EAAd,CACA,KAAKG,gBAAL,CAAwBC,MAAM,CAACC,WAAP,CAAmB,UAAM,CAC/CL,OAAO,EAAI,EAAX,CACAA,OAAO,CAAGA,OAAO,CAAG,GAAV,CAAgB,CAAhB,CAAoBA,OAA9B,CACA,MAAI,CAACM,QAAL,CAAc,CACZN,OAAO,CAAPA,OADY,CAEZC,IAAI,CAAE,MAAI,CAACC,OAAL,CAAaF,OAAb,CAFM,CAAd,EAID,CAPuB,CAOrB,IAPqB,CAAxB,CAQD,C,oCAED,+BAAuB,CACrB,GAAI,KAAKG,gBAAT,CAA2BC,MAAM,CAACG,aAAP,CAAqB,KAAKJ,gBAA1B,EAC5B,C,uBAED,iBAAQH,OAAR,CAAiB,CACf,MAAO,CACL,CAAEQ,CAAC,CAAE,CAAL,CAAQC,CAAC,CAAET,OAAX,CADK,CAEL,CAAEQ,CAAC,CAAE,CAAL,CAAQC,CAAC,CAAE,IAAMT,OAAjB,CAFK,CAAP,CAID,C,sBAED,iBAAS,CACP,mBACE,2BAAK,KAAK,CAAE,CAAEU,MAAM,CAAE,OAAV,CAAZ,eACE,2BAAK,OAAO,CAAC,aAAb,CAA2B,KAAK,CAAC,MAAjC,CAAwC,MAAM,CAAC,MAA/C,eACE,oBAAC,UAAD,EACE,UAAU,CAAE,KADd,CAEE,OAAO,CAAE,CAAEC,QAAQ,CAAE,IAAZ,CAFX,CAGE,KAAK,CAAE,GAHT,CAIE,MAAM,CAAE,GAJV,CAKE,IAAI,CAAE,KAAKZ,KAAL,CAAWE,IALnB,CAME,WAAW,CAAE,GANf,CAOE,YAAY,CAAE,EAPhB,CAQE,MAAM,CAAE,wBAAM,KAAN,EARV,CASE,KAAK,CAAE,CACLA,IAAI,CAAE,CACJW,IAAI,CAAE,mBAAe,IAAZC,CAAAA,KAAY,MAAZA,KAAY,CACnB,GAAMC,CAAAA,KAAK,CAAGD,KAAK,CAACJ,CAAN,CAAU,EAAV,CAAe,OAAf,CAAyB,KAAvC,CACA,MAAOI,CAAAA,KAAK,CAACL,CAAN,GAAY,CAAZ,CAAgBM,KAAhB,CAAwB,aAA/B,CACD,CAJG,CADD,CATT,EADF,cAmBE,oBAAC,gBAAD,EAAkB,QAAQ,CAAE,IAA5B,CAAkC,IAAI,CAAE,KAAKf,KAA7C,EACG,SAAAgB,QAAQ,CAAI,CACX,mBACE,oBAAC,YAAD,EACE,UAAU,CAAC,QADb,CAEE,cAAc,CAAC,QAFjB,CAGE,CAAC,CAAE,GAHL,CAIE,CAAC,CAAE,GAJL,CAKE,IAAI,WAAKC,IAAI,CAACC,KAAL,CAAWF,QAAQ,CAACf,OAApB,CAAL,KALN,CAME,KAAK,CAAE,CAAEkB,QAAQ,CAAE,EAAZ,CANT,EADF,CAUD,CAZH,CAnBF,CADF,CADF,CAsCD,C,iCApE+BxB,S,EAuElC,cAAeI,CAAAA,mBAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { VictoryPie, VictoryAnimation, VictoryLabel } from \"victory\";\n\nclass CircularProgressBar extends Component {\n  state = {\n    percent: 0,\n    data: this.getData(0)\n  };\n\n  componentDidMount() {\n    let percent = 25;\n    this.setStateInterval = window.setInterval(() => {\n      percent += 25;\n      percent = percent > 100 ? 0 : percent;\n      this.setState({\n        percent,\n        data: this.getData(percent)\n      });\n    }, 2000);\n  }\n\n  componentWillUnmount() {\n    if (this.setStateInterval) window.clearInterval(this.setStateInterval);\n  }\n\n  getData(percent) {\n    return [\n      { x: 1, y: percent },\n      { x: 2, y: 100 - percent }\n    ];\n  }\n\n  render() {\n    return (\n      <div style={{ height: \"320px\" }}>\n        <svg viewBox=\"0 0 400 400\" width=\"100%\" height=\"100%\">\n          <VictoryPie\n            standalone={false}\n            animate={{ duration: 1000 }}\n            width={400}\n            height={400}\n            data={this.state.data}\n            innerRadius={120}\n            cornerRadius={25}\n            labels={() => null}\n            style={{\n              data: {\n                fill: ({ datum }) => {\n                  const color = datum.y > 30 ? \"green\" : \"red\";\n                  return datum.x === 1 ? color : \"transparent\";\n                }\n              }\n            }}\n          />\n          <VictoryAnimation duration={1000} data={this.state}>\n            {newProps => {\n              return (\n                <VictoryLabel\n                  textAnchor=\"middle\"\n                  verticalAnchor=\"middle\"\n                  x={200}\n                  y={200}\n                  text={`${Math.round(newProps.percent)}%`}\n                  style={{ fontSize: 45 }}\n                />\n              );\n            }}\n          </VictoryAnimation>\n        </svg>\n      </div>\n    );\n  }\n}\n\nexport default CircularProgressBar;\n"]},"metadata":{},"sourceType":"module"}