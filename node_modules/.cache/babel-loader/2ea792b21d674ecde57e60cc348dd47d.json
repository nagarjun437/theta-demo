{"ast":null,"code":"import { dataSeries } from \"./dataSeries\";\n\nfunction generateDayWiseTimeSeries(baseval, count, yrange) {\n  var i = 0;\n  var series = [];\n\n  while (i < count) {\n    var x = baseval;\n    var y = Math.floor(Math.random() * (yrange.max - yrange.min + 1)) + yrange.min;\n    series.push([x, y]);\n    baseval += 86400000;\n    i++;\n  }\n\n  return series;\n}\n\nexport const options1 = {\n  chart: {\n    height: 350,\n    type: \"line\",\n    zoom: {\n      enabled: false\n    },\n    toolbar: {\n      show: true\n    }\n  },\n  tooltip: {\n    enabled: true,\n    shared: true,\n    followCursor: false,\n    intersect: false,\n    inverseOrder: false,\n    custom: undefined,\n    fillSeriesColor: false,\n    theme: false\n  },\n  dataLabels: {\n    enabled: false\n  },\n  stroke: {\n    curve: \"smooth\"\n  },\n  series: [{\n    name: \"Desktops\",\n    data: [10, 41, 35, 51, 49, 62, 69, 91, 148]\n  }],\n  grid: {\n    row: {\n      colors: [\"#f3f3f3\", \"transparent\"],\n      // takes an array which will be repeated on columns\n      opacity: 0.5\n    }\n  },\n  xaxis: {\n    categories: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\"]\n  }\n};\nexport const options2 = {\n  chart: {\n    height: 350,\n    type: \"line\",\n    shadow: {\n      enabled: true,\n      color: \"#000\",\n      top: 18,\n      left: 7,\n      blur: 10,\n      opacity: 1\n    },\n    toolbar: {\n      show: false\n    },\n    animations: {\n      enabled: true,\n      easing: \"linear\",\n      speed: 500,\n      animateGradually: {\n        enabled: true,\n        delay: 150\n      },\n      dynamicAnimation: {\n        enabled: true,\n        speed: 550\n      }\n    }\n  },\n  colors: [\"#77B6EA\", \"#545454\"],\n  dataLabels: {\n    enabled: true\n  },\n  stroke: {\n    curve: \"smooth\"\n  },\n  series: [{\n    name: \"High - 2013\",\n    data: [28, 29, 33, 36, 32, 32, 33]\n  }, {\n    name: \"Low - 2013\",\n    data: [12, 11, 14, 18, 17, 13, 13]\n  }],\n  grid: {\n    borderColor: \"#e7e7e7\",\n    row: {\n      colors: [\"#f3f3f3\", \"transparent\"],\n      // takes an array which will be repeated on columns\n      opacity: 0.5\n    }\n  },\n  markers: {\n    size: 6\n  },\n  xaxis: {\n    categories: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\"],\n    title: {\n      text: \"Month\"\n    }\n  },\n  yaxis: {\n    title: {\n      text: \"Temperature\"\n    },\n    min: 5,\n    max: 40\n  },\n  legend: {\n    position: \"top\",\n    horizontalAlign: \"right\",\n    floating: true,\n    offsetY: -25,\n    offsetX: -5\n  }\n}; // Zoomable timeseries line chart\n\nlet ts2 = 1484418600000;\nlet dates = [];\n\nfor (let i = 0; i < 120; i++) {\n  ts2 = ts2 + 86400000;\n  let innerArr = [ts2, dataSeries[1][i].value];\n  dates.push(innerArr);\n}\n\nexport const options3 = {\n  chart: {\n    type: \"area\",\n    stacked: false,\n    height: 350,\n    zoom: {\n      type: \"x\",\n      enabled: true\n    },\n    toolbar: {\n      autoSelected: \"zoom\"\n    }\n  },\n  dataLabels: {\n    enabled: false\n  },\n  series: [{\n    name: \"XYZ MOTORS\",\n    data: dates\n  }],\n  markers: {\n    size: 0\n  },\n  fill: {\n    type: \"gradient\",\n    gradient: {\n      shadeIntensity: 1,\n      inverseColors: false,\n      opacityFrom: 0.5,\n      opacityTo: 0,\n      stops: [0, 90, 100]\n    }\n  },\n  yaxis: {\n    min: 20000000,\n    max: 250000000,\n    labels: {\n      formatter: function formatter(val) {\n        return (val / 1000000).toFixed(0);\n      }\n    },\n    title: {\n      text: \"Price\"\n    }\n  },\n  xaxis: {\n    type: \"datetime\"\n  },\n  tooltip: {\n    shared: false,\n    y: {\n      formatter: function formatter(val) {\n        return (val / 1000000).toFixed(0);\n      }\n    }\n  }\n};\nexport const options4 = {\n  chart: {\n    height: 350,\n    type: \"line\",\n    dropShadow: {\n      enabled: true,\n      top: 3,\n      left: 3,\n      blur: 1,\n      opacity: 0.2\n    }\n  },\n  stroke: {\n    width: 7,\n    curve: \"smooth\"\n  },\n  series: [{\n    name: \"Likes\",\n    data: [4, 3, 10, 9, 29, 19, 22, 9, 12, 7, 19, 5, 13, 9, 17, 2, 7, 5]\n  }],\n  xaxis: {\n    type: \"datetime\",\n    categories: [\"1/11/2000\", \"2/11/2000\", \"3/11/2000\", \"4/11/2000\", \"5/11/2000\", \"6/11/2000\", \"7/11/2000\", \"8/11/2000\", \"9/11/2000\", \"10/11/2000\", \"11/11/2000\", \"12/11/2000\", \"1/11/2001\", \"2/11/2001\", \"3/11/2001\", \"4/11/2001\", \"5/11/2001\", \"6/11/2001\"]\n  },\n  fill: {\n    type: \"gradient\",\n    gradient: {\n      shade: \"dark\",\n      gradientToColors: [\"#FDD835\"],\n      shadeIntensity: 1,\n      type: \"horizontal\",\n      opacityFrom: 1,\n      opacityTo: 1,\n      stops: [0, 100, 100, 100]\n    }\n  },\n  markers: {\n    size: 4,\n    opacity: 0.9,\n    colors: [\"#FFA41B\"],\n    strokeColor: \"#fff\",\n    strokeWidth: 2,\n    hover: {\n      size: 7\n    }\n  },\n  yaxis: {\n    min: -10,\n    max: 40,\n    title: {\n      text: \"Engagement\"\n    }\n  }\n};\nlet lastDate = 0;\nlet data = [];\n\nfunction getDayWiseTimeSeries(baseval, count, yrange) {\n  let i = 0;\n\n  while (i < count) {\n    let x = baseval;\n    let y = Math.floor(Math.random() * (yrange.max - yrange.min + 1)) + yrange.min;\n    data.push({\n      x: x,\n      y: y\n    });\n    lastDate = baseval;\n    baseval += 86400000;\n    i++;\n  }\n}\n\ngetDayWiseTimeSeries(new Date(\"11 Feb 2017 GMT\").getTime(), 10, {\n  min: 10,\n  max: 90\n});\nexport const options5 = {\n  chart: {\n    height: 350,\n    type: \"line\",\n    animations: {\n      enabled: true,\n      easing: \"linear\",\n      dynamicAnimation: {\n        speed: 2000\n      }\n    },\n    toolbar: {\n      show: false\n    },\n    zoom: {\n      enabled: false\n    },\n    dropShadow: {\n      enabled: true,\n      top: 3,\n      left: 3,\n      blur: 1,\n      opacity: 0.2\n    }\n  },\n  dataLabels: {\n    enabled: false\n  },\n  stroke: {\n    curve: \"smooth\"\n  },\n  series: [{\n    data: data\n  }],\n  fill: {\n    type: \"gradient\",\n    gradient: {\n      shade: \"dark\",\n      gradientToColors: [\"#FDD835\"],\n      shadeIntensity: 1,\n      type: \"horizontal\",\n      opacityFrom: 1,\n      opacityTo: 1,\n      stops: [0, 100, 100, 100]\n    }\n  },\n  markers: {\n    size: 0\n  },\n  xaxis: {\n    type: \"datetime\",\n    range: 777600000\n  },\n  yaxis: {\n    max: 100\n  },\n  legend: {\n    show: false\n  }\n};\nexport const options6 = {\n  chart: {\n    height: 350,\n    type: \"line\",\n    zoom: {\n      enabled: false\n    }\n  },\n  dataLabels: {\n    enabled: false\n  },\n  stroke: {\n    width: [5, 7, 5],\n    curve: \"smooth\",\n    dashArray: [0, 8, 5]\n  },\n  series: [{\n    name: \"Session Duration\",\n    data: [45, 52, 38, 24, 33, 26, 21, 20, 6, 8, 15, 10]\n  }, {\n    name: \"Page Views\",\n    data: [35, 41, 62, 42, 13, 18, 29, 37, 36, 51, 32, 35]\n  }, {\n    name: \"Total Visits\",\n    data: [87, 57, 74, 99, 75, 38, 62, 47, 82, 56, 45, 47]\n  }],\n  markers: {\n    size: 0,\n    hover: {\n      sizeOffset: 6\n    }\n  },\n  xaxis: {\n    categories: [\"01 Jan\", \"02 Jan\", \"03 Jan\", \"04 Jan\", \"05 Jan\", \"06 Jan\", \"07 Jan\", \"08 Jan\", \"09 Jan\", \"10 Jan\", \"11 Jan\", \"12 Jan\"]\n  },\n  tooltip: {\n    y: [{\n      title: {\n        formatter: function formatter(val) {\n          return val + \" (mins)\";\n        }\n      }\n    }, {\n      title: {\n        formatter: function formatter(val) {\n          return val + \" per session\";\n        }\n      }\n    }, {\n      title: {\n        formatter: function formatter(val) {\n          return val;\n        }\n      }\n    }]\n  },\n  grid: {\n    borderColor: \"#f1f1f1\"\n  }\n};\nlet data1 = generateDayWiseTimeSeries(new Date(\"11 Feb 2017\").getTime(), 185, {\n  min: 30,\n  max: 90\n});\nexport const options7 = {\n  chart: {\n    id: \"chart2\",\n    type: \"line\",\n    height: 230,\n    toolbar: {\n      autoSelected: \"pan\",\n      show: false\n    }\n  },\n  colors: [\"#546E7A\"],\n  stroke: {\n    width: 3\n  },\n  dataLabels: {\n    enabled: false\n  },\n  fill: {\n    opacity: 1\n  },\n  markers: {\n    size: 0\n  },\n  series: [{\n    data: data1\n  }],\n  xaxis: {\n    type: \"datetime\"\n  }\n};\nexport const options8 = {\n  chart: {\n    id: \"chart1\",\n    height: 130,\n    type: \"area\",\n    brush: {\n      target: \"chart2\",\n      enabled: true\n    },\n    selection: {\n      enabled: true,\n      xaxis: {\n        min: new Date(\"19 Jun 2017\").getTime(),\n        max: new Date(\"14 Aug 2017\").getTime()\n      }\n    }\n  },\n  colors: [\"#008FFB\"],\n  series: [{\n    data: data\n  }],\n  fill: {\n    type: \"gradient\",\n    gradient: {\n      opacityFrom: 0.91,\n      opacityTo: 0.1\n    }\n  },\n  xaxis: {\n    type: \"datetime\",\n    tooltip: {\n      enabled: false\n    }\n  },\n  yaxis: {\n    tickAmount: 2\n  }\n};","map":{"version":3,"sources":["/Users/arjun/Documents/Personal/Test/Theta/UI Theme/gull-admin/react/src/app/views/charts/apex/apexLineChartOptions.js"],"names":["dataSeries","generateDayWiseTimeSeries","baseval","count","yrange","i","series","x","y","Math","floor","random","max","min","push","options1","chart","height","type","zoom","enabled","toolbar","show","tooltip","shared","followCursor","intersect","inverseOrder","custom","undefined","fillSeriesColor","theme","dataLabels","stroke","curve","name","data","grid","row","colors","opacity","xaxis","categories","options2","shadow","color","top","left","blur","animations","easing","speed","animateGradually","delay","dynamicAnimation","borderColor","markers","size","title","text","yaxis","legend","position","horizontalAlign","floating","offsetY","offsetX","ts2","dates","innerArr","value","options3","stacked","autoSelected","fill","gradient","shadeIntensity","inverseColors","opacityFrom","opacityTo","stops","labels","formatter","val","toFixed","options4","dropShadow","width","shade","gradientToColors","strokeColor","strokeWidth","hover","lastDate","getDayWiseTimeSeries","Date","getTime","options5","range","options6","dashArray","sizeOffset","data1","options7","id","options8","brush","target","selection","tickAmount"],"mappings":"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","sourcesContent":["import { dataSeries } from \"./dataSeries\";\n\nfunction generateDayWiseTimeSeries(baseval, count, yrange) {\n  var i = 0;\n  var series = [];\n  while (i < count) {\n    var x = baseval;\n    var y =\n      Math.floor(Math.random() * (yrange.max - yrange.min + 1)) + yrange.min;\n\n    series.push([x, y]);\n    baseval += 86400000;\n    i++;\n  }\n  return series;\n}\n\nexport const options1 = {\n  chart: {\n    height: 350,\n    type: \"line\",\n    zoom: {\n      enabled: false\n    },\n    toolbar: {\n      show: true\n    }\n  },\n  tooltip: {\n    enabled: true,\n    shared: true,\n    followCursor: false,\n    intersect: false,\n    inverseOrder: false,\n    custom: undefined,\n    fillSeriesColor: false,\n    theme: false\n  },\n  dataLabels: {\n    enabled: false\n  },\n  stroke: {\n    curve: \"smooth\"\n  },\n  series: [\n    {\n      name: \"Desktops\",\n      data: [10, 41, 35, 51, 49, 62, 69, 91, 148]\n    }\n  ],\n\n  grid: {\n    row: {\n      colors: [\"#f3f3f3\", \"transparent\"], // takes an array which will be repeated on columns\n      opacity: 0.5\n    }\n  },\n  xaxis: {\n    categories: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\"]\n  }\n};\n\nexport const options2 = {\n  chart: {\n    height: 350,\n    type: \"line\",\n    shadow: {\n      enabled: true,\n      color: \"#000\",\n      top: 18,\n      left: 7,\n      blur: 10,\n      opacity: 1\n    },\n    toolbar: {\n      show: false\n    },\n    animations: {\n      enabled: true,\n      easing: \"linear\",\n      speed: 500,\n      animateGradually: {\n        enabled: true,\n        delay: 150\n      },\n      dynamicAnimation: {\n        enabled: true,\n        speed: 550\n      }\n    }\n  },\n  colors: [\"#77B6EA\", \"#545454\"],\n  dataLabels: {\n    enabled: true\n  },\n\n  stroke: {\n    curve: \"smooth\"\n  },\n  series: [\n    {\n      name: \"High - 2013\",\n      data: [28, 29, 33, 36, 32, 32, 33]\n    },\n    {\n      name: \"Low - 2013\",\n      data: [12, 11, 14, 18, 17, 13, 13]\n    }\n  ],\n\n  grid: {\n    borderColor: \"#e7e7e7\",\n    row: {\n      colors: [\"#f3f3f3\", \"transparent\"], // takes an array which will be repeated on columns\n      opacity: 0.5\n    }\n  },\n  markers: {\n    size: 6\n  },\n  xaxis: {\n    categories: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\"],\n    title: {\n      text: \"Month\"\n    }\n  },\n  yaxis: {\n    title: {\n      text: \"Temperature\"\n    },\n    min: 5,\n    max: 40\n  },\n  legend: {\n    position: \"top\",\n    horizontalAlign: \"right\",\n    floating: true,\n    offsetY: -25,\n    offsetX: -5\n  }\n};\n\n// Zoomable timeseries line chart\nlet ts2 = 1484418600000;\nlet dates = [];\nfor (let i = 0; i < 120; i++) {\n  ts2 = ts2 + 86400000;\n  let innerArr = [ts2, dataSeries[1][i].value];\n  dates.push(innerArr);\n}\nexport const options3 = {\n  chart: {\n    type: \"area\",\n    stacked: false,\n    height: 350,\n    zoom: {\n      type: \"x\",\n      enabled: true\n    },\n    toolbar: {\n      autoSelected: \"zoom\"\n    }\n  },\n  dataLabels: {\n    enabled: false\n  },\n  series: [\n    {\n      name: \"XYZ MOTORS\",\n      data: dates\n    }\n  ],\n  markers: {\n    size: 0\n  },\n\n  fill: {\n    type: \"gradient\",\n    gradient: {\n      shadeIntensity: 1,\n      inverseColors: false,\n      opacityFrom: 0.5,\n      opacityTo: 0,\n      stops: [0, 90, 100]\n    }\n  },\n  yaxis: {\n    min: 20000000,\n    max: 250000000,\n    labels: {\n      formatter: function formatter(val) {\n        return (val / 1000000).toFixed(0);\n      }\n    },\n    title: {\n      text: \"Price\"\n    }\n  },\n  xaxis: {\n    type: \"datetime\"\n  },\n\n  tooltip: {\n    shared: false,\n    y: {\n      formatter: function formatter(val) {\n        return (val / 1000000).toFixed(0);\n      }\n    }\n  }\n};\n\nexport const options4 = {\n  chart: {\n    height: 350,\n    type: \"line\",\n\n    dropShadow: {\n      enabled: true,\n      top: 3,\n      left: 3,\n      blur: 1,\n      opacity: 0.2\n    }\n  },\n  stroke: {\n    width: 7,\n    curve: \"smooth\"\n  },\n  series: [\n    {\n      name: \"Likes\",\n      data: [4, 3, 10, 9, 29, 19, 22, 9, 12, 7, 19, 5, 13, 9, 17, 2, 7, 5]\n    }\n  ],\n  xaxis: {\n    type: \"datetime\",\n    categories: [\n      \"1/11/2000\",\n      \"2/11/2000\",\n      \"3/11/2000\",\n      \"4/11/2000\",\n      \"5/11/2000\",\n      \"6/11/2000\",\n      \"7/11/2000\",\n      \"8/11/2000\",\n      \"9/11/2000\",\n      \"10/11/2000\",\n      \"11/11/2000\",\n      \"12/11/2000\",\n      \"1/11/2001\",\n      \"2/11/2001\",\n      \"3/11/2001\",\n      \"4/11/2001\",\n      \"5/11/2001\",\n      \"6/11/2001\"\n    ]\n  },\n\n  fill: {\n    type: \"gradient\",\n    gradient: {\n      shade: \"dark\",\n      gradientToColors: [\"#FDD835\"],\n      shadeIntensity: 1,\n      type: \"horizontal\",\n      opacityFrom: 1,\n      opacityTo: 1,\n      stops: [0, 100, 100, 100]\n    }\n  },\n  markers: {\n    size: 4,\n    opacity: 0.9,\n    colors: [\"#FFA41B\"],\n    strokeColor: \"#fff\",\n    strokeWidth: 2,\n\n    hover: {\n      size: 7\n    }\n  },\n  yaxis: {\n    min: -10,\n    max: 40,\n    title: {\n      text: \"Engagement\"\n    }\n  }\n};\n\nlet lastDate = 0;\nlet data = [];\n\nfunction getDayWiseTimeSeries(baseval, count, yrange) {\n  let i = 0;\n  while (i < count) {\n    let x = baseval;\n    let y =\n      Math.floor(Math.random() * (yrange.max - yrange.min + 1)) + yrange.min;\n\n    data.push({\n      x: x,\n      y: y\n    });\n    lastDate = baseval;\n    baseval += 86400000;\n    i++;\n  }\n}\n\ngetDayWiseTimeSeries(new Date(\"11 Feb 2017 GMT\").getTime(), 10, {\n  min: 10,\n  max: 90\n});\n\nexport const options5 = {\n  chart: {\n    height: 350,\n    type: \"line\",\n    animations: {\n      enabled: true,\n      easing: \"linear\",\n      dynamicAnimation: {\n        speed: 2000\n      }\n    },\n    toolbar: {\n      show: false\n    },\n    zoom: {\n      enabled: false\n    },\n    dropShadow: {\n      enabled: true,\n      top: 3,\n      left: 3,\n      blur: 1,\n      opacity: 0.2\n    }\n  },\n  dataLabels: {\n    enabled: false\n  },\n  stroke: {\n    curve: \"smooth\"\n  },\n  series: [\n    {\n      data: data\n    }\n  ],\n\n  fill: {\n    type: \"gradient\",\n    gradient: {\n      shade: \"dark\",\n      gradientToColors: [\"#FDD835\"],\n      shadeIntensity: 1,\n      type: \"horizontal\",\n      opacityFrom: 1,\n      opacityTo: 1,\n      stops: [0, 100, 100, 100]\n    }\n  },\n  markers: {\n    size: 0\n  },\n  xaxis: {\n    type: \"datetime\",\n    range: 777600000\n  },\n  yaxis: {\n    max: 100\n  },\n  legend: {\n    show: false\n  }\n};\n\nexport const options6 = {\n  chart: {\n    height: 350,\n    type: \"line\",\n    zoom: {\n      enabled: false\n    }\n  },\n  dataLabels: {\n    enabled: false\n  },\n  stroke: {\n    width: [5, 7, 5],\n    curve: \"smooth\",\n    dashArray: [0, 8, 5]\n  },\n  series: [\n    {\n      name: \"Session Duration\",\n      data: [45, 52, 38, 24, 33, 26, 21, 20, 6, 8, 15, 10]\n    },\n    {\n      name: \"Page Views\",\n      data: [35, 41, 62, 42, 13, 18, 29, 37, 36, 51, 32, 35]\n    },\n    {\n      name: \"Total Visits\",\n      data: [87, 57, 74, 99, 75, 38, 62, 47, 82, 56, 45, 47]\n    }\n  ],\n\n  markers: {\n    size: 0,\n\n    hover: {\n      sizeOffset: 6\n    }\n  },\n  xaxis: {\n    categories: [\n      \"01 Jan\",\n      \"02 Jan\",\n      \"03 Jan\",\n      \"04 Jan\",\n      \"05 Jan\",\n      \"06 Jan\",\n      \"07 Jan\",\n      \"08 Jan\",\n      \"09 Jan\",\n      \"10 Jan\",\n      \"11 Jan\",\n      \"12 Jan\"\n    ]\n  },\n  tooltip: {\n    y: [\n      {\n        title: {\n          formatter: function formatter(val) {\n            return val + \" (mins)\";\n          }\n        }\n      },\n      {\n        title: {\n          formatter: function formatter(val) {\n            return val + \" per session\";\n          }\n        }\n      },\n      {\n        title: {\n          formatter: function formatter(val) {\n            return val;\n          }\n        }\n      }\n    ]\n  },\n  grid: {\n    borderColor: \"#f1f1f1\"\n  }\n};\n\nlet data1 = generateDayWiseTimeSeries(new Date(\"11 Feb 2017\").getTime(), 185, {\n  min: 30,\n  max: 90\n});\n\nexport const options7 = {\n  chart: {\n    id: \"chart2\",\n    type: \"line\",\n    height: 230,\n    toolbar: {\n      autoSelected: \"pan\",\n      show: false\n    }\n  },\n  colors: [\"#546E7A\"],\n  stroke: {\n    width: 3\n  },\n  dataLabels: {\n    enabled: false\n  },\n  fill: {\n    opacity: 1\n  },\n  markers: {\n    size: 0\n  },\n  series: [\n    {\n      data: data1\n    }\n  ],\n  xaxis: {\n    type: \"datetime\"\n  }\n};\n\nexport const options8 = {\n  chart: {\n    id: \"chart1\",\n    height: 130,\n    type: \"area\",\n    brush: {\n      target: \"chart2\",\n      enabled: true\n    },\n    selection: {\n      enabled: true,\n      xaxis: {\n        min: new Date(\"19 Jun 2017\").getTime(),\n        max: new Date(\"14 Aug 2017\").getTime()\n      }\n    }\n  },\n  colors: [\"#008FFB\"],\n  series: [\n    {\n      data: data\n    }\n  ],\n  fill: {\n    type: \"gradient\",\n    gradient: {\n      opacityFrom: 0.91,\n      opacityTo: 0.1\n    }\n  },\n  xaxis: {\n    type: \"datetime\",\n    tooltip: {\n      enabled: false\n    }\n  },\n  yaxis: {\n    tickAmount: 2\n  }\n};\n"]},"metadata":{},"sourceType":"module"}