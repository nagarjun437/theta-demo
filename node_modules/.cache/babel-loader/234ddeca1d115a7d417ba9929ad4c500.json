{"ast":null,"code":"import _objectSpread from\"/Users/arjun/Documents/Personal/Test/Theta/UI Theme/gull-admin/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _objectWithoutProperties from\"/Users/arjun/Documents/Personal/Test/Theta/UI Theme/gull-admin/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";var _excluded=[\"start\",\"end\"];import Mock from\"../mock\";import shortid from\"shortid\";var date=new Date();var calendarEventDB={events:[{id:\"344jdfher3wh23\",title:\"Meeting with all employees\",start:new Date(date.getFullYear(),date.getMonth(),1),end:new Date(date.getFullYear(),date.getMonth(),3),classNames:[\"text-white\"],allDay:true},{id:\"344jdfher3wh245\",title:\"A trip to Bali Island\",start:new Date(),end:new Date(date.getFullYear(),date.getMonth(),date.getDate()+2),classNames:[\"text-white\"],allDay:true}]};Mock.onGet(\"/api/calendar/events/all\").reply(function(config){return[200,calendarEventDB.events];});Mock.onPost(\"/api/calendar/events/add\").reply(function(config){var _JSON$parse=JSON.parse(config.data),start=_JSON$parse.start,end=_JSON$parse.end,others=_objectWithoutProperties(_JSON$parse,_excluded);var event=_objectSpread({id:shortid.generate(),start:new Date(start),end:new Date(end)},others);calendarEventDB.events.push(event);return[200,calendarEventDB.events];});Mock.onPost(\"/api/calendar/events/update\").reply(function(config){var updatedEvent=JSON.parse(config.data);calendarEventDB.events=calendarEventDB.events.map(function(event){if(event.id===updatedEvent.id){return _objectSpread({},updatedEvent);}return event;});return[200,calendarEventDB.events];});Mock.onPost(\"/api/calendar/events/delete\").reply(function(config){var event=JSON.parse(config.data);calendarEventDB.events.map(function(element,i){if(element.id===event.id){return[200,calendarEventDB.events.splice(i,1)];}});return[200,calendarEventDB.events];});","map":{"version":3,"sources":["/Users/arjun/Documents/Personal/Test/Theta/UI Theme/gull-admin/react/src/fake-db/db/calendarEvents.js"],"names":["Mock","shortid","date","Date","calendarEventDB","events","id","title","start","getFullYear","getMonth","end","classNames","allDay","getDate","onGet","reply","config","onPost","JSON","parse","data","others","event","generate","push","updatedEvent","map","element","i","splice"],"mappings":"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","sourcesContent":["import Mock from \"../mock\";\nimport shortid from \"shortid\";\nconst date = new Date();\n\nconst calendarEventDB = {\n  events: [\n    {\n      id: \"344jdfher3wh23\",\n      title: \"Meeting with all employees\",\n      start: new Date(date.getFullYear(), date.getMonth(), 1),\n      end: new Date(date.getFullYear(), date.getMonth(), 3),\n      classNames: [\"text-white\"],\n      allDay: true\n    },\n    {\n      id: \"344jdfher3wh245\",\n      title: \"A trip to Bali Island\",\n      start: new Date(),\n      end: new Date(date.getFullYear(), date.getMonth(), date.getDate() + 2),\n      classNames: [\"text-white\"],\n      allDay: true\n    }\n  ]\n};\n\nMock.onGet(\"/api/calendar/events/all\").reply(config => {\n  return [200, calendarEventDB.events];\n});\n\nMock.onPost(\"/api/calendar/events/add\").reply(config => {\n  let { start, end, ...others } = JSON.parse(config.data);\n  let event = {\n    id: shortid.generate(),\n    start: new Date(start),\n    end: new Date(end),\n    ...others\n  };\n  calendarEventDB.events.push(event);\n  return [200, calendarEventDB.events];\n});\n\nMock.onPost(\"/api/calendar/events/update\").reply(config => {\n  let updatedEvent = JSON.parse(config.data);\n  calendarEventDB.events = calendarEventDB.events.map(event => {\n    if (event.id === updatedEvent.id) {\n      return { ...updatedEvent };\n    }\n    return event;\n  });\n\n  return [200, calendarEventDB.events];\n});\n\nMock.onPost(\"/api/calendar/events/delete\").reply(config => {\n  let event = JSON.parse(config.data);\n\n  calendarEventDB.events.map((element, i) => {\n    if (element.id === event.id) {\n      return [200, calendarEventDB.events.splice(i, 1)];\n    }\n  });\n\n  return [200, calendarEventDB.events];\n});\n"]},"metadata":{},"sourceType":"module"}