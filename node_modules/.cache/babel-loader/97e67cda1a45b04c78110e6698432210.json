{"ast":null,"code":"var _jsxFileName = \"/Users/arjun/Documents/Personal/Test/Theta/UI Theme/theta-demo/src/app/views/dataTable/DefaultSortedDataTable.jsx\";\nimport React, { Component } from \"react\";\nimport { Breadcrumb } from \"@gull\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\nimport { SimpleCard } from \"@gull\";\nimport axios from \"axios\";\n\nclass DefaultSortedDataTable extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      userList: []\n    };\n    this.defaultSorted = [{\n      dataField: \"name\",\n      order: \"asc\"\n    }];\n    this.columns = [{\n      dataField: \"index\",\n      text: \"No\"\n    }, {\n      dataField: \"name\",\n      text: \"User Name\"\n    }, {\n      dataField: \"email\",\n      text: \"User Email\"\n    }, {\n      dataField: \"company\",\n      text: \"Company\"\n    }, {\n      dataField: \"balance\",\n      text: \"Balance\",\n      align: \"center\",\n      headerAlign: \"center\"\n    }, {\n      dataField: \"age\",\n      text: \"Age\",\n      align: \"center\",\n      headerAlign: \"center\"\n    }];\n    this.sortableColumn = [{\n      dataField: \"index\",\n      text: \"No\",\n      sort: true\n    }, {\n      dataField: \"name\",\n      text: \"User Name\",\n      sort: true\n    }, {\n      dataField: \"email\",\n      text: \"User Email\",\n      sort: true\n    }, {\n      dataField: \"company\",\n      text: \"Company\",\n      sort: true\n    }, {\n      dataField: \"balance\",\n      text: \"Balance\",\n      sort: true,\n      align: \"center\",\n      headerAlign: \"center\"\n    }, {\n      dataField: \"age\",\n      text: \"Age\",\n      sort: true,\n      align: \"center\",\n      headerAlign: \"center\"\n    }];\n    this.paginationOptions = {\n      // custom: true,\n      paginationSize: 5,\n      pageStartIndex: 1,\n      firstPageText: \"First\",\n      prePageText: \"Back\",\n      nextPageText: \"Next\",\n      lastPageText: \"Last\",\n      nextPageTitle: \"First page\",\n      prePageTitle: \"Pre page\",\n      firstPageTitle: \"Next page\",\n      lastPageTitle: \"Last page\",\n      showTotal: true,\n      totalSize: this.state.userList.length\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"/api/user/all\").then(({\n      data\n    }) => {\n      let userList = data.map(({\n        id,\n        name,\n        email,\n        age,\n        company,\n        balance\n      }, ind) => ({\n        id,\n        name,\n        email,\n        age,\n        balance,\n        company,\n        index: ind + 1\n      }));\n      this.setState({\n        userList\n      });\n    });\n  }\n\n  render() {\n    let {\n      userList\n    } = this.state;\n    let {\n      SearchBar\n    } = Search;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Breadcrumb, {\n      routeSegments: [{\n        name: \"Dashboard\",\n        path: \"/\"\n      }, {\n        name: \"Data Table\",\n        path: \"data-table\"\n      }, {\n        name: \"Default Sorted Data Table\"\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(SimpleCard, {\n      title: \"Default Sorted Data Table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(BootstrapTable, {\n      bootstrap4: true,\n      keyField: \"id\",\n      data: userList,\n      columns: this.sortableColumn,\n      defaultSorted: this.defaultSorted,\n      pagination: paginationFactory(this.paginationOptions),\n      noDataIndication: \"Table is empty\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default DefaultSortedDataTable;","map":{"version":3,"sources":["/Users/arjun/Documents/Personal/Test/Theta/UI Theme/theta-demo/src/app/views/dataTable/DefaultSortedDataTable.jsx"],"names":["React","Component","Breadcrumb","BootstrapTable","paginationFactory","ToolkitProvider","Search","SimpleCard","axios","DefaultSortedDataTable","state","userList","defaultSorted","dataField","order","columns","text","align","headerAlign","sortableColumn","sort","paginationOptions","paginationSize","pageStartIndex","firstPageText","prePageText","nextPageText","lastPageText","nextPageTitle","prePageTitle","firstPageTitle","lastPageTitle","showTotal","totalSize","length","componentDidMount","get","then","data","map","id","name","email","age","company","balance","ind","index","setState","render","SearchBar","path"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Breadcrumb } from \"@gull\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\nimport { SimpleCard } from \"@gull\";\nimport axios from \"axios\";\n\nclass DefaultSortedDataTable extends Component {\n  state = {\n    userList: []\n  };\n\n  defaultSorted = [\n    {\n      dataField: \"name\",\n      order: \"asc\"\n    }\n  ];\n\n  componentDidMount() {\n    axios.get(\"/api/user/all\").then(({ data }) => {\n      let userList = data.map(\n        ({ id, name, email, age, company, balance }, ind) => ({\n          id,\n          name,\n          email,\n          age,\n          balance,\n          company,\n          index: ind + 1\n        })\n      );\n      this.setState({ userList });\n    });\n  }\n\n  columns = [\n    {\n      dataField: \"index\",\n      text: \"No\"\n    },\n    {\n      dataField: \"name\",\n      text: \"User Name\"\n    },\n    {\n      dataField: \"email\",\n      text: \"User Email\"\n    },\n    {\n      dataField: \"company\",\n      text: \"Company\"\n    },\n    {\n      dataField: \"balance\",\n      text: \"Balance\",\n      align: \"center\",\n      headerAlign: \"center\"\n    },\n    {\n      dataField: \"age\",\n      text: \"Age\",\n      align: \"center\",\n      headerAlign: \"center\"\n    }\n  ];\n\n  sortableColumn = [\n    {\n      dataField: \"index\",\n      text: \"No\",\n      sort: true\n    },\n    {\n      dataField: \"name\",\n      text: \"User Name\",\n      sort: true\n    },\n    {\n      dataField: \"email\",\n      text: \"User Email\",\n      sort: true\n    },\n    {\n      dataField: \"company\",\n      text: \"Company\",\n      sort: true\n    },\n    {\n      dataField: \"balance\",\n      text: \"Balance\",\n      sort: true,\n      align: \"center\",\n      headerAlign: \"center\"\n    },\n    {\n      dataField: \"age\",\n      text: \"Age\",\n      sort: true,\n      align: \"center\",\n      headerAlign: \"center\"\n    }\n  ];\n\n  paginationOptions = {\n    // custom: true,\n    paginationSize: 5,\n    pageStartIndex: 1,\n    firstPageText: \"First\",\n    prePageText: \"Back\",\n    nextPageText: \"Next\",\n    lastPageText: \"Last\",\n    nextPageTitle: \"First page\",\n    prePageTitle: \"Pre page\",\n    firstPageTitle: \"Next page\",\n    lastPageTitle: \"Last page\",\n    showTotal: true,\n    totalSize: this.state.userList.length\n  };\n\n  render() {\n    let { userList } = this.state;\n    let { SearchBar } = Search;\n\n    return (\n      <div>\n        <Breadcrumb\n          routeSegments={[\n            { name: \"Dashboard\", path: \"/\" },\n            { name: \"Data Table\", path: \"data-table\" },\n            { name: \"Default Sorted Data Table\" }\n          ]}\n        />\n        <SimpleCard title=\"Default Sorted Data Table\">\n          <BootstrapTable\n            bootstrap4\n            keyField=\"id\"\n            data={userList}\n            columns={this.sortableColumn}\n            defaultSorted={this.defaultSorted}\n            pagination={paginationFactory(this.paginationOptions)}\n            noDataIndication={\"Table is empty\"}\n          />\n        </SimpleCard>\n      </div>\n    );\n  }\n}\n\nexport default DefaultSortedDataTable;\n"]},"metadata":{},"sourceType":"module"}