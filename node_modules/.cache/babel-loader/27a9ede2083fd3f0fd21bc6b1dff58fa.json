{"ast":null,"code":"var _jsxFileName = \"/Users/arjun/Documents/Personal/Test/Theta/UI Theme/gull-admin/react/src/app/views/app/task-manager/todo/TagDialog.jsx\";\nimport React, { Component } from \"react\";\nimport { Modal, FormControl, Button } from \"react-bootstrap\";\nimport { getAllTodoTag, addNewTag, deleteTag } from \"./todoService\";\nimport { generateRandomId } from \"@utils\";\n\nclass TagDialog extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: \"\",\n      tagList: []\n    };\n\n    this.handleChange = event => {\n      if (event.key === \"Enter\") {\n        this.handleAddNewTag();\n      } else {\n        this.setState({\n          name: event.target.value\n        });\n      }\n    };\n\n    this.handleAddNewTag = event => {\n      let {\n        name\n      } = this.state;\n      if (name.trim() !== \"\") addNewTag({\n        id: generateRandomId(),\n        name: name.trim()\n      }).then(({\n        data\n      }) => {\n        this.setState({\n          tagList: data,\n          name: \"\"\n        });\n        this.props.reloadTagList();\n      });\n    };\n\n    this.handleDeleteTag = id => {\n      deleteTag({\n        id,\n        name: this.state.name\n      }).then(({\n        data\n      }) => {\n        this.setState({\n          tagList: data\n        });\n        this.props.reloadTagList();\n      });\n    };\n  }\n\n  componentDidMount() {\n    getAllTodoTag().then(({\n      data\n    }) => {\n      this.setState({\n        tagList: [...data]\n      });\n    });\n  }\n\n  render() {\n    let {\n      open,\n      handleClose\n    } = this.props;\n    let {\n      tagList,\n      name\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Modal, {\n      onHide: handleClose,\n      show: open,\n      size: \"sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"px-3 py-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      onChange: this.handleChange,\n      onKeyDown: this.handleChange,\n      value: name,\n      className: \"flex-grow-1\",\n      placeholder: \"New tag*\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: this.handleAddNewTag,\n      className: \"\",\n      variant: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 15\n      }\n    }, \"Add\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }\n    }, tagList.map((tag, index) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex align-items-center justify-content-between my-2\",\n      key: tag.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }, index + 1), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"text-capitalize\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }\n    }, tag.name), /*#__PURE__*/React.createElement(Button, {\n      onClickCapture: () => this.handleDeleteTag(tag.id),\n      variant: \"danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    }, \"Delete\")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pt-3 text-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: handleClose,\n      variant: \"outline-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }, \"Close\"))));\n  }\n\n}\n\nexport default TagDialog;","map":{"version":3,"sources":["/Users/arjun/Documents/Personal/Test/Theta/UI Theme/gull-admin/react/src/app/views/app/task-manager/todo/TagDialog.jsx"],"names":["React","Component","Modal","FormControl","Button","getAllTodoTag","addNewTag","deleteTag","generateRandomId","TagDialog","state","name","tagList","handleChange","event","key","handleAddNewTag","setState","target","value","trim","id","then","data","props","reloadTagList","handleDeleteTag","componentDidMount","render","open","handleClose","map","tag","index"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Modal, FormControl, Button } from \"react-bootstrap\";\nimport { getAllTodoTag, addNewTag, deleteTag } from \"./todoService\";\nimport { generateRandomId } from \"@utils\";\n\nclass TagDialog extends Component {\n  state = {\n    name: \"\",\n    tagList: []\n  };\n\ncomponentDidMount() {\n  getAllTodoTag().then(({ data }) => {\n    this.setState({\n      tagList: [...data]\n    });\n  });\n}\n\n  handleChange = event => {\n    if (event.key === \"Enter\") {\n      this.handleAddNewTag();\n    } else {\n      this.setState({\n        name: event.target.value\n      });\n    }\n  };\n\n  handleAddNewTag = event => {\n    let { name } = this.state;\n\n    if (name.trim() !== \"\")\n      addNewTag({\n        id: generateRandomId(),\n        name: name.trim()\n      }).then(({ data }) => {\n        this.setState({ tagList: data, name: \"\" });\n        this.props.reloadTagList();\n      });\n  };\n\n  handleDeleteTag = id => {\n    deleteTag({ id, name: this.state.name }).then(({ data }) => {\n      this.setState({ tagList: data });\n      this.props.reloadTagList();\n    });\n  };\n\n  render() {\n    let { open, handleClose } = this.props;\n    let { tagList, name } = this.state;\n\n    return (\n      <Modal onHide={handleClose} show={open} size=\"sm\">\n        <div className=\"px-3 py-4\">\n          <div className=\"d-flex align-items-center\">\n            <FormControl\n              onChange={this.handleChange}\n              onKeyDown={this.handleChange}\n              value={name}\n              className=\"flex-grow-1\"\n              placeholder=\"New tag*\"\n            />\n            <div>\n              <Button\n                onClick={this.handleAddNewTag}\n                className=\"\"\n                variant=\"primary\"\n              >\n                Add\n              </Button>\n            </div>\n          </div>\n          <div className=\"pt-3\">\n            {tagList.map((tag, index) => (\n              <div\n                className=\"d-flex align-items-center justify-content-between my-2\"\n                key={tag.id}\n              >\n                <span>{index + 1}</span>\n                <span className=\"text-capitalize\">{tag.name}</span>\n                <Button\n                  onClickCapture={() => this.handleDeleteTag(tag.id)}\n                  variant=\"danger\"\n                >\n                  Delete\n                </Button>\n              </div>\n            ))}\n          </div>\n          <div className=\"pt-3 text-right\">\n            <Button onClick={handleClose} variant=\"outline-danger\">\n              Close\n            </Button>\n          </div>\n        </div>\n      </Modal>\n    );\n  }\n}\n\nexport default TagDialog;\n"]},"metadata":{},"sourceType":"module"}