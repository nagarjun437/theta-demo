{"ast":null,"code":"import axios from\"axios\";export var GET_PRODUCT_LIST=\"GET_PRODUCT_LIST\";export var GET_CART_LIST=\"GET_CART_LIST\";export var GET_CATEGORY_LIST=\"GET_CATEGORY_LIST\";export var GET_RATING_LIST=\"GET_RATING_LIST\";export var GET_BRAND_LIST=\"GET_BRAND_LIST\";export var ADD_PRODUCT_TO_CART=\"ADD_PRODUCT_TO_CART\";export var DELETE_PRODUCT_FROM_CART=\"DELETE_PRODUCT_FROM_CART\";export var UPDATE_CART_AMOUNT=\"UPDATE_CART_AMOUNT\";export var getProductList=function getProductList(){return function(dispatch){axios.get(\"/api/ecommerce/get-product-list\").then(function(res){dispatch({type:GET_PRODUCT_LIST,payload:res.data});});};};export var getCategoryList=function getCategoryList(){return function(dispatch){axios.get(\"/api/ecommerce/get-category-list\").then(function(res){dispatch({type:GET_CATEGORY_LIST,payload:res.data});});};};export var getRatingList=function getRatingList(){return function(dispatch){axios.get(\"/api/ecommerce/get-rating-list\").then(function(res){dispatch({type:GET_RATING_LIST,payload:res.data});});};};export var getBrandList=function getBrandList(){return function(dispatch){axios.get(\"/api/ecommerce/get-brand-list\").then(function(res){dispatch({type:GET_BRAND_LIST,payload:res.data});});};};export var getCartList=function getCartList(uid){return function(dispatch){axios.get(\"/api/ecommerce/get-cart-list\",{data:uid}).then(function(res){dispatch({type:GET_CART_LIST,payload:res.data});});};};export var addProductToCart=function addProductToCart(uid,productId){return function(dispatch){axios.post(\"/api/ecommerce/add-to-cart\",{uid:uid,productId:productId}).then(function(res){dispatch({type:ADD_PRODUCT_TO_CART,payload:res.data});});};};export var deleteProductFromCart=function deleteProductFromCart(uid,productId){return function(dispatch){axios.post(\"/api/ecommerce/delete-from-cart\",{uid:uid,productId:productId}).then(function(res){dispatch({type:DELETE_PRODUCT_FROM_CART,payload:res.data});});};};export var updateCartAmount=function updateCartAmount(uid,productId,amount){return function(dispatch){axios.post(\"/api/ecommerce/update-cart-amount\",{uid:uid,productId:productId,amount:amount}).then(function(res){dispatch({type:UPDATE_CART_AMOUNT,payload:res.data});});};};","map":{"version":3,"sources":["/Users/arjun/Documents/Personal/Test/Theta/UI Theme/gull-admin/react/src/app/redux/actions/EcommerceActions.js"],"names":["axios","GET_PRODUCT_LIST","GET_CART_LIST","GET_CATEGORY_LIST","GET_RATING_LIST","GET_BRAND_LIST","ADD_PRODUCT_TO_CART","DELETE_PRODUCT_FROM_CART","UPDATE_CART_AMOUNT","getProductList","dispatch","get","then","res","type","payload","data","getCategoryList","getRatingList","getBrandList","getCartList","uid","addProductToCart","productId","post","deleteProductFromCart","updateCartAmount","amount"],"mappings":"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","sourcesContent":["import axios from \"axios\";\n\nexport const GET_PRODUCT_LIST = \"GET_PRODUCT_LIST\";\nexport const GET_CART_LIST = \"GET_CART_LIST\";\nexport const GET_CATEGORY_LIST = \"GET_CATEGORY_LIST\";\nexport const GET_RATING_LIST = \"GET_RATING_LIST\";\nexport const GET_BRAND_LIST = \"GET_BRAND_LIST\";\n\nexport const ADD_PRODUCT_TO_CART = \"ADD_PRODUCT_TO_CART\";\nexport const DELETE_PRODUCT_FROM_CART = \"DELETE_PRODUCT_FROM_CART\";\n\nexport const UPDATE_CART_AMOUNT = \"UPDATE_CART_AMOUNT\";\n\nexport const getProductList = () => dispatch => {\n  axios.get(\"/api/ecommerce/get-product-list\").then(res => {\n    dispatch({\n      type: GET_PRODUCT_LIST,\n      payload: res.data\n    });\n  });\n};\n\nexport const getCategoryList = () => dispatch => {\n  axios.get(\"/api/ecommerce/get-category-list\").then(res => {\n    dispatch({\n      type: GET_CATEGORY_LIST,\n      payload: res.data\n    });\n  });\n};\n\nexport const getRatingList = () => dispatch => {\n  axios.get(\"/api/ecommerce/get-rating-list\").then(res => {\n    dispatch({\n      type: GET_RATING_LIST,\n      payload: res.data\n    });\n  });\n};\n\nexport const getBrandList = () => dispatch => {\n  axios.get(\"/api/ecommerce/get-brand-list\").then(res => {\n    dispatch({\n      type: GET_BRAND_LIST,\n      payload: res.data\n    });\n  });\n};\n\nexport const getCartList = uid => dispatch => {\n  axios.get(\"/api/ecommerce/get-cart-list\", { data: uid }).then(res => {\n    dispatch({\n      type: GET_CART_LIST,\n      payload: res.data\n    });\n  });\n};\n\nexport const addProductToCart = (uid, productId) => dispatch => {\n  axios.post(\"/api/ecommerce/add-to-cart\", { uid, productId }).then(res => {\n    dispatch({\n      type: ADD_PRODUCT_TO_CART,\n      payload: res.data\n    });\n  });\n};\n\nexport const deleteProductFromCart = (uid, productId) => dispatch => {\n  axios\n    .post(\"/api/ecommerce/delete-from-cart\", { uid, productId })\n    .then(res => {\n      dispatch({\n        type: DELETE_PRODUCT_FROM_CART,\n        payload: res.data\n      });\n    });\n};\n\nexport const updateCartAmount = (uid, productId, amount) => dispatch => {\n  axios\n    .post(\"/api/ecommerce/update-cart-amount\", { uid, productId, amount })\n    .then(res => {\n      dispatch({\n        type: UPDATE_CART_AMOUNT,\n        payload: res.data\n      });\n    });\n};\n"]},"metadata":{},"sourceType":"module"}