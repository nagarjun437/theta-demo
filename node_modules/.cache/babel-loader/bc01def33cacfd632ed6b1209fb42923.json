{"ast":null,"code":"var _jsxFileName = \"/Users/arjun/Documents/Personal/Test/Theta/UI Theme/gull-admin/react/src/app/GullLayout/Layout2/Layout2Sidenav.jsx\";\nimport React, { Component } from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport { navigations } from \"../../navigations\";\nimport { merge } from \"lodash\";\nimport { classList, isMobile } from \"@utils\";\nimport Srcollbar from \"react-perfect-scrollbar\";\nimport { DropDownMenu } from \"@gull\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { setLayoutSettings } from \"app/redux/actions/LayoutActions\";\nimport { logoutUser } from \"app/redux/actions/UserActions\";\nimport { withRouter } from \"react-router-dom\";\n\nclass Layout2Sidenav extends Component {\n  constructor(...args) {\n    super(...args);\n    this.windowListener = null;\n    this.state = {\n      selectedItem: {},\n      navOpen: true,\n      secondaryNavOpen: false\n    };\n\n    this.onMainItemMouseEnter = item => {\n      this.setSelected(item);\n    };\n\n    this.findSelecteditem = () => {\n      navigations.forEach(item => {\n        if (item.sub) {\n          item.sub.forEach(child => {\n            if (child.sub) {\n              child.sub.forEach(grandChild => {\n                if (grandChild.path == this.props.history.location.pathname) {\n                  this.setSelected(item);\n                }\n              });\n            } else {\n              if (child.path == this.props.history.location.pathname) {\n                this.setSelected(item);\n              }\n            }\n          });\n        } else {\n          if (item.path == this.props.history.location.pathname) {\n            this.setSelected(item);\n          }\n        }\n      });\n    };\n\n    this.onMainItemMouseLeave = () => {};\n\n    this.setSelected = selectedItem => {\n      this.setState({\n        selectedItem\n      }); // console.log(selectedItem);\n    };\n\n    this.removeSelected = () => {\n      this.setState({\n        selectedItem: null\n      }); // console.log('removed');\n    };\n\n    this.closeSecNav = () => {\n      // console.log(\"closing sec sidenav\");\n      let {\n        setLayoutSettings,\n        settings\n      } = this.props;\n      let other = {};\n\n      if (isMobile()) {\n        other.open = false;\n      }\n\n      setLayoutSettings(merge({}, settings, {\n        layout2Settings: {\n          leftSidebar: { ...other,\n            secondaryNavOpen: false\n          }\n        }\n      }));\n    };\n\n    this.openSecNav = () => {\n      let {\n        setLayoutSettings,\n        settings\n      } = this.props;\n      setLayoutSettings(merge({}, settings, {\n        layout2Settings: {\n          leftSidebar: {\n            open: true,\n            secondaryNavOpen: true\n          }\n        }\n      }));\n    };\n  }\n\n  componentDidMount() {\n    setTimeout(() => {\n      this.findSelecteditem();\n    });\n    if (window) if (window.innerWidth < 1200) {\n      this.closeSecNav();\n    } else {\n      this.openSecNav();\n    }\n    this.windowListener = window.addEventListener(\"resize\", () => {\n      if (window.innerWidth < 1200) {\n        this.closeSecNav();\n      } else {\n        this.openSecNav();\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    if (this.windowListener) {\n      window.removeEventListener(\"resize\", this.windowListener);\n    }\n  }\n\n  render() {\n    let {\n      settings\n    } = this.props;\n    let {\n      selectedItem\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"side-content-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Srcollbar, {\n      className: classList({\n        \"sidebar-left o-hidden rtl-ps-none\": true,\n        open: settings.layout2Settings.leftSidebar.open\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"navigation-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }\n    }, navigations.map((item, i) => /*#__PURE__*/React.createElement(\"li\", {\n      className: classList({\n        \"nav-item\": true,\n        active: item.name === selectedItem.name\n      }),\n      onMouseEnter: () => {\n        this.onMainItemMouseEnter(item);\n      },\n      onMouseLeave: this.onMainItemMouseLeave,\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 15\n      }\n    }, item.path && item.type !== \"extLink\" && /*#__PURE__*/React.createElement(NavLink, {\n      className: \"nav-item-hold\",\n      to: item.path,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: `nav-icon ${item.icon}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"nav-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 21\n      }\n    }, item.name)), item.path && item.type === \"extLink\" && /*#__PURE__*/React.createElement(\"a\", {\n      className: \"nav-item-hold\",\n      href: item.path,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: `nav-icon ${item.icon}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"nav-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 21\n      }\n    }, item.name)), !item.path && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"nav-item-hold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: `nav-icon ${item.icon}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"nav-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 21\n      }\n    }, item.name)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"triangle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }\n    }))))), /*#__PURE__*/React.createElement(Srcollbar, {\n      className: classList({\n        \"sidebar-left-secondary o-hidden rtl-ps-none\": true,\n        open: settings.layout2Settings.leftSidebar.secondaryNavOpen\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"sidebar-close i-Close\",\n      onClick: this.closeSecNav,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"logo ml-4 mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"/assets/images/logo-text.png\",\n      alt: \"logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header mb-3 ml-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"font-weight-bold mb-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 13\n      }\n    }, selectedItem.name), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 13\n      }\n    }, selectedItem.description)), selectedItem && selectedItem.sub && /*#__PURE__*/React.createElement(DropDownMenu, {\n      menu: selectedItem.sub,\n      closeSecSidenav: this.closeSecNav,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: classList({\n        \"sidebar-overlay\": true,\n        open: settings.layout2Settings.leftSidebar.secondaryNavOpen\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nLayout2Sidenav.propTypes = {\n  setLayoutSettings: PropTypes.func.isRequired,\n  settings: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  setLayoutSettings: PropTypes.func.isRequired,\n  settings: state.layout.settings\n});\n\nexport default withRouter(connect(mapStateToProps, {\n  setLayoutSettings\n})(Layout2Sidenav));","map":{"version":3,"sources":["/Users/arjun/Documents/Personal/Test/Theta/UI Theme/gull-admin/react/src/app/GullLayout/Layout2/Layout2Sidenav.jsx"],"names":["React","Component","Link","NavLink","navigations","merge","classList","isMobile","Srcollbar","DropDownMenu","PropTypes","connect","setLayoutSettings","logoutUser","withRouter","Layout2Sidenav","windowListener","state","selectedItem","navOpen","secondaryNavOpen","onMainItemMouseEnter","item","setSelected","findSelecteditem","forEach","sub","child","grandChild","path","props","history","location","pathname","onMainItemMouseLeave","setState","removeSelected","closeSecNav","settings","other","open","layout2Settings","leftSidebar","openSecNav","componentDidMount","setTimeout","window","innerWidth","addEventListener","componentWillUnmount","removeEventListener","render","map","i","active","name","type","icon","description","propTypes","func","isRequired","object","mapStateToProps","layout"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport { navigations } from \"../../navigations\";\nimport { merge } from \"lodash\";\nimport { classList, isMobile } from \"@utils\";\nimport Srcollbar from \"react-perfect-scrollbar\";\nimport { DropDownMenu } from \"@gull\";\n\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport {\n  setLayoutSettings\n} from \"app/redux/actions/LayoutActions\";\nimport { logoutUser } from \"app/redux/actions/UserActions\";\nimport { withRouter } from \"react-router-dom\";\n\nclass Layout2Sidenav extends Component {\n  windowListener = null;\n  state = {\n    selectedItem: {},\n    navOpen: true,\n    secondaryNavOpen: false\n  };\n\n  onMainItemMouseEnter = item => {\n    this.setSelected(item);\n  };\n\n  findSelecteditem = () => {\n    navigations.forEach(item => {\n      if (item.sub) {\n        item.sub.forEach(child => {\n          if (child.sub) {\n            child.sub.forEach(grandChild => {\n              if (grandChild.path == this.props.history.location.pathname) {\n                this.setSelected(item);\n              }\n            });\n          } else {\n            if (child.path == this.props.history.location.pathname) {\n              this.setSelected(item);\n            }\n          }\n        });\n      } else {\n        if (item.path == this.props.history.location.pathname) {\n          this.setSelected(item);\n        }\n      }\n    });\n  };\n\n  onMainItemMouseLeave = () => {};\n\n  setSelected = selectedItem => {\n    this.setState({ selectedItem });\n    // console.log(selectedItem);\n  };\n\n  removeSelected = () => {\n    this.setState({ selectedItem: null });\n    // console.log('removed');\n  };\n\n  closeSecNav = () => {\n    // console.log(\"closing sec sidenav\");\n    let { setLayoutSettings, settings } = this.props;\n    let other = {};\n\n    if (isMobile()) {\n      other.open = false;\n    }\n\n    setLayoutSettings(\n      merge({}, settings, {\n        layout2Settings: {\n          leftSidebar: {\n            ...other,\n            secondaryNavOpen: false\n          }\n        }\n      })\n    );\n  };\n\n  openSecNav = () => {\n    let { setLayoutSettings, settings } = this.props;\n    setLayoutSettings(\n      merge({}, settings, {\n        layout2Settings: {\n          leftSidebar: {\n            open: true,\n            secondaryNavOpen: true\n          }\n        }\n      })\n    );\n  };\n\n  componentDidMount() {\n    setTimeout(() => {\n      this.findSelecteditem();\n    })\n    if (window)\n      if (window.innerWidth < 1200) {\n        this.closeSecNav();\n      } else {\n        this.openSecNav();\n      }\n\n    this.windowListener = window.addEventListener(\"resize\", () => {\n      if (window.innerWidth < 1200) {\n        this.closeSecNav();\n      } else {\n        this.openSecNav();\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    if (this.windowListener) {\n      window.removeEventListener(\"resize\", this.windowListener);\n    }\n  }\n\n  render() {\n    let { settings } = this.props;\n    let { selectedItem } = this.state;\n\n    return (\n      <div className=\"side-content-wrap\">\n        <Srcollbar\n          className={classList({\n            \"sidebar-left o-hidden rtl-ps-none\": true,\n            open: settings.layout2Settings.leftSidebar.open\n          })}\n        >\n          <ul className=\"navigation-left\">\n            {navigations.map((item, i) => (\n              <li\n                className={classList({\n                  \"nav-item\": true,\n                  active: item.name === selectedItem.name\n                })}\n                onMouseEnter={() => {\n                  this.onMainItemMouseEnter(item);\n                }}\n                onMouseLeave={this.onMainItemMouseLeave}\n                key={i}\n              >\n                {item.path && item.type !== \"extLink\" && (\n                  <NavLink className=\"nav-item-hold\" to={item.path}>\n                    <i className={`nav-icon ${item.icon}`}></i>\n                    <span className=\"nav-text\">{item.name}</span>\n                  </NavLink>\n                )}\n                {item.path && item.type === \"extLink\" && (\n                  <a className=\"nav-item-hold\" href={item.path}>\n                    <i className={`nav-icon ${item.icon}`}></i>\n                    <span className=\"nav-text\">{item.name}</span>\n                  </a>\n                )}\n                {!item.path && (\n                  <div className=\"nav-item-hold\">\n                    <i className={`nav-icon ${item.icon}`}></i>\n                    <span className=\"nav-text\">{item.name}</span>\n                  </div>\n                )}\n                <div className=\"triangle\"></div>\n              </li>\n            ))}\n          </ul>\n        </Srcollbar>\n\n        <Srcollbar\n          className={classList({\n            \"sidebar-left-secondary o-hidden rtl-ps-none\": true,\n            open: settings.layout2Settings.leftSidebar.secondaryNavOpen\n          })}\n        >\n          <i className=\"sidebar-close i-Close\" onClick={this.closeSecNav}></i>\n          <div className=\"logo ml-4 mb-4\">\n            <img src=\"/assets/images/logo-text.png\" alt=\"logo\" />\n          </div>\n          <div className=\"header mb-3 ml-4\">\n            <h5 className=\"font-weight-bold mb-1\">{selectedItem.name}</h5>\n            <p>{selectedItem.description}</p>\n          </div>\n          {selectedItem && selectedItem.sub && (\n            <DropDownMenu\n              menu={selectedItem.sub}\n              closeSecSidenav={this.closeSecNav}\n            ></DropDownMenu>\n          )}\n        </Srcollbar>\n        <div\n          className={classList({\n            \"sidebar-overlay\": true,\n            open: settings.layout2Settings.leftSidebar.secondaryNavOpen\n          })}\n        ></div>\n      </div>\n    );\n  }\n}\n\nLayout2Sidenav.propTypes = {\n  setLayoutSettings: PropTypes.func.isRequired,\n  settings: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  setLayoutSettings: PropTypes.func.isRequired,\n  settings: state.layout.settings\n});\n\nexport default withRouter(\n  connect(mapStateToProps, {\n    setLayoutSettings\n  })(Layout2Sidenav)\n);\n"]},"metadata":{},"sourceType":"module"}