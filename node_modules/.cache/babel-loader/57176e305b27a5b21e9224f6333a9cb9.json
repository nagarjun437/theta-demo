{"ast":null,"code":"var _jsxFileName = \"/Users/arjun/Documents/Personal/Test/Theta/UI Theme/theta-demo/src/app/views/app/calendar/CalendarEventDialog.jsx\";\nimport React from \"react\";\nimport { Modal, Form, FormGroup, FormLabel, FormControl, Col, Card, Button } from \"react-bootstrap\";\nimport { Formik } from \"formik\";\nimport DatePicker from \"react-datepicker\";\nimport { CirclePicker } from \"react-color\";\nimport * as yup from \"yup\";\n\nconst CalendarEventDialog = ({\n  open,\n  eventObject,\n  handleSubmit,\n  handleDeleteEvent,\n  closeDialog\n}) => {\n  const handleFormSubmit = values => {\n    handleSubmit(values);\n  };\n\n  return /*#__PURE__*/React.createElement(Modal, {\n    show: open,\n    centered: true,\n    size: \"lg\",\n    className: \"d-flex justify-content-center mx-auto\",\n    style: {\n      maxWidth: \"500px\"\n    },\n    onHide: closeDialog,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    enableReinitialize: true,\n    initialValues: eventObject,\n    onSubmit: handleFormSubmit,\n    validationSchema: eventSchema,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, ({\n    values,\n    errors,\n    touched,\n    handleChange,\n    handleBlur,\n    handleSubmit,\n    isSubmitting,\n    setSubmitting,\n    setFieldValue\n  }) => {\n    return /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      className: \"bg-primary text-white d-flex flex-wrap justify-content-between align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"m-0 text-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }\n    }, \"New Event\"), /*#__PURE__*/React.createElement(\"i\", {\n      className: \"i-Close-Window cursor-pointer text-18\",\n      onClick: closeDialog,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }\n    }, \"Title\"), /*#__PURE__*/React.createElement(FormControl, {\n      type: \"text\",\n      name: \"title\",\n      className: \"mb-3\",\n      onChange: handleChange,\n      onBlur: handleBlur,\n      value: values.title,\n      isInvalid: errors.title && touched.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      as: Col,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 23\n      }\n    }, \"Start Date\"), /*#__PURE__*/React.createElement(DatePicker, {\n      className: \"form-control mb-1 w-100\",\n      dateFormat: \"dd/MM/yyyy\",\n      selected: values.start ? new Date(values.start) : new Date(),\n      onChange: date => {\n        setFieldValue(\"start\", date);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      as: Col,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 23\n      }\n    }, \"End Date\"), /*#__PURE__*/React.createElement(DatePicker, {\n      className: \"form-control mb-1\",\n      dateFormat: \"dd/MM/yyyy\",\n      selected: values.end ? new Date(values.end) : new Date(),\n      onChange: date => {\n        setFieldValue(\"end\", date);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 23\n      }\n    }))), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"checkbox checkbox-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      name: \"allDay\",\n      value: values.allDay,\n      checked: values.allDay,\n      onChange: handleChange,\n      onBlur: handleBlur // required\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 23\n      }\n    }, \"All day\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"checkmark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 23\n      }\n    }))), /*#__PURE__*/React.createElement(CirclePicker, {\n      className: \"w-100 mb-4\",\n      color: values.color,\n      onChangeComplete: ({\n        hex\n      }) => setFieldValue(\"color\", hex),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-between\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      variant: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 21\n      }\n    }, \"Save\"), /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      variant: \"danger\",\n      onClick: () => handleDeleteEvent(values.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"i-Delete-File\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 23\n      }\n    }, \" \"), \"Delete\")))));\n  }));\n};\n\nconst eventSchema = yup.object().shape({\n  title: yup.string().required(\"Title is required\"),\n  start: yup.string().required(\"Start date is required\")\n});\nexport default CalendarEventDialog;","map":{"version":3,"sources":["/Users/arjun/Documents/Personal/Test/Theta/UI Theme/theta-demo/src/app/views/app/calendar/CalendarEventDialog.jsx"],"names":["React","Modal","Form","FormGroup","FormLabel","FormControl","Col","Card","Button","Formik","DatePicker","CirclePicker","yup","CalendarEventDialog","open","eventObject","handleSubmit","handleDeleteEvent","closeDialog","handleFormSubmit","values","maxWidth","eventSchema","errors","touched","handleChange","handleBlur","isSubmitting","setSubmitting","setFieldValue","title","start","Date","date","end","allDay","color","hex","id","object","shape","string","required"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  Modal,\n  Form,\n  FormGroup,\n  FormLabel,\n  FormControl,\n  Col,\n  Card,\n  Button\n} from \"react-bootstrap\";\nimport { Formik } from \"formik\";\nimport DatePicker from \"react-datepicker\";\nimport { CirclePicker } from \"react-color\";\nimport * as yup from \"yup\";\n\nconst CalendarEventDialog = ({\n  open,\n  eventObject,\n  handleSubmit,\n  handleDeleteEvent,\n  closeDialog\n}) => {\n  const handleFormSubmit = values => {\n    handleSubmit(values);\n  };\n\n  return (\n    <Modal\n      show={open}\n      centered={true}\n      size=\"lg\"\n      className=\"d-flex justify-content-center mx-auto\"\n      style={{ maxWidth: \"500px\" }}\n      onHide={closeDialog}\n    >\n      <Formik\n        enableReinitialize={true}\n        initialValues={eventObject}\n        onSubmit={handleFormSubmit}\n        validationSchema={eventSchema}\n      >\n        {({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          isSubmitting,\n          setSubmitting,\n          setFieldValue\n        }) => {\n          return (\n            <Card>\n              <Card.Header className=\"bg-primary text-white d-flex flex-wrap justify-content-between align-items-center\">\n                <h4 className=\"m-0 text-white\">New Event</h4>\n                <i\n                  className=\"i-Close-Window cursor-pointer text-18\"\n                  onClick={closeDialog}\n                ></i>\n              </Card.Header>\n              <Card.Body>\n                <Form onSubmit={handleSubmit}>\n                  <FormGroup>\n                    <FormLabel>Title</FormLabel>\n                    <FormControl\n                      type=\"text\"\n                      name=\"title\"\n                      className=\"mb-3\"\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      value={values.title}\n                      isInvalid={errors.title && touched.title}\n                    />\n                  </FormGroup>\n                  <Form.Row>\n                    <FormGroup as={Col}>\n                      <FormLabel>Start Date</FormLabel>\n                      <DatePicker\n                        className=\"form-control mb-1 w-100\"\n                        dateFormat=\"dd/MM/yyyy\"\n                        selected={\n                          values.start ? new Date(values.start) : new Date()\n                        }\n                        onChange={date => {\n                          setFieldValue(\"start\", date);\n                        }}\n                      />\n                    </FormGroup>\n                    <FormGroup as={Col}>\n                      <FormLabel>End Date</FormLabel>\n                      <DatePicker\n                        className=\"form-control mb-1\"\n                        dateFormat=\"dd/MM/yyyy\"\n                        selected={\n                          values.end ? new Date(values.end) : new Date()\n                        }\n                        onChange={date => {\n                          setFieldValue(\"end\", date);\n                        }}\n                      />\n                    </FormGroup>\n                  </Form.Row>\n                  <p>\n                    <label className=\"checkbox checkbox-primary\">\n                      <input\n                        type=\"checkbox\"\n                        name=\"allDay\"\n                        value={values.allDay}\n                        checked={values.allDay}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        // required\n                      />\n                      <span>All day</span>\n                      <span className=\"checkmark\"></span>\n                    </label>\n                  </p>\n                  <CirclePicker\n                    className=\"w-100 mb-4\"\n                    color={values.color}\n                    onChangeComplete={({ hex }) => setFieldValue(\"color\", hex)}\n                  />\n                  <div className=\"d-flex justify-content-between\">\n                    <Button type=\"submit\" variant=\"primary\">\n                      Save\n                    </Button>\n                    <Button\n                      type=\"button\"\n                      variant=\"danger\"\n                      onClick={() => handleDeleteEvent(values.id)}\n                    >\n                      <i className=\"i-Delete-File\"> </i>\n                      Delete\n                    </Button>\n                  </div>\n                </Form>\n              </Card.Body>\n            </Card>\n          );\n        }}\n      </Formik>\n    </Modal>\n  );\n};\n\nconst eventSchema = yup.object().shape({\n  title: yup.string().required(\"Title is required\"),\n  start: yup.string().required(\"Start date is required\")\n});\n\nexport default CalendarEventDialog;\n"]},"metadata":{},"sourceType":"module"}