{"ast":null,"code":"import React from\"react\";import ReactQuill from\"react-quill\";/*\n * Simple editor component that takes placeholder text as a prop\n */var RichTextEditor=function RichTextEditor(_ref){var content=_ref.content,placeholder=_ref.placeholder,handleContentChange=_ref.handleContentChange,_ref$theme=_ref.theme,theme=_ref$theme===void 0?\"snow\":_ref$theme,_ref$modules=_ref.modules,modules=_ref$modules===void 0?RichTextEditor.modules:_ref$modules;return/*#__PURE__*/React.createElement(ReactQuill,{theme:theme,onChange:handleContentChange,value:content,modules:modules,formats:RichTextEditor.formats,placeholder:placeholder});};/*\n * Quill modules to attach to editor\n * See https://quilljs.com/docs/modules/ for complete options\n */RichTextEditor.modules={toolbar:[[{font:[]}],[{size:[\"small\",false,\"large\",\"huge\"]}],// custom dropdown\n[{header:[1,2,3,4,5,6,false]}],[\"bold\",\"italic\",\"underline\",\"strike\"],// toggled buttons\n[\"blockquote\",\"code-block\",\"link\"],[{script:\"sub\"},{script:\"super\"}],// superscript/subscript\n[{color:[]},{background:[]}],// dropdown with defaults from theme\n[{align:[]}],[\"image\",\"video\"],[{header:1},{header:2}],// custom button values\n[{list:\"ordered\"},{list:\"bullet\"}],[{indent:\"-1\"},{indent:\"+1\"}],// outdent/indent\n[{direction:\"rtl\"}],// text direction\n[\"clean\"]],clipboard:{// toggle to add extra line breaks when pasting HTML:\nmatchVisual:true}};/*\n * Quill editor formats\n * See https://quilljs.com/docs/formats/\n */RichTextEditor.formats=[\"align\",\"background\",\"bold\",\"blockquote\",\"bullet\",\"color\",\"code\",\"code-block\",\"clean\",\"direction\",\"font\",\"header\",\"italic\",\"indent\",\"image\",\"list\",\"link\",\"size\",\"strike\",\"script\",\"underline\",\"video\"];/*\n * PropType validation\n */export default RichTextEditor;","map":{"version":3,"sources":["/Users/arjun/Documents/Personal/Test/Theta/UI Theme/gull-admin/react/src/@gull/components/RichTextEditor.jsx"],"names":["React","ReactQuill","RichTextEditor","content","placeholder","handleContentChange","theme","modules","formats","toolbar","font","size","header","script","color","background","align","list","indent","direction","clipboard","matchVisual"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,MAAOC,CAAAA,UAAP,KAAuB,aAAvB,CAEA;AACA;AACA,GAEA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,MAMjB,IALJC,CAAAA,OAKI,MALJA,OAKI,CAJJC,WAII,MAJJA,WAII,CAHJC,mBAGI,MAHJA,mBAGI,iBAFJC,KAEI,CAFJA,KAEI,qBAFI,MAEJ,8BADJC,OACI,CADJA,OACI,uBADML,cAAc,CAACK,OACrB,cACJ,mBACE,oBAAC,UAAD,EACE,KAAK,CAAED,KADT,CAEE,QAAQ,CAAED,mBAFZ,CAGE,KAAK,CAAEF,OAHT,CAIE,OAAO,CAAEI,OAJX,CAKE,OAAO,CAAEL,cAAc,CAACM,OAL1B,CAME,WAAW,CAAEJ,WANf,EADF,CAUD,CAjBD,CAmBA;AACA;AACA;AACA,GACAF,cAAc,CAACK,OAAf,CAAyB,CACvBE,OAAO,CAAE,CACP,CAAC,CAAEC,IAAI,CAAE,EAAR,CAAD,CADO,CAEP,CAAC,CAAEC,IAAI,CAAE,CAAC,OAAD,CAAU,KAAV,CAAiB,OAAjB,CAA0B,MAA1B,CAAR,CAAD,CAFO,CAEwC;AAC/C,CAAC,CAAEC,MAAM,CAAE,CAAC,CAAD,CAAI,CAAJ,CAAO,CAAP,CAAU,CAAV,CAAa,CAAb,CAAgB,CAAhB,CAAmB,KAAnB,CAAV,CAAD,CAHO,CAKP,CAAC,MAAD,CAAS,QAAT,CAAmB,WAAnB,CAAgC,QAAhC,CALO,CAKoC;AAC3C,CAAC,YAAD,CAAe,YAAf,CAA6B,MAA7B,CANO,CAQP,CAAC,CAAEC,MAAM,CAAE,KAAV,CAAD,CAAoB,CAAEA,MAAM,CAAE,OAAV,CAApB,CARO,CAQmC;AAC1C,CAAC,CAAEC,KAAK,CAAE,EAAT,CAAD,CAAgB,CAAEC,UAAU,CAAE,EAAd,CAAhB,CATO,CAS8B;AACrC,CAAC,CAAEC,KAAK,CAAE,EAAT,CAAD,CAVO,CAYP,CAAC,OAAD,CAAU,OAAV,CAZO,CAcP,CAAC,CAAEJ,MAAM,CAAE,CAAV,CAAD,CAAgB,CAAEA,MAAM,CAAE,CAAV,CAAhB,CAdO,CAcyB;AAChC,CAAC,CAAEK,IAAI,CAAE,SAAR,CAAD,CAAsB,CAAEA,IAAI,CAAE,QAAR,CAAtB,CAfO,CAgBP,CAAC,CAAEC,MAAM,CAAE,IAAV,CAAD,CAAmB,CAAEA,MAAM,CAAE,IAAV,CAAnB,CAhBO,CAgB+B;AACtC,CAAC,CAAEC,SAAS,CAAE,KAAb,CAAD,CAjBO,CAiBiB;AAExB,CAAC,OAAD,CAnBO,CADc,CAsBvBC,SAAS,CAAE,CACT;AACAC,WAAW,CAAE,IAFJ,CAtBY,CAAzB,CA4BA;AACA;AACA;AACA,GACAnB,cAAc,CAACM,OAAf,CAAyB,CACvB,OADuB,CAEvB,YAFuB,CAGvB,MAHuB,CAIvB,YAJuB,CAKvB,QALuB,CAMvB,OANuB,CAOvB,MAPuB,CAQvB,YARuB,CASvB,OATuB,CAUvB,WAVuB,CAWvB,MAXuB,CAYvB,QAZuB,CAavB,QAbuB,CAcvB,QAduB,CAevB,OAfuB,CAgBvB,MAhBuB,CAiBvB,MAjBuB,CAkBvB,MAlBuB,CAmBvB,QAnBuB,CAoBvB,QApBuB,CAqBvB,WArBuB,CAsBvB,OAtBuB,CAAzB,CAyBA;AACA;AACA,GAKA,cAAeN,CAAAA,cAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ReactQuill from \"react-quill\";\n\n/*\n * Simple editor component that takes placeholder text as a prop\n */\n\nconst RichTextEditor = ({\n  content,\n  placeholder,\n  handleContentChange,\n  theme = \"snow\",\n  modules = RichTextEditor.modules\n}) => {\n  return (\n    <ReactQuill\n      theme={theme}\n      onChange={handleContentChange}\n      value={content}\n      modules={modules}\n      formats={RichTextEditor.formats}\n      placeholder={placeholder}\n    />\n  );\n};\n\n/*\n * Quill modules to attach to editor\n * See https://quilljs.com/docs/modules/ for complete options\n */\nRichTextEditor.modules = {\n  toolbar: [\n    [{ font: [] }],\n    [{ size: [\"small\", false, \"large\", \"huge\"] }], // custom dropdown\n    [{ header: [1, 2, 3, 4, 5, 6, false] }],\n\n    [\"bold\", \"italic\", \"underline\", \"strike\"], // toggled buttons\n    [\"blockquote\", \"code-block\", \"link\"],\n\n    [{ script: \"sub\" }, { script: \"super\" }], // superscript/subscript\n    [{ color: [] }, { background: [] }], // dropdown with defaults from theme\n    [{ align: [] }],\n\n    [\"image\", \"video\"],\n\n    [{ header: 1 }, { header: 2 }], // custom button values\n    [{ list: \"ordered\" }, { list: \"bullet\" }],\n    [{ indent: \"-1\" }, { indent: \"+1\" }], // outdent/indent\n    [{ direction: \"rtl\" }], // text direction\n\n    [\"clean\"]\n  ],\n  clipboard: {\n    // toggle to add extra line breaks when pasting HTML:\n    matchVisual: true\n  }\n};\n\n/*\n * Quill editor formats\n * See https://quilljs.com/docs/formats/\n */\nRichTextEditor.formats = [\n  \"align\",\n  \"background\",\n  \"bold\",\n  \"blockquote\",\n  \"bullet\",\n  \"color\",\n  \"code\",\n  \"code-block\",\n  \"clean\",\n  \"direction\",\n  \"font\",\n  \"header\",\n  \"italic\",\n  \"indent\",\n  \"image\",\n  \"list\",\n  \"link\",\n  \"size\",\n  \"strike\",\n  \"script\",\n  \"underline\",\n  \"video\"\n];\n\n/*\n * PropType validation\n */\nRichTextEditor.propTypes = {\n  placeholder: PropTypes.string\n};\n\nexport default RichTextEditor;\n"]},"metadata":{},"sourceType":"module"}