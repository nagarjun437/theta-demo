{"ast":null,"code":"import React from\"react\";import{Modal,FormGroup,FormControl,FormLabel,Row,Form}from\"react-bootstrap\";import{Formik}from\"formik\";import*as yup from\"yup\";import DatePicker from\"react-datepicker\";var ContactEditor2=function ContactEditor2(_ref){var show=_ref.show,initialValues=_ref.initialValues,toggleEditorDialog=_ref.toggleEditorDialog,handleFormSubmit=_ref.handleFormSubmit;return/*#__PURE__*/React.createElement(Modal,{show:show,onHide:toggleEditorDialog,centered:true},/*#__PURE__*/React.createElement(\"div\",{className:\"modal-header\"},/*#__PURE__*/React.createElement(\"h5\",{className:\"modal-title\",id:\"exampleModalLabel\"},initialValues?\"Update\":\"New\",\" Contact\"),/*#__PURE__*/React.createElement(\"button\",{type:\"button\",className:\"close\",\"aria-label\":\"Close\",onClick:function onClick(){return toggleEditorDialog(false);}},/*#__PURE__*/React.createElement(\"span\",{\"aria-hidden\":\"true\"},\"\\xD7\"))),/*#__PURE__*/React.createElement(\"div\",{className:\"modal-body\"},/*#__PURE__*/React.createElement(Formik,{initialValues:initialValues?initialValues:{name:\"\",email:\"\",phone:\"\",note:\"\",age:\"\",balance:\"\",bd:new Date(),role:\"developer\"},validationSchema:contactSchema,enableReinitialize:true,onSubmit:handleFormSubmit},function(_ref2){var values=_ref2.values,errors=_ref2.errors,touched=_ref2.touched,handleChange=_ref2.handleChange,handleBlur=_ref2.handleBlur,handleSubmit=_ref2.handleSubmit,isSubmitting=_ref2.isSubmitting,setFieldValue=_ref2.setFieldValue;return/*#__PURE__*/React.createElement(\"form\",{onSubmit:handleSubmit,className:\"position-relative\"},/*#__PURE__*/React.createElement(Form.Row,{className:\"mb-3\"},/*#__PURE__*/React.createElement(FormLabel,{column:true,sm:2},\"Name\"),/*#__PURE__*/React.createElement(FormControl,{className:\"col-sm-10\",placeholder:\"Name\",name:\"name\",onChange:handleChange,onBlur:handleBlur,isInvalid:errors.name&&touched.name,value:values.name})),/*#__PURE__*/React.createElement(Form.Row,{className:\"mb-3\"},/*#__PURE__*/React.createElement(FormLabel,{column:true,sm:2},\"Email\"),/*#__PURE__*/React.createElement(FormControl,{className:\"col-sm-10\",placeholder:\"Email\",name:\"email\",onChange:handleChange,onBlur:handleBlur,isInvalid:errors.email&&touched.email,value:values.email})),/*#__PURE__*/React.createElement(Form.Row,{className:\"mb-3\"},/*#__PURE__*/React.createElement(FormLabel,{column:true,sm:2},\"Phone\"),/*#__PURE__*/React.createElement(FormControl,{className:\"col-sm-10\",placeholder:\"Phone\",name:\"phone\",onChange:handleChange,onBlur:handleBlur,isInvalid:errors.phone&&touched.phone,value:values.phone})),/*#__PURE__*/React.createElement(Form.Row,{className:\"mb-3\"},/*#__PURE__*/React.createElement(FormLabel,{column:true,sm:2},\"Age\"),/*#__PURE__*/React.createElement(FormControl,{className:\"col-sm-10\",placeholder:\"Age\",name:\"age\",type:\"number\",onChange:handleChange,onBlur:handleBlur,isInvalid:errors.age&&touched.age,value:values.age})),/*#__PURE__*/React.createElement(Form.Row,{className:\"mb-3\"},/*#__PURE__*/React.createElement(FormLabel,{column:true,sm:2},\"Balance\"),/*#__PURE__*/React.createElement(FormControl,{className:\"col-sm-10\",placeholder:\"$1230\",name:\"balance\",type:\"number\",onChange:handleChange,onBlur:handleBlur,isInvalid:errors.balance&&touched.balance,value:values.balance})),/*#__PURE__*/React.createElement(Form.Row,null,/*#__PURE__*/React.createElement(FormLabel,{column:true,sm:2},\"Join\"),\"``\",/*#__PURE__*/React.createElement(DatePicker,{className:\"form-control mb-3\",dateFormat:\"dd/MM/yyyy\",selected:new Date(values.bd),onChange:function onChange(date){setFieldValue(\"bd\",date);}})),/*#__PURE__*/React.createElement(\"fieldset\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col-form-label col-sm-2 pt-0\"},\"Role\"),/*#__PURE__*/React.createElement(\"div\",{className:\"col-sm-10\"},/*#__PURE__*/React.createElement(\"div\",{className:\"form-check\"},/*#__PURE__*/React.createElement(\"input\",{className:\"form-check-input\",type:\"radio\",name:\"role\",value:\"developer\",onChange:handleChange,checked:\"developer\".match(values.role),id:\"developer\"}),/*#__PURE__*/React.createElement(\"label\",{className:\"form-check-label ml-3\",htmlFor:\"developer\"},\"Developer\")),/*#__PURE__*/React.createElement(\"div\",{className:\"form-check\"},/*#__PURE__*/React.createElement(\"input\",{className:\"form-check-input\",type:\"radio\",name:\"role\",value:\"designer\",onChange:handleChange,checked:\"designer\".match(values.role),id:\"designer\"}),/*#__PURE__*/React.createElement(\"label\",{className:\"form-check-label ml-3\",htmlFor:\"designer\"},\"Designer\")),/*#__PURE__*/React.createElement(\"div\",{className:\"form-check\"},/*#__PURE__*/React.createElement(\"input\",{className:\"form-check-input\",type:\"radio\",name:\"role\",value:\"manager\",onChange:handleChange,checked:\"manager\".match(values.role),id:\"manager\"}),/*#__PURE__*/React.createElement(\"label\",{className:\"form-check-label ml-3\",htmlFor:\"manager\"},\"Manager\"))))),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col-sm-10\"},/*#__PURE__*/React.createElement(\"button\",{type:\"submit\",className:\"btn btn-success\"},\"Save Changes\"))));})));};var contactSchema=yup.object().shape({name:yup.string().required(\"title is required\"),email:yup.string().email().required(\"note is required\"),phone:yup.string().required(\"note is required\"),age:yup.number().required(\"note is required\"),balance:yup.number().required(\"note is required\"),bd:yup.string().required(\"note is required\"),role:yup.string().required(\"note is required\")});export default ContactEditor2;","map":{"version":3,"sources":["/Users/arjun/Documents/Personal/Test/Theta/UI Theme/theta-demo/src/app/views/app/contact/ContactEditor2.jsx"],"names":["React","Modal","FormGroup","FormControl","FormLabel","Row","Form","Formik","yup","DatePicker","ContactEditor2","show","initialValues","toggleEditorDialog","handleFormSubmit","name","email","phone","note","age","balance","bd","Date","role","contactSchema","values","errors","touched","handleChange","handleBlur","handleSubmit","isSubmitting","setFieldValue","date","match","object","shape","string","required","number"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  Modal,\n  FormGroup,\n  FormControl,\n  FormLabel,\n  Row,\n  Form\n} from \"react-bootstrap\";\nimport { Formik } from \"formik\";\nimport * as yup from \"yup\";\nimport DatePicker from \"react-datepicker\";\n\nconst ContactEditor2 = ({\n  show,\n  initialValues,\n  toggleEditorDialog,\n  handleFormSubmit\n}) => {\n  return (\n    <Modal show={show} onHide={toggleEditorDialog} centered>\n      <div className=\"modal-header\">\n        <h5 className=\"modal-title\" id=\"exampleModalLabel\">\n          {initialValues ? \"Update\" : \"New\"} Contact\n        </h5>\n        <button\n          type=\"button\"\n          className=\"close\"\n          aria-label=\"Close\"\n          onClick={() => toggleEditorDialog(false)}\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div className=\"modal-body\">\n        <Formik\n          initialValues={\n            initialValues\n              ? initialValues\n              : {\n                  name: \"\",\n                  email: \"\",\n                  phone: \"\",\n                  note: \"\",\n                  age: \"\",\n                  balance: \"\",\n                  bd: new Date(),\n                  role: \"developer\"\n                }\n          }\n          validationSchema={contactSchema}\n          enableReinitialize={true}\n          onSubmit={handleFormSubmit}\n        >\n          {({\n            values,\n            errors,\n            touched,\n            handleChange,\n            handleBlur,\n            handleSubmit,\n            isSubmitting,\n            setFieldValue\n          }) => (\n            <form onSubmit={handleSubmit} className=\"position-relative\">\n              <Form.Row className=\"mb-3\">\n                <FormLabel column sm={2}>\n                  Name\n                </FormLabel>\n                <FormControl\n                  className=\"col-sm-10\"\n                  placeholder=\"Name\"\n                  name=\"name\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  isInvalid={errors.name && touched.name}\n                  value={values.name}\n                ></FormControl>\n              </Form.Row>\n              <Form.Row className=\"mb-3\">\n                <FormLabel column sm={2}>\n                  Email\n                </FormLabel>\n                <FormControl\n                  className=\"col-sm-10\"\n                  placeholder=\"Email\"\n                  name=\"email\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  isInvalid={errors.email && touched.email}\n                  value={values.email}\n                ></FormControl>\n              </Form.Row>\n              <Form.Row className=\"mb-3\">\n                <FormLabel column sm={2}>\n                  Phone\n                </FormLabel>\n                <FormControl\n                  className=\"col-sm-10\"\n                  placeholder=\"Phone\"\n                  name=\"phone\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  isInvalid={errors.phone && touched.phone}\n                  value={values.phone}\n                ></FormControl>\n              </Form.Row>\n              <Form.Row className=\"mb-3\">\n                <FormLabel column sm={2}>\n                  Age\n                </FormLabel>\n                <FormControl\n                  className=\"col-sm-10\"\n                  placeholder=\"Age\"\n                  name=\"age\"\n                  type=\"number\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  isInvalid={errors.age && touched.age}\n                  value={values.age}\n                ></FormControl>\n              </Form.Row>\n              <Form.Row className=\"mb-3\">\n                <FormLabel column sm={2}>\n                  Balance\n                </FormLabel>\n                <FormControl\n                  className=\"col-sm-10\"\n                  placeholder=\"$1230\"\n                  name=\"balance\"\n                  type=\"number\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  isInvalid={errors.balance && touched.balance}\n                  value={values.balance}\n                ></FormControl>\n              </Form.Row>\n              <Form.Row>\n                <FormLabel column sm={2}>\n                  Join\n                </FormLabel>\n                ``\n                <DatePicker\n                  className=\"form-control mb-3\"\n                  dateFormat=\"dd/MM/yyyy\"\n                  selected={new Date(values.bd)}\n                  onChange={date => {\n                    setFieldValue(\"bd\", date);\n                  }}\n                />\n              </Form.Row>\n\n              <fieldset className=\"form-group\">\n                <div className=\"row\">\n                  <div className=\"col-form-label col-sm-2 pt-0\">Role</div>\n                  <div className=\"col-sm-10\">\n                    <div className=\"form-check\">\n                      <input\n                        className=\"form-check-input\"\n                        type=\"radio\"\n                        name=\"role\"\n                        value=\"developer\"\n                        onChange={handleChange}\n                        checked={\"developer\".match(values.role)}\n                        id=\"developer\"\n                      />\n                      <label\n                        className=\"form-check-label ml-3\"\n                        htmlFor=\"developer\"\n                      >\n                        Developer\n                      </label>\n                    </div>\n                    <div className=\"form-check\">\n                      <input\n                        className=\"form-check-input\"\n                        type=\"radio\"\n                        name=\"role\"\n                        value=\"designer\"\n                        onChange={handleChange}\n                        checked={\"designer\".match(values.role)}\n                        id=\"designer\"\n                      />\n                      <label\n                        className=\"form-check-label ml-3\"\n                        htmlFor=\"designer\"\n                      >\n                        Designer\n                      </label>\n                    </div>\n                    <div className=\"form-check\">\n                      <input\n                        className=\"form-check-input\"\n                        type=\"radio\"\n                        name=\"role\"\n                        value=\"manager\"\n                        onChange={handleChange}\n                        checked={\"manager\".match(values.role)}\n                        id=\"manager\"\n                      />\n                      <label\n                        className=\"form-check-label ml-3\"\n                        htmlFor=\"manager\"\n                      >\n                        Manager\n                      </label>\n                    </div>\n                  </div>\n                </div>\n              </fieldset>\n              <div className=\"form-group row\">\n                <div className=\"col-sm-10\">\n                  <button type=\"submit\" className=\"btn btn-success\">\n                    Save Changes\n                  </button>\n                </div>\n              </div>\n            </form>\n          )}\n        </Formik>\n      </div>\n    </Modal>\n  );\n};\n\nconst contactSchema = yup.object().shape({\n  name: yup.string().required(\"title is required\"),\n  email: yup\n    .string()\n    .email()\n    .required(\"note is required\"),\n  phone: yup.string().required(\"note is required\"),\n  age: yup.number().required(\"note is required\"),\n  balance: yup.number().required(\"note is required\"),\n  bd: yup.string().required(\"note is required\"),\n  role: yup.string().required(\"note is required\")\n});\n\nexport default ContactEditor2;\n"]},"metadata":{},"sourceType":"module"}