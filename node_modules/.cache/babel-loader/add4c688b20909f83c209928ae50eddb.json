{"ast":null,"code":"var _jsxFileName = \"/Users/arjun/Documents/Personal/Test/Theta/UI Theme/gull-admin/react/src/app/views/app/invoice/InvoiceEditor.jsx\";\nimport React, { Component, Fragment } from \"react\";\nimport { Button, Form, FormGroup, FormControl, FormLabel } from \"react-bootstrap\";\nimport { Formik, FieldArray } from \"formik\";\nimport DatePicker from \"react-datepicker\";\nimport * as yup from \"yup\";\nimport { getInvoiceById, addInvoice, updateInvoice } from \"./InvoiceService\";\nimport { withRouter } from \"react-router-dom\";\n\nclass InvoiceEditor extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      id: \"\",\n      orderNo: \"\",\n      buyer: {\n        name: \"\",\n        address: \"\"\n      },\n      seller: {\n        name: \"\",\n        address: \"\"\n      },\n      item: [],\n      status: \"\",\n      vat: \"\",\n      date: new Date(),\n      currency: \"$\",\n      loading: false\n    };\n    this.subTotalCost = 0;\n\n    this.generateRandomId = () => {\n      let tempId = Math.random().toString();\n      let id = tempId.substr(2, tempId.length - 1);\n      this.setState({\n        id\n      });\n    };\n\n    this.handleSubmit = (values, {\n      setSubmitting\n    }) => {\n      let {\n        id\n      } = this.state;\n      this.setState({\n        loading: true\n      });\n      setSubmitting(true);\n      console.log(values);\n      if (this.props.isNewInvoice) addInvoice({\n        id,\n        ...values\n      }).then(() => {\n        this.setState({\n          loading: false\n        });\n        this.props.history.push(`/invoice/${id}`);\n        this.props.toggleInvoiceEditor();\n      });else updateInvoice(values).then(() => {\n        this.setState({\n          loading: false\n        });\n        this.props.toggleInvoiceEditor();\n      });\n    };\n\n    this.calculateSubTotal = values => {\n      this.subTotalCost = values.item.reduce((total, item) => total + item.price * item.unit, 0);\n    };\n  }\n\n  componentDidMount() {\n    if (!this.props.isNewInvoice) getInvoiceById(this.props.match.params.id).then(res => {\n      this.setState({ ...res.data\n      });\n    });else {\n      this.generateRandomId();\n    }\n  }\n\n  render() {\n    this.subTotalCost = 0;\n    let {\n      loading\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invoice-viewer py-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Formik, {\n      initialValues: this.state,\n      validationSchema: invoiceSchema,\n      onSubmit: this.handleSubmit,\n      enableReinitialize: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }, ({\n      values,\n      errors,\n      touched,\n      handleChange,\n      handleBlur,\n      handleSubmit,\n      isSubmitting,\n      setSubmitting,\n      setFieldValue\n    }) => {\n      this.calculateSubTotal(values);\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Form, {\n        onSubmit: handleSubmit,\n        className: \"px-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"viewer_actions d-flex justify-content-end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"mb-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        type: \"button\",\n        className: \"mr-3 py-2\",\n        variant: \"warning\",\n        onClick: () => this.props.toggleInvoiceEditor(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 23\n        }\n      }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n        type: \"submit\",\n        className: \"py-2\",\n        variant: \"primary\",\n        disabled: loading,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 23\n        }\n      }, \"Save\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row justify-content-between\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"font-weight-bold\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 23\n        }\n      }, \"Order Info\"), /*#__PURE__*/React.createElement(FormGroup, {\n        className: \"col-sm-4 mb-3 pl-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(FormLabel, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 25\n        }\n      }, \"Order Number\"), /*#__PURE__*/React.createElement(FormControl, {\n        type: \"text\",\n        className: \"form-control\",\n        name: \"orderNo\",\n        placeholder: \"Enter order number\",\n        onChange: handleChange,\n        onBlur: handleBlur,\n        isInvalid: errors.orderNo && touched.orderNo,\n        value: values.orderNo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 25\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-3 text-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        className: \"d-block text-12 text-muted\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 23\n        }\n      }, \"Order Status\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pr-0 mb-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"fieldset\", {\n        className: \"offset-md-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        className: \"radio radio-danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"radio\",\n        name: \"status\",\n        checked: values.status === \"pending\",\n        onChange: handleChange,\n        value: \"pending\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 29\n        }\n      }, \"Pending\"), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"checkmark\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 29\n        }\n      })), /*#__PURE__*/React.createElement(\"label\", {\n        className: \"radio check-reverse radio-warning\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"radio\",\n        name: \"status\",\n        checked: values.status === \"processing\",\n        onChange: handleChange,\n        value: \"processing\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 29\n        }\n      }, \"Processing\"), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"checkmark\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 29\n        }\n      })), /*#__PURE__*/React.createElement(\"label\", {\n        className: \"radio radio-success\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"radio\",\n        name: \"status\",\n        checked: values.status === \"delivered\",\n        onChange: handleChange,\n        value: \"delivered\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 29\n        }\n      }, \"Delivered\"), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"checkmark\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 29\n        }\n      }))), errors.status && touched.status && /*#__PURE__*/React.createElement(\"small\", {\n        className: \"text-danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 27\n        }\n      }, \"Minimum 1 item is required\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"mb-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 25\n        }\n      }, \"Order Date\"), /*#__PURE__*/React.createElement(DatePicker, {\n        className: \"form-control text-right\",\n        dateFormat: \"dd/MM/yyyy\",\n        selected: new Date(values.date),\n        onChange: date => {\n          setFieldValue(\"date\", date);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 25\n        }\n      })))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"mt-3 mb-4 border-top\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row mb-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        className: \"font-weight-bold\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 23\n        }\n      }, \"Bill From\"), /*#__PURE__*/React.createElement(FormGroup, {\n        className: \"col-md-10 mb-3 pl-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(FormControl, {\n        type: \"text\",\n        className: \"form-control\",\n        name: \"seller.name\",\n        placeholder: \"Bill From\",\n        value: values.seller.name,\n        onChange: handleChange,\n        onBlur: handleBlur,\n        isInvalid: errors.seller && errors.seller.name && touched.seller && touched.seller.name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(FormGroup, {\n        className: \"col-md-10 mb-3 pl-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(FormControl, {\n        as: \"textarea\",\n        placeholder: \"Bill From Address\",\n        name: \"seller.address\",\n        value: values.seller.address,\n        onChange: handleChange,\n        onBlur: handleBlur,\n        isInvalid: errors.seller && touched.seller && errors.seller.address && touched.seller.address,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 25\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-6 text-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        className: \"font-weight-bold\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 23\n        }\n      }, \"Bill To\"), /*#__PURE__*/React.createElement(FormGroup, {\n        className: \"col-md-10 offset-md-2 mb-3 pr-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(FormControl, {\n        type: \"text\",\n        className: \"text-right\",\n        name: \"buyer.name\",\n        placeholder: \"Bill From\",\n        value: values.buyer.name,\n        onChange: handleChange,\n        onBlur: handleBlur,\n        isInvalid: errors.buyer && touched.buyer && errors.buyer.name && touched.buyer.name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(FormGroup, {\n        className: \"col-md-10 offset-md-2 mb-3 pr-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(FormControl, {\n        as: \"textarea\",\n        className: \"text-right\",\n        placeholder: \"Bill From Address\",\n        name: \"buyer.address\",\n        value: values.buyer.address,\n        onChange: handleChange,\n        onBlur: handleBlur,\n        isInvalid: errors.buyer && touched.buyer && errors.buyer.address && touched.buyer.address,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 25\n        }\n      })))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(FieldArray, {\n        name: \"item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 21\n        }\n      }, arrayHelpers => /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-12 table-responsive\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        className: \"table table-hover mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        className: \"bg-gray-300\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        scope: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 33\n        }\n      }, \"#\"), /*#__PURE__*/React.createElement(\"th\", {\n        scope: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 33\n        }\n      }, \"Item Name\"), /*#__PURE__*/React.createElement(\"th\", {\n        scope: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 33\n        }\n      }, \"Unit Price\"), /*#__PURE__*/React.createElement(\"th\", {\n        scope: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 33\n        }\n      }, \"Unit\"), /*#__PURE__*/React.createElement(\"th\", {\n        scope: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 33\n        }\n      }, \"Cost\"), /*#__PURE__*/React.createElement(\"th\", {\n        scope: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 33\n        }\n      }))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 29\n        }\n      }, values.item.map((item, ind) => /*#__PURE__*/React.createElement(\"tr\", {\n        key: ind,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        className: \"text-middle\",\n        scope: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 35\n        }\n      }, ind + 1), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 35\n        }\n      }, /*#__PURE__*/React.createElement(FormControl, {\n        value: values.item[ind].name,\n        name: `item[${ind}].name`,\n        type: \"text\",\n        placeholder: \"Item Name\",\n        onChange: handleChange,\n        onBlur: handleBlur,\n        isInvalid: errors.item && touched.item && errors.item[ind] && touched.item[ind] && errors.item[ind].name && touched.item[ind].name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 37\n        }\n      })), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 35\n        }\n      }, /*#__PURE__*/React.createElement(FormControl, {\n        value: values.item[ind].price,\n        name: `item[${ind}].price`,\n        type: \"number\",\n        placeholder: \"Unit Price\",\n        onChange: handleChange,\n        onBlur: handleBlur,\n        isInvalid: errors.item && touched.item && errors.item[ind] && touched.item[ind] && errors.item[ind].price && touched.item[ind].price,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 37\n        }\n      })), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 35\n        }\n      }, /*#__PURE__*/React.createElement(FormControl, {\n        value: values.item[ind].unit,\n        name: `item[${ind}].unit`,\n        type: \"number\",\n        placeholder: \"Unit\",\n        onChange: handleChange,\n        onBlur: handleBlur,\n        isInvalid: errors.item && touched.item && errors.item[ind] && touched.item[ind] && errors.item[ind].unit && touched.item[ind].unit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 37\n        }\n      })), /*#__PURE__*/React.createElement(\"td\", {\n        className: \"text-middle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 35\n        }\n      }, values.item[ind].price * values.item[ind].unit), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 35\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        onClick: () => arrayHelpers.remove(ind),\n        className: \"btn btn-outline-secondary float-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 37\n        }\n      }, \"Delete\")))))), values.item.length === 0 && /*#__PURE__*/React.createElement(\"small\", {\n        className: \"text-danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 29\n        }\n      }, \"Minimum 1 item is required\"), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        onClick: () => arrayHelpers.push({\n          name: \"\",\n          price: \"\",\n          unit: \"\"\n        }),\n        className: \"btn btn-primary float-right mb-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 27\n        }\n      }, \"Add Item\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"invoice-summary invoice-summary-input float-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 25\n        }\n      }, \"Sub total:\", /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 27\n        }\n      }, values.currency, this.subTotalCost)), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"d-flex align-items-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 25\n        }\n      }, \"Vat(%):\", /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(FormControl, {\n        type: \"text\",\n        className: \"small-input\",\n        name: \"vat\",\n        value: values.vat,\n        onChange: handleChange,\n        onBlur: handleBlur,\n        isInvalid: errors.vat && touched.vat,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 29\n        }\n      }), values.currency, this.subTotalCost * values.vat / 100)), /*#__PURE__*/React.createElement(\"h5\", {\n        className: \"font-weight-bold d-flex align-items-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 25\n        }\n      }, \"Grand Total:\", /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(FormControl, {\n        type: \"text\",\n        className: \"small-input\",\n        name: \"currency\",\n        value: values.currency,\n        onChange: handleChange,\n        onBlur: handleBlur,\n        isInvalid: errors.currency && touched.currency,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 29\n        }\n      }), values.currency, this.subTotalCost + this.subTotalCost * values.vat / 100)))))));\n    }));\n  }\n\n}\n\nconst invoiceSchema = yup.object().shape({\n  orderNo: yup.string().required(\"orderNo is required\"),\n  status: yup.string().required(\"status is required\"),\n  seller: yup.object().shape({\n    name: yup.string().required(\"name is required\"),\n    address: yup.string().required(\"address is required\")\n  }),\n  buyer: yup.object().shape({\n    name: yup.string().required(\"name is required\"),\n    address: yup.string().required(\"address is required\")\n  }),\n  item: yup.array().of(yup.object().shape({\n    name: yup.string().required(\"name is required\"),\n    price: yup.number().required(\"price is required\"),\n    unit: yup.number().required(\"unit is required\")\n  })).min(1, \"Minimum 1 item is required\"),\n  vat: yup.number().required(\"unit is required\"),\n  currency: yup.string().required(\"name is required\")\n});\nexport default withRouter(InvoiceEditor);","map":{"version":3,"sources":["/Users/arjun/Documents/Personal/Test/Theta/UI Theme/gull-admin/react/src/app/views/app/invoice/InvoiceEditor.jsx"],"names":["React","Component","Fragment","Button","Form","FormGroup","FormControl","FormLabel","Formik","FieldArray","DatePicker","yup","getInvoiceById","addInvoice","updateInvoice","withRouter","InvoiceEditor","state","id","orderNo","buyer","name","address","seller","item","status","vat","date","Date","currency","loading","subTotalCost","generateRandomId","tempId","Math","random","toString","substr","length","setState","handleSubmit","values","setSubmitting","console","log","props","isNewInvoice","then","history","push","toggleInvoiceEditor","calculateSubTotal","reduce","total","price","unit","componentDidMount","match","params","res","data","render","invoiceSchema","errors","touched","handleChange","handleBlur","isSubmitting","setFieldValue","arrayHelpers","map","ind","remove","object","shape","string","required","array","of","number","min"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport {\n  Button,\n  Form,\n  FormGroup,\n  FormControl,\n  FormLabel\n} from \"react-bootstrap\";\nimport { Formik, FieldArray } from \"formik\";\nimport DatePicker from \"react-datepicker\";\nimport * as yup from \"yup\";\n\nimport { getInvoiceById, addInvoice, updateInvoice } from \"./InvoiceService\";\nimport { withRouter } from \"react-router-dom\";\n\nclass InvoiceEditor extends Component {\n  state = {\n    id: \"\",\n    orderNo: \"\",\n    buyer: {\n      name: \"\",\n      address: \"\"\n    },\n    seller: {\n      name: \"\",\n      address: \"\"\n    },\n    item: [],\n    status: \"\",\n    vat: \"\",\n    date: new Date(),\n    currency: \"$\",\n    loading: false\n  };\n\n  subTotalCost = 0;\n\n  componentDidMount() {\n    if (!this.props.isNewInvoice)\n      getInvoiceById(this.props.match.params.id).then(res => {\n        this.setState({ ...res.data });\n      });\n    else {\n      this.generateRandomId();\n    }\n  }\n\n  generateRandomId = () => {\n    let tempId = Math.random().toString();\n    let id = tempId.substr(2, tempId.length - 1);\n    this.setState({ id });\n  };\n\n  handleSubmit = (values, { setSubmitting }) => {\n    let { id } = this.state;\n    this.setState({ loading: true });\n    setSubmitting(true);\n\n    console.log(values);\n\n    if (this.props.isNewInvoice)\n      addInvoice({ id, ...values }).then(() => {\n        this.setState({ loading: false });\n        this.props.history.push(`/invoice/${id}`);\n        this.props.toggleInvoiceEditor();\n      });\n    else\n      updateInvoice(values).then(() => {\n        this.setState({ loading: false });\n        this.props.toggleInvoiceEditor();\n      });\n  };\n\n  calculateSubTotal = values => {\n    this.subTotalCost = values.item.reduce(\n      (total, item) => total + item.price * item.unit,\n      0\n    );\n  };\n\n  render() {\n    this.subTotalCost = 0;\n    let { loading } = this.state;\n\n    return (\n      <div className=\"invoice-viewer py-3\">\n        <Formik\n          initialValues={this.state}\n          validationSchema={invoiceSchema}\n          onSubmit={this.handleSubmit}\n          enableReinitialize={true}\n        >\n          {({\n            values,\n            errors,\n            touched,\n            handleChange,\n            handleBlur,\n            handleSubmit,\n            isSubmitting,\n            setSubmitting,\n            setFieldValue\n          }) => {\n            this.calculateSubTotal(values);\n            return (\n              <Fragment>\n                <Form onSubmit={handleSubmit} className=\"px-3\">\n                  <div className=\"viewer_actions d-flex justify-content-end\">\n                    <div className=\"mb-4\">\n                      <Button\n                        type=\"button\"\n                        className=\"mr-3 py-2\"\n                        variant=\"warning\"\n                        onClick={() => this.props.toggleInvoiceEditor()}\n                      >\n                        Cancel\n                      </Button>\n                      <Button\n                        type=\"submit\"\n                        className=\"py-2\"\n                        variant=\"primary\"\n                        disabled={loading}\n                      >\n                        Save\n                      </Button>\n                    </div>\n                  </div>\n\n                  <div className=\"row justify-content-between\">\n                    <div className=\"col-md-6\">\n                      <h4 className=\"font-weight-bold\">Order Info</h4>\n                      <FormGroup className=\"col-sm-4 mb-3 pl-0\">\n                        <FormLabel>Order Number</FormLabel>\n                        <FormControl\n                          type=\"text\"\n                          className=\"form-control\"\n                          name=\"orderNo\"\n                          placeholder=\"Enter order number\"\n                          onChange={handleChange}\n                          onBlur={handleBlur}\n                          isInvalid={errors.orderNo && touched.orderNo}\n                          value={values.orderNo}\n                        />\n                      </FormGroup>\n                    </div>\n                    <div className=\"col-md-3 text-right\">\n                      <label className=\"d-block text-12 text-muted\">\n                        Order Status\n                      </label>\n                      <div className=\"pr-0 mb-4\">\n                        <fieldset className=\"offset-md-6\">\n                          <label className=\"radio radio-danger\">\n                            <input\n                              type=\"radio\"\n                              name=\"status\"\n                              checked={values.status === \"pending\"}\n                              onChange={handleChange}\n                              value=\"pending\"\n                            />\n                            <span>Pending</span>\n                            <span className=\"checkmark\"></span>\n                          </label>\n                          <label className=\"radio check-reverse radio-warning\">\n                            <input\n                              type=\"radio\"\n                              name=\"status\"\n                              checked={values.status === \"processing\"}\n                              onChange={handleChange}\n                              value=\"processing\"\n                            />\n                            <span>Processing</span>\n                            <span className=\"checkmark\"></span>\n                          </label>\n                          <label className=\"radio radio-success\">\n                            <input\n                              type=\"radio\"\n                              name=\"status\"\n                              checked={values.status === \"delivered\"}\n                              onChange={handleChange}\n                              value=\"delivered\"\n                            />\n                            <span>Delivered</span>\n                            <span className=\"checkmark\"></span>\n                          </label>\n                        </fieldset>\n                        {errors.status && touched.status && (\n                          <small className=\"text-danger\">\n                            Minimum 1 item is required\n                          </small>\n                        )}\n                      </div>\n                      <div className=\"form-group mb-3\">\n                        <div className=\"mb-1\">Order Date</div>\n                        <DatePicker\n                          className=\"form-control text-right\"\n                          dateFormat=\"dd/MM/yyyy\"\n                          selected={new Date(values.date)}\n                          onChange={date => {\n                            setFieldValue(\"date\", date);\n                          }}\n                        />\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"mt-3 mb-4 border-top\"></div>\n                  <div className=\"row mb-5\">\n                    <div className=\"col-md-6\">\n                      <h5 className=\"font-weight-bold\">Bill From</h5>\n                      <FormGroup className=\"col-md-10 mb-3 pl-0\">\n                        <FormControl\n                          type=\"text\"\n                          className=\"form-control\"\n                          name=\"seller.name\"\n                          placeholder=\"Bill From\"\n                          value={values.seller.name}\n                          onChange={handleChange}\n                          onBlur={handleBlur}\n                          isInvalid={\n                            errors.seller &&\n                            errors.seller.name &&\n                            touched.seller &&\n                            touched.seller.name\n                          }\n                        />\n                      </FormGroup>\n\n                      <FormGroup className=\"col-md-10 mb-3 pl-0\">\n                        <FormControl\n                          as=\"textarea\"\n                          placeholder=\"Bill From Address\"\n                          name=\"seller.address\"\n                          value={values.seller.address}\n                          onChange={handleChange}\n                          onBlur={handleBlur}\n                          isInvalid={\n                            errors.seller &&\n                            touched.seller &&\n                            errors.seller.address &&\n                            touched.seller.address\n                          }\n                        ></FormControl>\n                      </FormGroup>\n                    </div>\n\n                    <div className=\"col-md-6 text-right\">\n                      <h5 className=\"font-weight-bold\">Bill To</h5>\n                      <FormGroup className=\"col-md-10 offset-md-2 mb-3 pr-0\">\n                        <FormControl\n                          type=\"text\"\n                          className=\"text-right\"\n                          name=\"buyer.name\"\n                          placeholder=\"Bill From\"\n                          value={values.buyer.name}\n                          onChange={handleChange}\n                          onBlur={handleBlur}\n                          isInvalid={\n                            errors.buyer &&\n                            touched.buyer &&\n                            errors.buyer.name &&\n                            touched.buyer.name\n                          }\n                        />\n                      </FormGroup>\n                      <FormGroup className=\"col-md-10 offset-md-2 mb-3 pr-0\">\n                        <FormControl\n                          as=\"textarea\"\n                          className=\"text-right\"\n                          placeholder=\"Bill From Address\"\n                          name=\"buyer.address\"\n                          value={values.buyer.address}\n                          onChange={handleChange}\n                          onBlur={handleBlur}\n                          isInvalid={\n                            errors.buyer &&\n                            touched.buyer &&\n                            errors.buyer.address &&\n                            touched.buyer.address\n                          }\n                        ></FormControl>\n                      </FormGroup>\n                    </div>\n                  </div>\n                  <div className=\"row\">\n                    <FieldArray name=\"item\">\n                      {arrayHelpers => (\n                        <div className=\"col-md-12 table-responsive\">\n                          <table className=\"table table-hover mb-3\">\n                            <thead className=\"bg-gray-300\">\n                              <tr>\n                                <th scope=\"col\">#</th>\n                                <th scope=\"col\">Item Name</th>\n                                <th scope=\"col\">Unit Price</th>\n                                <th scope=\"col\">Unit</th>\n                                <th scope=\"col\">Cost</th>\n                                <th scope=\"col\"></th>\n                              </tr>\n                            </thead>\n                            <tbody>\n                              {values.item.map((item, ind) => (\n                                <tr key={ind}>\n                                  <th className=\"text-middle\" scope=\"row\">\n                                    {ind + 1}\n                                  </th>\n                                  <td>\n                                    <FormControl\n                                      value={values.item[ind].name}\n                                      name={`item[${ind}].name`}\n                                      type=\"text\"\n                                      placeholder=\"Item Name\"\n                                      onChange={handleChange}\n                                      onBlur={handleBlur}\n                                      isInvalid={\n                                        errors.item &&\n                                        touched.item &&\n                                        errors.item[ind] &&\n                                        touched.item[ind] &&\n                                        errors.item[ind].name &&\n                                        touched.item[ind].name\n                                      }\n                                    />\n                                  </td>\n                                  <td>\n                                    <FormControl\n                                      value={values.item[ind].price}\n                                      name={`item[${ind}].price`}\n                                      type=\"number\"\n                                      placeholder=\"Unit Price\"\n                                      onChange={handleChange}\n                                      onBlur={handleBlur}\n                                      isInvalid={\n                                        errors.item &&\n                                        touched.item &&\n                                        errors.item[ind] &&\n                                        touched.item[ind] &&\n                                        errors.item[ind].price &&\n                                        touched.item[ind].price\n                                      }\n                                    />\n                                  </td>\n                                  <td>\n                                    <FormControl\n                                      value={values.item[ind].unit}\n                                      name={`item[${ind}].unit`}\n                                      type=\"number\"\n                                      placeholder=\"Unit\"\n                                      onChange={handleChange}\n                                      onBlur={handleBlur}\n                                      isInvalid={\n                                        errors.item &&\n                                        touched.item &&\n                                        errors.item[ind] &&\n                                        touched.item[ind] &&\n                                        errors.item[ind].unit &&\n                                        touched.item[ind].unit\n                                      }\n                                    />\n                                  </td>\n                                  <td className=\"text-middle\">\n                                    {values.item[ind].price *\n                                      values.item[ind].unit}\n                                  </td>\n                                  <td>\n                                    <button\n                                      type=\"button\"\n                                      onClick={() => arrayHelpers.remove(ind)}\n                                      className=\"btn btn-outline-secondary float-right\"\n                                    >\n                                      Delete\n                                    </button>\n                                  </td>\n                                </tr>\n                              ))}\n                            </tbody>\n                          </table>\n                          {values.item.length === 0 && (\n                            <small className=\"text-danger\">\n                              Minimum 1 item is required\n                            </small>\n                          )}\n                          <button\n                            type=\"button\"\n                            onClick={() =>\n                              arrayHelpers.push({\n                                name: \"\",\n                                price: \"\",\n                                unit: \"\"\n                              })\n                            }\n                            className=\"btn btn-primary float-right mb-4\"\n                          >\n                            Add Item\n                          </button>\n                        </div>\n                      )}\n                    </FieldArray>\n\n                    <div className=\"col-md-12\">\n                      <div className=\"invoice-summary invoice-summary-input float-right\">\n                        <p>\n                          Sub total:\n                          <span>\n                            {values.currency}\n                            {this.subTotalCost}\n                          </span>\n                        </p>\n                        <p className=\"d-flex align-items-center\">\n                          Vat(%):\n                          <span>\n                            <FormControl\n                              type=\"text\"\n                              className=\"small-input\"\n                              name=\"vat\"\n                              value={values.vat}\n                              onChange={handleChange}\n                              onBlur={handleBlur}\n                              isInvalid={errors.vat && touched.vat}\n                            />\n                            {values.currency}\n                            {(this.subTotalCost * values.vat) / 100}\n                          </span>\n                        </p>\n                        <h5 className=\"font-weight-bold d-flex align-items-center\">\n                          Grand Total:\n                          <span>\n                            <FormControl\n                              type=\"text\"\n                              className=\"small-input\"\n                              name=\"currency\"\n                              value={values.currency}\n                              onChange={handleChange}\n                              onBlur={handleBlur}\n                              isInvalid={errors.currency && touched.currency}\n                            />\n                            {values.currency}\n                            {this.subTotalCost +\n                              (this.subTotalCost * values.vat) / 100}\n                          </span>\n                        </h5>\n                      </div>\n                    </div>\n                  </div>\n                </Form>\n              </Fragment>\n            );\n          }}\n        </Formik>\n      </div>\n    );\n  }\n}\n\nconst invoiceSchema = yup.object().shape({\n  orderNo: yup.string().required(\"orderNo is required\"),\n  status: yup.string().required(\"status is required\"),\n  seller: yup.object().shape({\n    name: yup.string().required(\"name is required\"),\n    address: yup.string().required(\"address is required\")\n  }),\n  buyer: yup.object().shape({\n    name: yup.string().required(\"name is required\"),\n    address: yup.string().required(\"address is required\")\n  }),\n  item: yup\n    .array()\n    .of(\n      yup.object().shape({\n        name: yup.string().required(\"name is required\"),\n        price: yup.number().required(\"price is required\"),\n        unit: yup.number().required(\"unit is required\")\n      })\n    )\n    .min(1, \"Minimum 1 item is required\"),\n  vat: yup.number().required(\"unit is required\"),\n  currency: yup.string().required(\"name is required\")\n});\n\nexport default withRouter(InvoiceEditor);\n"]},"metadata":{},"sourceType":"module"}