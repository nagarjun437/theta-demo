{"ast":null,"code":"var _jsxFileName = \"/Users/arjun/Documents/Personal/Test/Theta/UI Theme/gull-admin/react/src/app/views/app/inbox/InboxComposeDialog.jsx\";\nimport React, { Component } from \"react\";\nimport { Modal, Button, FormGroup, FormControl, FormLabel } from \"react-bootstrap\";\nimport { RichTextEditor } from \"@gull\";\nimport { Formik } from \"formik\";\nimport * as yup from \"yup\";\n\nclass InboxComposeDialog extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      to: \"\",\n      subject: \"\",\n      content: \"\",\n      attachment: null\n    };\n\n    this.handleSubmit = (values, {\n      setSubmitting\n    }) => {\n      console.log(values);\n    };\n\n    this.handleContentChange = contentHtml => {\n      this.setState({\n        content: contentHtml\n      });\n    };\n  }\n\n  render() {\n    let {\n      to,\n      subject,\n      content,\n      attachment\n    } = this.state;\n    let {\n      open,\n      handleClose\n    } = this.props;\n    return /*#__PURE__*/React.createElement(Modal, {\n      show: open,\n      onHide: handleClose,\n      size: \"lg\",\n      centered: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Formik, {\n      initialValues: this.state,\n      validationSchema: emailSchema,\n      onSubmit: this.handleSubmit,\n      enableReinitialize: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    }, ({\n      values,\n      errors,\n      touched,\n      handleChange,\n      handleBlur,\n      handleSubmit,\n      isSubmitting,\n      setSubmitting,\n      setFieldValue\n    }) => /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"inbox-form p-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    }, \"To\"), /*#__PURE__*/React.createElement(FormControl, {\n      type: \"email\",\n      name: \"to\",\n      placeholder: \"uilib@xmail.com\",\n      onChange: handleChange,\n      onBlur: handleBlur,\n      isInvalid: errors.to && touched.to,\n      value: values.to,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }, \"Subject\"), /*#__PURE__*/React.createElement(FormControl, {\n      type: \"text\",\n      name: \"subject\",\n      placeholder: \"uilib@xmail.com\",\n      onChange: handleChange,\n      onBlur: handleBlur,\n      isInvalid: errors.subject && touched.subject,\n      value: values.subject,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(RichTextEditor, {\n      content: values.content,\n      handleContentChange: val => setFieldValue(\"content\", val),\n      placeholder: \"insert text here...\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mt-3 d-flex flex-wrap justify-content-between\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      onClick: handleClose,\n      variant: \"secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    }, \"Cancel\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }\n    }, values.attachment && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"mr-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }\n    }, values.attachment.name), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"attachment\",\n      className: \"mb-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      className: \"mr-2 \",\n      as: \"span\",\n      variant: \"secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"i-Mail-Attachement\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 23\n      }\n    }))), /*#__PURE__*/React.createElement(\"input\", {\n      onChange: event => setFieldValue(\"attachment\", event.target.files[0]),\n      className: \"d-none\",\n      id: \"attachment\",\n      type: \"file\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      className: \"btn-rounded\",\n      variant: \"primary\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"i-Paper-Plane\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 21\n      }\n    })))))));\n  }\n\n}\n\nconst emailSchema = yup.object().shape({\n  to: yup.string().email(\"Invalid email\").required(\"email is required\"),\n  subject: yup.string().required(\"subject is required\"),\n  content: yup.string().required(\"content required\")\n});\nexport default InboxComposeDialog;","map":{"version":3,"sources":["/Users/arjun/Documents/Personal/Test/Theta/UI Theme/gull-admin/react/src/app/views/app/inbox/InboxComposeDialog.jsx"],"names":["React","Component","Modal","Button","FormGroup","FormControl","FormLabel","RichTextEditor","Formik","yup","InboxComposeDialog","state","to","subject","content","attachment","handleSubmit","values","setSubmitting","console","log","handleContentChange","contentHtml","setState","render","open","handleClose","props","emailSchema","errors","touched","handleChange","handleBlur","isSubmitting","setFieldValue","val","name","event","target","files","object","shape","string","email","required"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Modal,\n  Button,\n  FormGroup,\n  FormControl,\n  FormLabel\n} from \"react-bootstrap\";\nimport { RichTextEditor } from \"@gull\";\nimport { Formik } from \"formik\";\nimport * as yup from \"yup\";\n\nclass InboxComposeDialog extends Component {\n  state = {\n    to: \"\",\n    subject: \"\",\n    content: \"\",\n    attachment: null\n  };\n\n  handleSubmit = (values, { setSubmitting }) => {\n    console.log(values);\n  };\n\n  handleContentChange = contentHtml => {\n    this.setState({\n      content: contentHtml\n    });\n  };\n\n  render() {\n    let { to, subject, content, attachment } = this.state;\n    let { open, handleClose } = this.props;\n\n    return (\n      <Modal show={open} onHide={handleClose} size=\"lg\" centered>\n        <Formik\n          initialValues={this.state}\n          validationSchema={emailSchema}\n          onSubmit={this.handleSubmit}\n          enableReinitialize={true}\n        >\n          {({\n            values,\n            errors,\n            touched,\n            handleChange,\n            handleBlur,\n            handleSubmit,\n            isSubmitting,\n            setSubmitting,\n            setFieldValue\n          }) => (\n            <form onSubmit={handleSubmit} className=\"inbox-form p-4\">\n              <FormGroup className=\"mb-2\">\n                <FormLabel>To</FormLabel>\n                <FormControl\n                  type=\"email\"\n                  name=\"to\"\n                  placeholder=\"uilib@xmail.com\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  isInvalid={errors.to && touched.to}\n                  value={values.to}\n                />\n              </FormGroup>\n              <FormGroup className=\"mb-2\">\n                <FormLabel>Subject</FormLabel>\n                <FormControl\n                  type=\"text\"\n                  name=\"subject\"\n                  placeholder=\"uilib@xmail.com\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  isInvalid={errors.subject && touched.subject}\n                  value={values.subject}\n                />\n              </FormGroup>\n\n              <RichTextEditor\n                content={values.content}\n                handleContentChange={val => setFieldValue(\"content\", val)}\n                placeholder=\"insert text here...\"\n              />\n              <div className=\"mt-3 d-flex flex-wrap justify-content-between\">\n                <Button type=\"button\" onClick={handleClose} variant=\"secondary\">\n                  Cancel\n                </Button>\n\n                <div className=\"d-flex align-items-center\">\n                  {values.attachment && (\n                    <p className=\"mr-4\">{values.attachment.name}</p>\n                  )}\n                  <label htmlFor=\"attachment\" className=\"mb-0\">\n                    <Button\n                      type=\"button\"\n                      className=\"mr-2 \"\n                      as=\"span\"\n                      variant=\"secondary\"\n                    >\n                      <i className=\"i-Mail-Attachement\"></i>\n                    </Button>\n                  </label>\n                  <input\n                    onChange={event =>\n                      setFieldValue(\"attachment\", event.target.files[0])\n                    }\n                    className=\"d-none\"\n                    id=\"attachment\"\n                    type=\"file\"\n                  />\n                  <Button\n                    className=\"btn-rounded\"\n                    variant=\"primary\"\n                    type=\"submit\"\n                  >\n                    <i className=\"i-Paper-Plane\"></i>\n                  </Button>\n                </div>\n              </div>\n            </form>\n          )}\n        </Formik>\n      </Modal>\n    );\n  }\n}\n\nconst emailSchema = yup.object().shape({\n  to: yup\n    .string()\n    .email(\"Invalid email\")\n    .required(\"email is required\"),\n  subject: yup.string().required(\"subject is required\"),\n  content: yup.string().required(\"content required\")\n});\n\nexport default InboxComposeDialog;\n"]},"metadata":{},"sourceType":"module"}