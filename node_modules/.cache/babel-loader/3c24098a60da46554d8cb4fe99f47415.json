{"ast":null,"code":"var _jsxFileName = \"/Users/arjun/Documents/Personal/Test/Theta/UI Theme/theta-demo/src/app/GullLayout/Layout1/Layout1Header.jsx\";\nimport React, { Component } from \"react\";\nimport { Dropdown } from \"react-bootstrap\";\nimport DropdownMenu from \"react-bootstrap/DropdownMenu\";\nimport { getTimeDifference } from \"@utils\";\nimport DropdownToggle from \"react-bootstrap/DropdownToggle\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { setLayoutSettings, setDefaultSettings } from \"app/redux/actions/LayoutActions\";\nimport { logoutUser } from \"app/redux/actions/UserActions\";\nimport { withRouter } from \"react-router-dom\";\nimport { merge } from \"lodash\";\nimport MegaMenu from \"@gull/components/MegaMenu\";\n\nclass Layout1Header extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      shorcutMenuList: [{\n        icon: \"i-Shop-4\",\n        link: \"#\",\n        text: \"Home\"\n      }, {\n        icon: \"i-Library\",\n        link: \"#\",\n        text: \"Dashboard\"\n      }, {\n        icon: \"i-File-Clipboard-File--Text\",\n        link: \"#\",\n        text: \"Form\"\n      }, {\n        icon: \"i-Checked-User\",\n        link: \"#\",\n        text: \"Sessions\"\n      }, {\n        icon: \"i-Ambulance\",\n        link: \"#\",\n        text: \"Support\"\n      }],\n      notificationList: [{\n        icon: \"i-Speach-Bubble-6\",\n        title: \"New message\",\n        description: \"James: Hey! are you busy?\",\n        time: \"2021-07-11T02:10:18.931Z\",\n        color: \"primary\",\n        status: \"New\"\n      }, {\n        icon: \"i-Receipt-3\",\n        title: \"New Image(s) Uploaded\",\n        description: \"Task Name \",\n        time: \"2021-07-11T02:10:18.931Z\",\n        color: \"success\",\n        status: \"3\"\n      }, {\n        icon: \"i-Empty-Box\",\n        title: \"New Task Created\",\n        description: \"Task Description\",\n        time: \"2021-07-11T02:10:18.931Z\",\n        color: \"danger\",\n        status: \"New\"\n      }, {\n        icon: \"i-Data-Power\",\n        title: \"New Image(s) Uploaded\",\n        description: \"Job Name \",\n        time: \"2021-07-11T02:10:18.931Z\",\n        color: \"success\",\n        status: \"5\"\n      }],\n      showSearchBox: false\n    };\n\n    this.handleMenuClick = () => {\n      let {\n        setLayoutSettings,\n        settings\n      } = this.props;\n      setLayoutSettings(merge({}, settings, {\n        layout1Settings: {\n          leftSidebar: {\n            open: settings.layout1Settings.leftSidebar.secondaryNavOpen ? true : !settings.layout1Settings.leftSidebar.open,\n            secondaryNavOpen: false\n          }\n        }\n      }));\n    };\n\n    this.toggleFullScreen = () => {\n      if (document.fullscreenEnabled) {\n        if (!document.fullscreen) document.documentElement.requestFullscreen();else document.exitFullscreen();\n      }\n    };\n\n    this.handleSearchBoxOpen = () => {\n      let {\n        setLayoutSettings,\n        settings\n      } = this.props;\n      setLayoutSettings(merge({}, settings, {\n        layout1Settings: {\n          searchBox: {\n            open: true\n          }\n        }\n      }));\n    };\n  }\n\n  render() {\n    let {\n      shorcutMenuList = [],\n      notificationList = []\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"logo\",\n      onClick: this.handleMenuClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"/assets/images/logo.png\",\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        margin: \"auto\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header-part-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"i-Full-Screen header-icon d-none d-sm-inline-block\",\n      \"data-fullscreen\": true,\n      onClick: this.toggleFullScreen,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Dropdown, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Dropdown.Toggle, {\n      as: \"span\",\n      className: \"toggle-hidden\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"i-Safe-Box text-muted header-icon\",\n      role: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Dropdown.Menu, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"menu-icon-grid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 15\n      }\n    }, shorcutMenuList.map(menu => /*#__PURE__*/React.createElement(Link, {\n      key: menu.text,\n      to: menu.link,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: menu.icon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 21\n      }\n    }), \" \", menu.text))))), /*#__PURE__*/React.createElement(Dropdown, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Dropdown.Toggle, {\n      as: \"span\",\n      className: \"toggle-hidden cursor-pointer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"badge-top-container\",\n      role: \"button\",\n      id: \"dropdownNotification\",\n      \"data-toggle\": \"dropdown\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"badge badge-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 17\n      }\n    }, \"3\"), /*#__PURE__*/React.createElement(\"i\", {\n      className: \"i-Bell text-muted header-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(DropdownMenu, {\n      className: \"notification-dropdown rtl-ps-none\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 13\n      }\n    }, notificationList.map((note, index) => /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      className: \"dropdown-item d-flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"notification-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: `${note.icon} text-${note.color} mr-1`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"notification-details flex-grow-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"m-0 d-flex align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 23\n      }\n    }, note.title), /*#__PURE__*/React.createElement(\"span\", {\n      className: `badge badge-pill badge-${note.color} ml-1 mr-1`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 23\n      }\n    }, note.status), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"flex-grow-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"text-small text-muted ml-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 23\n      }\n    }, getTimeDifference(new Date(note.time)), \" ago\")), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-small text-muted m-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 21\n      }\n    }, note.description)))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"user col align-self-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Dropdown, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(DropdownToggle, {\n      as: \"span\",\n      className: \"toggle-hidden cursor-pointer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"/assets/images/faces/1.jpg\",\n      id: \"userDropdown\",\n      alt: \"\",\n      \"data-toggle\": \"dropdown\",\n      \"aria-haspopup\": \"true\",\n      \"aria-expanded\": \"false\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(DropdownMenu, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dropdown-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"i-Lock-User mr-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 19\n      }\n    }), \" Timothy Carlson\"), /*#__PURE__*/React.createElement(Link, {\n      to: \"/\",\n      className: \"dropdown-item cursor-pointer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 17\n      }\n    }, \"Account settings\"), /*#__PURE__*/React.createElement(Link, {\n      to: \"/\",\n      className: \"dropdown-item cursor-pointer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 17\n      }\n    }, \"Billing history\"), /*#__PURE__*/React.createElement(Link, {\n      to: \"/\",\n      className: \"dropdown-item cursor-pointer\",\n      onClick: this.props.logoutUser,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 17\n      }\n    }, \"Sign out\"))))));\n  }\n\n}\n\nLayout1Header.propTypes = {\n  setLayoutSettings: PropTypes.func.isRequired,\n  setDefaultSettings: PropTypes.func.isRequired,\n  logoutUser: PropTypes.func.isRequired,\n  user: PropTypes.object.isRequired,\n  settings: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  setDefaultSettings: PropTypes.func.isRequired,\n  setLayoutSettings: PropTypes.func.isRequired,\n  logoutUser: PropTypes.func.isRequired,\n  user: state.user,\n  settings: state.layout.settings\n});\n\nexport default withRouter(connect(mapStateToProps, {\n  setLayoutSettings,\n  setDefaultSettings,\n  logoutUser\n})(Layout1Header));","map":{"version":3,"sources":["/Users/arjun/Documents/Personal/Test/Theta/UI Theme/theta-demo/src/app/GullLayout/Layout1/Layout1Header.jsx"],"names":["React","Component","Dropdown","DropdownMenu","getTimeDifference","DropdownToggle","Link","PropTypes","connect","setLayoutSettings","setDefaultSettings","logoutUser","withRouter","merge","MegaMenu","Layout1Header","state","shorcutMenuList","icon","link","text","notificationList","title","description","time","color","status","showSearchBox","handleMenuClick","settings","props","layout1Settings","leftSidebar","open","secondaryNavOpen","toggleFullScreen","document","fullscreenEnabled","fullscreen","documentElement","requestFullscreen","exitFullscreen","handleSearchBoxOpen","searchBox","render","margin","map","menu","note","index","Date","propTypes","func","isRequired","user","object","mapStateToProps","layout"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Dropdown } from \"react-bootstrap\";\nimport DropdownMenu from \"react-bootstrap/DropdownMenu\";\nimport { getTimeDifference } from \"@utils\";\nimport DropdownToggle from \"react-bootstrap/DropdownToggle\";\nimport { Link } from \"react-router-dom\";\n\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport {\n  setLayoutSettings,\n  setDefaultSettings\n} from \"app/redux/actions/LayoutActions\";\nimport { logoutUser } from \"app/redux/actions/UserActions\";\nimport { withRouter } from \"react-router-dom\";\n\nimport { merge } from \"lodash\";\nimport MegaMenu from \"@gull/components/MegaMenu\";\n\nclass Layout1Header extends Component {\n  state = {\n    shorcutMenuList: [\n      {\n        icon: \"i-Shop-4\",\n        link: \"#\",\n        text: \"Home\"\n      },\n      {\n        icon: \"i-Library\",\n        link: \"#\",\n        text: \"Dashboard\"\n      },\n      {\n        icon: \"i-File-Clipboard-File--Text\",\n        link: \"#\",\n        text: \"Form\"\n      },\n      {\n        icon: \"i-Checked-User\",\n        link: \"#\",\n        text: \"Sessions\"\n      },\n      {\n        icon: \"i-Ambulance\",\n        link: \"#\",\n        text: \"Support\"\n      }\n    ],\n    notificationList: [\n      {\n        icon: \"i-Speach-Bubble-6\",\n        title: \"New message\",\n        description: \"James: Hey! are you busy?\",\n        time: \"2021-07-11T02:10:18.931Z\",\n        color: \"primary\",\n        status: \"New\"\n      },\n      {\n        icon: \"i-Receipt-3\",\n        title: \"New Image(s) Uploaded\",\n        description: \"Task Name \",\n        time: \"2021-07-11T02:10:18.931Z\",\n        color: \"success\",\n        status: \"3\"\n      },\n      {\n        icon: \"i-Empty-Box\",\n        title: \"New Task Created\",\n        description: \"Task Description\",\n        time: \"2021-07-11T02:10:18.931Z\",\n        color: \"danger\",\n        status: \"New\"\n      },\n      {\n        icon: \"i-Data-Power\",\n        title: \"New Image(s) Uploaded\",\n        description: \"Job Name \",\n        time: \"2021-07-11T02:10:18.931Z\",\n        color: \"success\",\n        status: \"5\"\n      }\n    ],\n    showSearchBox: false\n  };\n\n  handleMenuClick = () => {\n    let { setLayoutSettings, settings } = this.props;\n    setLayoutSettings(\n      merge({}, settings, {\n        layout1Settings: {\n          leftSidebar: {\n            open: settings.layout1Settings.leftSidebar.secondaryNavOpen\n              ? true\n              : !settings.layout1Settings.leftSidebar.open,\n            secondaryNavOpen: false\n          }\n        }\n      })\n    );\n  };\n\n  toggleFullScreen = () => {\n    if (document.fullscreenEnabled) {\n      if (!document.fullscreen) document.documentElement.requestFullscreen();\n      else document.exitFullscreen();\n    }\n  };\n\n  handleSearchBoxOpen = () => {\n    let { setLayoutSettings, settings } = this.props;\n    setLayoutSettings(\n      merge({}, settings, {\n        layout1Settings: {\n          searchBox: {\n            open: true\n          }\n        }\n      })\n    );\n  };\n\n  render() {\n    let { shorcutMenuList = [], notificationList = [] } = this.state;\n\n    return (\n      <div className=\"main-header\">\n        <div className=\"logo\" onClick={this.handleMenuClick}>\n          <img src=\"/assets/images/logo.png\" alt=\"\" />\n        </div>\n\n        {/*<div className=\"menu-toggle\" onClick={this.handleMenuClick}>*/}\n        {/*  <div></div>*/}\n        {/*  <div></div>*/}\n        {/*  <div></div>*/}\n        {/*</div>*/}\n\n        {/*<div className=\"d-none d-lg-flex align-items-center\">*/}\n        {/*  <Dropdown className=\"mr-3\">*/}\n        {/*    <Dropdown.Toggle as=\"span\" className=\"toggle-hidden cursor-pointer\">*/}\n        {/*      Mega Menu*/}\n        {/*    </Dropdown.Toggle>*/}\n\n        {/*    <div className=\"mega-menu\">*/}\n        {/*      <Dropdown.Menu>*/}\n        {/*        <MegaMenu></MegaMenu>*/}\n        {/*      </Dropdown.Menu>*/}\n        {/*    </div>*/}\n        {/*  </Dropdown>*/}\n\n        {/*  <div className=\"search-bar\">*/}\n        {/*    <input*/}\n        {/*      type=\"text\"*/}\n        {/*      placeholder=\"Search\"*/}\n        {/*      onFocus={this.handleSearchBoxOpen}*/}\n        {/*    />*/}\n        {/*    <i className=\"search-icon text-muted i-Magnifi-Glass1\"></i>*/}\n        {/*  </div>*/}\n        {/*</div>*/}\n\n        <div style={{ margin: \"auto\" }}></div>\n\n        <div className=\"header-part-right\">\n          <i\n            className=\"i-Full-Screen header-icon d-none d-sm-inline-block\"\n            data-fullscreen\n            onClick={this.toggleFullScreen}\n          ></i>\n\n          <Dropdown>\n            <Dropdown.Toggle as=\"span\" className=\"toggle-hidden\">\n              <i\n                className=\"i-Safe-Box text-muted header-icon\"\n                role=\"button\"\n              ></i>\n            </Dropdown.Toggle>\n            <Dropdown.Menu>\n              <div className=\"menu-icon-grid\">\n                {shorcutMenuList.map(menu => (\n                  <Link key={menu.text} to={menu.link}>\n                    <i className={menu.icon}></i> {menu.text}\n                  </Link>\n                ))}\n              </div>\n            </Dropdown.Menu>\n          </Dropdown>\n\n          <Dropdown>\n            <Dropdown.Toggle as=\"span\" className=\"toggle-hidden cursor-pointer\">\n              <div\n                className=\"badge-top-container\"\n                role=\"button\"\n                id=\"dropdownNotification\"\n                data-toggle=\"dropdown\"\n              >\n                <span className=\"badge badge-primary\">3</span>\n                <i className=\"i-Bell text-muted header-icon\"></i>\n              </div>\n            </Dropdown.Toggle>\n\n            <DropdownMenu className=\"notification-dropdown rtl-ps-none\">\n              {notificationList.map((note, index) => (\n                <div key={index} className=\"dropdown-item d-flex\">\n                  <div className=\"notification-icon\">\n                    <i className={`${note.icon} text-${note.color} mr-1`}></i>\n                  </div>\n                  <div className=\"notification-details flex-grow-1\">\n                    <p className=\"m-0 d-flex align-items-center\">\n                      <span>{note.title}</span>\n                      <span\n                        className={`badge badge-pill badge-${note.color} ml-1 mr-1`}\n                      >\n                        {note.status}\n                      </span>\n                      <span className=\"flex-grow-1\"></span>\n                      <span className=\"text-small text-muted ml-auto\">\n                        {getTimeDifference(new Date(note.time))} ago\n                      </span>\n                    </p>\n                    <p className=\"text-small text-muted m-0\">\n                      {note.description}\n                    </p>\n                  </div>\n                </div>\n              ))}\n            </DropdownMenu>\n          </Dropdown>\n\n          <div className=\"user col align-self-end\">\n            <Dropdown>\n              <DropdownToggle\n                as=\"span\"\n                className=\"toggle-hidden cursor-pointer\"\n              >\n                <img\n                  src=\"/assets/images/faces/1.jpg\"\n                  id=\"userDropdown\"\n                  alt=\"\"\n                  data-toggle=\"dropdown\"\n                  aria-haspopup=\"true\"\n                  aria-expanded=\"false\"\n                />\n              </DropdownToggle>\n              <DropdownMenu>\n                <div className=\"dropdown-header\">\n                  <i className=\"i-Lock-User mr-1\"></i> Timothy Carlson\n                </div>\n                <Link to=\"/\" className=\"dropdown-item cursor-pointer\">\n                  Account settings\n                </Link>\n                <Link to=\"/\" className=\"dropdown-item cursor-pointer\">\n                  Billing history\n                </Link>\n                <Link\n                  to=\"/\"\n                  className=\"dropdown-item cursor-pointer\"\n                  onClick={this.props.logoutUser}\n                >\n                  Sign out\n                </Link>\n              </DropdownMenu>\n            </Dropdown>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLayout1Header.propTypes = {\n  setLayoutSettings: PropTypes.func.isRequired,\n  setDefaultSettings: PropTypes.func.isRequired,\n  logoutUser: PropTypes.func.isRequired,\n  user: PropTypes.object.isRequired,\n  settings: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  setDefaultSettings: PropTypes.func.isRequired,\n  setLayoutSettings: PropTypes.func.isRequired,\n  logoutUser: PropTypes.func.isRequired,\n  user: state.user,\n  settings: state.layout.settings\n});\n\nexport default withRouter(\n  connect(mapStateToProps, {\n    setLayoutSettings,\n    setDefaultSettings,\n    logoutUser\n  })(Layout1Header)\n);\n"]},"metadata":{},"sourceType":"module"}