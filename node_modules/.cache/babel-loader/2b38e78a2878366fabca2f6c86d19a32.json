{"ast":null,"code":"import _objectSpread from\"/Users/arjun/Documents/Personal/Test/Theta/UI Theme/theta-demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"/Users/arjun/Documents/Personal/Test/Theta/UI Theme/theta-demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import Mock from\"../mock\";import*as _ from\"lodash\";import shortid from\"shortid\";var TodoDB={todo:[{id:1,title:\"API problem\",note:\"API is malfunctioning. kindly fix it\",important:true,starred:true,done:false,read:false,selected:false,startDate:new Date(),dueDate:new Date(),tag:[1,2]},{id:2,title:\"Mobile problem\",note:\"Mobile is malfunctioning. fix it\",important:false,starred:false,done:true,read:true,selected:false,startDate:new Date(),dueDate:new Date(),tag:[2]},{id:3,title:\"API problem\",note:\"API is malfunctioning. fix it\",important:false,starred:false,done:true,read:false,selected:false,startDate:new Date(),dueDate:new Date(),tag:[1]},{id:4,title:\"API problem\",note:\"API is malfunctioning. fix it\",important:false,starred:false,done:false,read:true,selected:false,startDate:new Date(),dueDate:new Date(),tag:[1,2,3]},{id:5,title:\"API problem\",note:\"API is malfunctioning. fix it\",important:false,starred:false,done:true,read:false,selected:false,startDate:new Date(),dueDate:new Date(),tag:[1]}],tag:[{id:1,name:\"frontend\"},{id:2,name:\"backend\"},{id:3,name:\"API\"},{id:4,name:\"issue\"},{id:5,name:\"mobile\"}]};Mock.onGet(\"/api/todo/all\").reply(function(config){var response=TodoDB.todo;return[200,response];});Mock.onGet(\"/api/todo/tag\").reply(function(config){var response=TodoDB.tag;return[200,response];});Mock.onGet(\"/api/todo\").reply(function(config){var id=config.data;var response=TodoDB.todo.find(function(todo){return todo.id==id;});return[200,response];});Mock.onPost(\"/api/todo/reorder\").reply(function(config){var _JSON$parse=JSON.parse(config.data),todoList=_JSON$parse.todoList;TodoDB.todo=_toConsumableArray(todoList);var response=TodoDB.todo;return[200,response];});Mock.onPost(\"/api/todo/add\").reply(function(config){var _JSON$parse2=JSON.parse(config.data),todo=_JSON$parse2.todo;TodoDB.todo.push(_objectSpread(_objectSpread({},todo),{},{id:shortid.generate()}));var response=TodoDB.todo;return[200,response];});Mock.onPost(\"/api/todo/tag/add\").reply(function(config){var _JSON$parse3=JSON.parse(config.data),tag=_JSON$parse3.tag;TodoDB.tag.push(_objectSpread({},tag));var response=TodoDB.tag;return[200,response];});Mock.onPost(\"/api/todo/update\").reply(function(config){var _JSON$parse4=JSON.parse(config.data),todo=_JSON$parse4.todo;TodoDB.todo.map(function(t,index){if(t.id===todo.id){TodoDB.todo[index]=_objectSpread({},todo);}return\"dummy value\";});var response=TodoDB.todo;return[200,response];});Mock.onPost(\"/api/todo/delete\").reply(function(config){var _JSON$parse5=JSON.parse(config.data),todo=_JSON$parse5.todo;_.remove(TodoDB.todo,function(t){return t.id===todo.id;});var response=TodoDB.todo;return[200,response];});Mock.onPost(\"/api/todo/tag/delete\").reply(function(config){var _JSON$parse6=JSON.parse(config.data),tag=_JSON$parse6.tag;_.remove(TodoDB.tag,function(t){return t.id===tag.id;});var response=TodoDB.tag;return[200,response];});// Mock.onPost(\"/api/chat/create-chat-room\").reply(config => {\n//   let data = JSON.parse(config.data);\n//   let { id, chatId, ...rest } = data;\n//   ChatDB.user.map(user => {\n//     if (id === user.id) {\n//       user.chatInfo.push({ chatId, ...rest });\n//     }\n//   });\n//   ChatDB.chatCollection.push({\n//     id: chatId,\n//     chats: []\n//   });\n//   let temp;\n//   let response = ChatDB.user\n//     .find(user => user.id === id)\n//     .chatInfo.map(contact => {\n//       temp = ChatDB.contacts.find(user => user.id === contact.contactId);\n//       return { ...temp, ...contact };\n//     });\n//   response = _.orderBy(response, [\"lastChatTime\"], [\"desc\"]);\n//   console.log(response);\n//   return [200, response];\n// });","map":{"version":3,"sources":["/Users/arjun/Documents/Personal/Test/Theta/UI Theme/theta-demo/src/fake-db/db/todos.js"],"names":["Mock","_","shortid","TodoDB","todo","id","title","note","important","starred","done","read","selected","startDate","Date","dueDate","tag","name","onGet","reply","config","response","data","find","onPost","JSON","parse","todoList","push","generate","map","t","index","remove"],"mappings":"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","sourcesContent":["import Mock from \"../mock\";\nimport * as _ from \"lodash\";\nimport shortid from \"shortid\";\n\nconst TodoDB = {\n  todo: [\n    {\n      id: 1,\n      title: \"API problem\",\n      note: \"API is malfunctioning. kindly fix it\",\n      important: true,\n      starred: true,\n      done: false,\n      read: false,\n      selected: false,\n      startDate: new Date(),\n      dueDate: new Date(),\n\n      tag: [1, 2]\n    },\n    {\n      id: 2,\n      title: \"Mobile problem\",\n      note: \"Mobile is malfunctioning. fix it\",\n      important: false,\n      starred: false,\n      done: true,\n      read: true,\n      selected: false,\n      startDate: new Date(),\n      dueDate: new Date(),\n\n      tag: [2]\n    },\n    {\n      id: 3,\n      title: \"API problem\",\n      note: \"API is malfunctioning. fix it\",\n      important: false,\n      starred: false,\n      done: true,\n      read: false,\n      selected: false,\n      startDate: new Date(),\n      dueDate: new Date(),\n\n      tag: [1]\n    },\n    {\n      id: 4,\n      title: \"API problem\",\n      note: \"API is malfunctioning. fix it\",\n      important: false,\n      starred: false,\n      done: false,\n      read: true,\n      selected: false,\n      startDate: new Date(),\n      dueDate: new Date(),\n\n      tag: [1, 2, 3]\n    },\n    {\n      id: 5,\n      title: \"API problem\",\n      note: \"API is malfunctioning. fix it\",\n      important: false,\n      starred: false,\n      done: true,\n      read: false,\n      selected: false,\n      startDate: new Date(),\n      dueDate: new Date(),\n\n      tag: [1]\n    }\n  ],\n\n  tag: [\n    {\n      id: 1,\n      name: \"frontend\"\n    },\n    {\n      id: 2,\n      name: \"backend\"\n    },\n    {\n      id: 3,\n      name: \"API\"\n    },\n    {\n      id: 4,\n      name: \"issue\"\n    },\n    {\n      id: 5,\n      name: \"mobile\"\n    }\n  ]\n};\n\nMock.onGet(\"/api/todo/all\").reply(config => {\n  const response = TodoDB.todo;\n  return [200, response];\n});\n\nMock.onGet(\"/api/todo/tag\").reply(config => {\n  const response = TodoDB.tag;\n  return [200, response];\n});\n\nMock.onGet(\"/api/todo\").reply(config => {\n  const id = config.data;\n\n  const response = TodoDB.todo.find(todo => todo.id == id);\n  return [200, response];\n});\n\nMock.onPost(\"/api/todo/reorder\").reply(config => {\n  let { todoList } = JSON.parse(config.data);\n\n  TodoDB.todo = [...todoList];\n  let response = TodoDB.todo;\n  return [200, response];\n});\n\nMock.onPost(\"/api/todo/add\").reply(config => {\n  let { todo } = JSON.parse(config.data);\n  TodoDB.todo.push({ ...todo, id: shortid.generate() });\n  let response = TodoDB.todo;\n  return [200, response];\n});\n\nMock.onPost(\"/api/todo/tag/add\").reply(config => {\n  let { tag } = JSON.parse(config.data);\n  TodoDB.tag.push({ ...tag });\n  let response = TodoDB.tag;\n  return [200, response];\n});\n\nMock.onPost(\"/api/todo/update\").reply(config => {\n  let { todo } = JSON.parse(config.data);\n\n  TodoDB.todo.map((t, index) => {\n    if (t.id === todo.id) {\n      TodoDB.todo[index] = { ...todo };\n    }\n    return \"dummy value\";\n  });\n\n  let response = TodoDB.todo;\n  return [200, response];\n});\n\nMock.onPost(\"/api/todo/delete\").reply(config => {\n  let { todo } = JSON.parse(config.data);\n  _.remove(TodoDB.todo, t => t.id === todo.id);\n  let response = TodoDB.todo;\n  return [200, response];\n});\n\nMock.onPost(\"/api/todo/tag/delete\").reply(config => {\n  let { tag } = JSON.parse(config.data);\n  _.remove(TodoDB.tag, t => t.id === tag.id);\n  let response = TodoDB.tag;\n  return [200, response];\n});\n\n// Mock.onPost(\"/api/chat/create-chat-room\").reply(config => {\n//   let data = JSON.parse(config.data);\n//   let { id, chatId, ...rest } = data;\n//   ChatDB.user.map(user => {\n//     if (id === user.id) {\n//       user.chatInfo.push({ chatId, ...rest });\n//     }\n//   });\n//   ChatDB.chatCollection.push({\n//     id: chatId,\n//     chats: []\n//   });\n\n//   let temp;\n//   let response = ChatDB.user\n//     .find(user => user.id === id)\n//     .chatInfo.map(contact => {\n//       temp = ChatDB.contacts.find(user => user.id === contact.contactId);\n//       return { ...temp, ...contact };\n//     });\n//   response = _.orderBy(response, [\"lastChatTime\"], [\"desc\"]);\n//   console.log(response);\n\n//   return [200, response];\n// });\n"]},"metadata":{},"sourceType":"module"}